=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'uri'

module SwaggerClient
  class PolicyInfraEnforcementPointsEdgeClusterApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List Edge Clusters under an Enforcement Point
    # Paginated list of all Edge Clusters under an Enforcement Point 
    # @param site_id 
    # @param enforcementpoint_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyEdgeClusterListResult]
    def list_edge_clusters_for_enforcement_point(site_id, enforcementpoint_id, opts = {})
      data, _status_code, _headers = list_edge_clusters_for_enforcement_point_with_http_info(site_id, enforcementpoint_id, opts)
      data
    end

    # List Edge Clusters under an Enforcement Point
    # Paginated list of all Edge Clusters under an Enforcement Point 
    # @param site_id 
    # @param enforcementpoint_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyEdgeClusterListResult, Fixnum, Hash)>] PolicyEdgeClusterListResult data, response status code and response headers
    def list_edge_clusters_for_enforcement_point_with_http_info(site_id, enforcementpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyInfraEnforcementPointsEdgeClusterApi.list_edge_clusters_for_enforcement_point ...'
      end
      # verify the required parameter 'site_id' is set
      if @api_client.config.client_side_validation && site_id.nil?
        fail ArgumentError, "Missing the required parameter 'site_id' when calling PolicyInfraEnforcementPointsEdgeClusterApi.list_edge_clusters_for_enforcement_point"
      end
      # verify the required parameter 'enforcementpoint_id' is set
      if @api_client.config.client_side_validation && enforcementpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'enforcementpoint_id' when calling PolicyInfraEnforcementPointsEdgeClusterApi.list_edge_clusters_for_enforcement_point"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyInfraEnforcementPointsEdgeClusterApi.list_edge_clusters_for_enforcement_point, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyInfraEnforcementPointsEdgeClusterApi.list_edge_clusters_for_enforcement_point, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/sites/{site-id}/enforcement-points/{enforcementpoint-id}/edge-clusters'.sub('{' + 'site-id' + '}', site_id.to_s).sub('{' + 'enforcementpoint-id' + '}', enforcementpoint_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyEdgeClusterListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyInfraEnforcementPointsEdgeClusterApi#list_edge_clusters_for_enforcement_point\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a Edge Cluster under an Enforcement Point
    # Read a Edge Cluster under an Enforcement Point 
    # @param site_id Site id
    # @param enforcementpoint_id EnforcementPoint id
    # @param edge_cluster_id Edge Cluster id
    # @param [Hash] opts the optional parameters
    # @return [PolicyEdgeCluster]
    def read_edge_cluster_for_enforcement_point(site_id, enforcementpoint_id, edge_cluster_id, opts = {})
      data, _status_code, _headers = read_edge_cluster_for_enforcement_point_with_http_info(site_id, enforcementpoint_id, edge_cluster_id, opts)
      data
    end

    # Read a Edge Cluster under an Enforcement Point
    # Read a Edge Cluster under an Enforcement Point 
    # @param site_id Site id
    # @param enforcementpoint_id EnforcementPoint id
    # @param edge_cluster_id Edge Cluster id
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyEdgeCluster, Fixnum, Hash)>] PolicyEdgeCluster data, response status code and response headers
    def read_edge_cluster_for_enforcement_point_with_http_info(site_id, enforcementpoint_id, edge_cluster_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyInfraEnforcementPointsEdgeClusterApi.read_edge_cluster_for_enforcement_point ...'
      end
      # verify the required parameter 'site_id' is set
      if @api_client.config.client_side_validation && site_id.nil?
        fail ArgumentError, "Missing the required parameter 'site_id' when calling PolicyInfraEnforcementPointsEdgeClusterApi.read_edge_cluster_for_enforcement_point"
      end
      # verify the required parameter 'enforcementpoint_id' is set
      if @api_client.config.client_side_validation && enforcementpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'enforcementpoint_id' when calling PolicyInfraEnforcementPointsEdgeClusterApi.read_edge_cluster_for_enforcement_point"
      end
      # verify the required parameter 'edge_cluster_id' is set
      if @api_client.config.client_side_validation && edge_cluster_id.nil?
        fail ArgumentError, "Missing the required parameter 'edge_cluster_id' when calling PolicyInfraEnforcementPointsEdgeClusterApi.read_edge_cluster_for_enforcement_point"
      end
      # resource path
      local_var_path = '/infra/sites/{site-id}/enforcement-points/{enforcementpoint-id}/edge-clusters/{edge-cluster-id}'.sub('{' + 'site-id' + '}', site_id.to_s).sub('{' + 'enforcementpoint-id' + '}', enforcementpoint_id.to_s).sub('{' + 'edge-cluster-id' + '}', edge_cluster_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyEdgeCluster')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyInfraEnforcementPointsEdgeClusterApi#read_edge_cluster_for_enforcement_point\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
