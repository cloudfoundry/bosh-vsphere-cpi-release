=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'uri'

module SwaggerClient
  class PolicyDfwContextProfileApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Delete Policy Context Profile
    # Deletes the specified Policy Context Profile. If the Policy Context Profile is consumed in a firewall rule, it won't get deleted. 
    # @param context_profile_id Policy Context Profile Id
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere  (default to false)
    # @return [nil]
    def delete_policy_context_profile(context_profile_id, opts = {})
      delete_policy_context_profile_with_http_info(context_profile_id, opts)
      nil
    end

    # Delete Policy Context Profile
    # Deletes the specified Policy Context Profile. If the Policy Context Profile is consumed in a firewall rule, it won&#39;t get deleted. 
    # @param context_profile_id Policy Context Profile Id
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere 
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_context_profile_with_http_info(context_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyDfwContextProfileApi.delete_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling PolicyDfwContextProfileApi.delete_policy_context_profile"
      end
      # resource path
      local_var_path = '/infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'force'] = opts[:'force'] if !opts[:'force'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyDfwContextProfileApi#delete_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get PolicyContextProfile
    # Get a single PolicyContextProfile by id 
    # @param context_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [PolicyContextProfile]
    def get_policy_context_profile(context_profile_id, opts = {})
      data, _status_code, _headers = get_policy_context_profile_with_http_info(context_profile_id, opts)
      data
    end

    # Get PolicyContextProfile
    # Get a single PolicyContextProfile by id 
    # @param context_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyContextProfile, Fixnum, Hash)>] PolicyContextProfile data, response status code and response headers
    def get_policy_context_profile_with_http_info(context_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyDfwContextProfileApi.get_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling PolicyDfwContextProfileApi.get_policy_context_profile"
      end
      # resource path
      local_var_path = '/infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyDfwContextProfileApi#get_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get PolicyContextProfiles
    # Get all PolicyContextProfiles 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def list_policy_context_profiles(opts = {})
      data, _status_code, _headers = list_policy_context_profiles_with_http_info(opts)
      data
    end

    # Get PolicyContextProfiles
    # Get all PolicyContextProfiles 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def list_policy_context_profiles_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyDfwContextProfileApi.list_policy_context_profiles ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyDfwContextProfileApi.list_policy_context_profiles, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyDfwContextProfileApi.list_policy_context_profiles, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/context-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyDfwContextProfileApi#list_policy_context_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Policy Context Profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. Alternatively, to get a list of supported attributes and sub-attributes fire the following REST API GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def list_profile_supported_attributes(opts = {})
      data, _status_code, _headers = list_profile_supported_attributes_with_http_info(opts)
      data
    end

    # List Policy Context Profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. Alternatively, to get a list of supported attributes and sub-attributes fire the following REST API GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def list_profile_supported_attributes_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyDfwContextProfileApi.list_profile_supported_attributes ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyDfwContextProfileApi.list_profile_supported_attributes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyDfwContextProfileApi.list_profile_supported_attributes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/context-profiles/attributes'

      # query parameters
      query_params = {}
      query_params[:'attribute_key'] = opts[:'attribute_key'] if !opts[:'attribute_key'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyDfwContextProfileApi#list_profile_supported_attributes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can't have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_create_or_update_policy_context_profile(context_profile_id, policy_context_profile, opts = {})
      patch_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts)
      nil
    end

    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can&#39;t have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyDfwContextProfileApi.patch_create_or_update_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling PolicyDfwContextProfileApi.patch_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'policy_context_profile' is set
      if @api_client.config.client_side_validation && policy_context_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_context_profile' when calling PolicyDfwContextProfileApi.patch_create_or_update_policy_context_profile"
      end
      # resource path
      local_var_path = '/infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_context_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyDfwContextProfileApi#patch_create_or_update_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can't have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @return [PolicyContextProfile]
    def put_create_or_update_policy_context_profile(context_profile_id, policy_context_profile, opts = {})
      data, _status_code, _headers = put_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts)
      data
    end

    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can&#39;t have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyContextProfile, Fixnum, Hash)>] PolicyContextProfile data, response status code and response headers
    def put_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyDfwContextProfileApi.put_create_or_update_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling PolicyDfwContextProfileApi.put_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'policy_context_profile' is set
      if @api_client.config.client_side_validation && policy_context_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_context_profile' when calling PolicyDfwContextProfileApi.put_create_or_update_policy_context_profile"
      end
      # resource path
      local_var_path = '/infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_context_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyDfwContextProfileApi#put_create_or_update_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
