=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::TraceflowObservationDroppedLogical
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TraceflowObservationDroppedLogical' do
  before do
    # run before each test
    @instance = SwaggerClient::TraceflowObservationDroppedLogical.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TraceflowObservationDroppedLogical' do
    it 'should create an instance of TraceflowObservationDroppedLogical' do
      expect(@instance).to be_instance_of(SwaggerClient::TraceflowObservationDroppedLogical)
    end
  end
  describe 'test attribute "timestamp_micro"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "component_sub_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["LR_TIER0", "LR_TIER1", "LR_VRF_TIER0", "LS_TRANSIT", "UNKNOWN"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.component_sub_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "resource_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["TraceflowObservationForwarded", "TraceflowObservationDropped", "TraceflowObservationDelivered", "TraceflowObservationReceived", "TraceflowObservationForwardedLogical", "TraceflowObservationDroppedLogical", "TraceflowObservationReceivedLogical"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.resource_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "component_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PHYSICAL", "LR", "LS", "DFW", "BRIDGE", "EDGE_TUNNEL", "EDGE_HOSTSWITCH", "FW_BRIDGE", "LOAD_BALANCER", "NAT", "IPSEC", "SERVICE_INSERTION", "UNKNOWN"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.component_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "transport_node_name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "timestamp"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "transport_node_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "sequence_no"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "transport_node_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["ESX", "RHELKVM", "UBUNTUKVM", "EDGE", "PUBLIC_CLOUD_GATEWAY_NODE", "OTHERS", "HYPERV"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.transport_node_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "component_name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "reason"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["ARP_FAIL", "BFD", "DHCP", "FW_RULE", "GENEVE", "GRE", "IFACE", "IP", "IP_REASS", "IPSEC", "IPSEC_VTI", "L2VPN", "L4PORT", "LB", "LROUTER", "LSERVICE", "LSWITCH", "MD_PROXY", "NAT", "NEIGH", "NO_ROUTE", "SERVICE_INSERT", "TTL_ZERO", "TUNNEL", "VXLAN", "VXSTT", "VMC_NO_RESPONSE", "UNKNOWN"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.reason = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "lport_name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "acl_rule_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "lport_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "component_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
