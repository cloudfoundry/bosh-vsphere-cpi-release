=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::PacketCaptureRequest
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PacketCaptureRequest' do
  before do
    # run before each test
    @instance = SwaggerClient::PacketCaptureRequest.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PacketCaptureRequest' do
    it 'should create an instance of PacketCaptureRequest' do
      expect(@instance).to be_instance_of(SwaggerClient::PacketCaptureRequest)
    end
  end
  describe 'test attribute "node"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "cappoint"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["VNIC", "VMKNIC", "VMNIC", "VDRPORT", "DVFILTER", "LOGICALPORT", "FCPORT", "VIF"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.cappoint = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "capduration"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "capamount"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "capsource"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["CLI", "UI"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.capsource = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "filtertype"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PRE", "POST"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.filtertype = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "direction"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["INPUT", "OUTPUT", "DUAL"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.direction = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "capfilesize"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "options"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "streamport"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "capsnaplen"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "caprate"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "capvalue"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "streamaddress"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "capmode"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["STANDALONE", "STREAM"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.capmode = value }.not_to raise_error
      # end
    end
  end

end
