=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::RedistributionRule
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RedistributionRule' do
  before do
    # run before each test
    @instance = SwaggerClient::RedistributionRule.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RedistributionRule' do
    it 'should create an instance of RedistributionRule' do
      expect(@instance).to be_instance_of(SwaggerClient::RedistributionRule)
    end
  end
  describe 'test attribute "sources"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["STATIC", "T0_STATIC", "NSX_CONNECTED", "T0_CONNECTED", "NSX_STATIC", "T1_STATIC", "T0_UPLINK", "T0_DOWNLINK", "T0_ROUTER_LINK", "T0_CSP", "T0_LOOPBACK", "T0_DNS_FORWARDER_IP", "T0_IPSEC_LOCAL_IP", "TIER0_NAT", "T0_NAT", "TIER1_NAT", "T1_NAT", "TIER1_LB_VIP", "T1_LB_VIP", "TIER1_LB_SNAT", "T1_LB_SNAT", "T1_DNS_FORWARDER_IP", "T1_CONNECTED", "T1_DOWNLINK", "T1_CSP", "BGP"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.sources = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "route_map_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "description"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "display_name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "destination"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["STATIC", "T0_STATIC", "NSX_CONNECTED", "T0_CONNECTED", "NSX_STATIC", "T1_STATIC", "T0_UPLINK", "T0_DOWNLINK", "T0_ROUTER_LINK", "T0_CSP", "T0_LOOPBACK", "T0_DNS_FORWARDER_IP", "T0_IPSEC_LOCAL_IP", "TIER0_NAT", "T0_NAT", "TIER1_NAT", "T1_NAT", "TIER1_LB_VIP", "T1_LB_VIP", "TIER1_LB_SNAT", "T1_LB_SNAT", "T1_DNS_FORWARDER_IP", "T1_CONNECTED", "T1_DOWNLINK", "T1_CSP", "BGP"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.destination = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "address_family"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["IPV4", "IPV6", "IPV4_AND_IPV6"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.address_family = value }.not_to raise_error
      # end
    end
  end

end
