=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyConnectivitySegmentsPortsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyConnectivitySegmentsPortsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyConnectivitySegmentsPortsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyConnectivitySegmentsPortsApi' do
    it 'should create an instance of PolicyConnectivitySegmentsPortsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyConnectivitySegmentsPortsApi)
    end
  end

  # unit tests for create_or_replace_infra_segment_port
  # Create or update an infra segment port
  # Create an infra segment port if it does not exist based on the IDs, or update existing port information by replacing the port object already exists. 
  # @param segment_id 
  # @param port_id 
  # @param segment_port 
  # @param [Hash] opts the optional parameters
  # @return [SegmentPort]
  describe 'create_or_replace_infra_segment_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_replace_tier1_segment_port
  # Create or update a Tier-1 segment port
  # Create a Tier-1 segment port if it does not exist based on the IDs, or update existing port information by replacing the port object already exists. 
  # @param tier_1_id 
  # @param segment_id 
  # @param port_id 
  # @param segment_port 
  # @param [Hash] opts the optional parameters
  # @return [SegmentPort]
  describe 'create_or_replace_tier1_segment_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_infra_segment_port
  # Delete an infra segment port
  # Delete an infra segment port by giving ID. 
  # @param segment_id 
  # @param port_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_infra_segment_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tier1_segment_port
  # Delete a Tier-1 segment port
  # Delete a Tier-1 segment port by giving ID. 
  # @param tier_1_id 
  # @param segment_id 
  # @param port_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_tier1_segment_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_infra_segment_port
  # Get infra segment port by ID
  # Get detail information on an infra segment port by giving ID. 
  # @param segment_id 
  # @param port_id 
  # @param [Hash] opts the optional parameters
  # @return [SegmentPort]
  describe 'get_infra_segment_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tier1_segment_port
  # Get Tier-1 segment port by ID
  # Get detail information on a Tier-1 segment port by giving ID. 
  # @param tier_1_id 
  # @param segment_id 
  # @param port_id 
  # @param [Hash] opts the optional parameters
  # @return [SegmentPort]
  describe 'get_tier1_segment_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_infra_segment_ports
  # List infra segment ports
  # List all the ports for an infra. 
  # @param segment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [SegmentPortListResult]
  describe 'list_infra_segment_ports test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tier1_segment_ports
  # List Tier-1 segment ports
  # List all the ports for a Tier-1 segment. 
  # @param tier_1_id 
  # @param segment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [SegmentPortListResult]
  describe 'list_tier1_segment_ports test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_infra_segment_port
  # Patch an infra segment port
  # Create an infra segment port if it does not exist based on the IDs, or update existing port information by replacing the port object fields which presents in the request body. 
  # @param segment_id 
  # @param port_id 
  # @param segment_port 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_infra_segment_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_tier1_segment_port
  # Patch a Tier-1 segment port
  # Create a Tier-1 segment port if it does not exist based on the IDs, or update existing port information by replacing the port object fields which presents in the request body. 
  # @param tier_1_id 
  # @param segment_id 
  # @param port_id 
  # @param segment_port 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_tier1_segment_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
