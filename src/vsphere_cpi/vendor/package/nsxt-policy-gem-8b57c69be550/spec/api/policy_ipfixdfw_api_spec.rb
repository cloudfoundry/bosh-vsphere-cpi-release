=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyIpfixdfwApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyIpfixdfwApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyIpfixdfwApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyIpfixdfwApi' do
    it 'should create an instance of PolicyIpfixdfwApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyIpfixdfwApi)
    end
  end

  # unit tests for create_or_replace_ipfixdfw_collector_profile
  # Create or Replace IPFIX dfw collector profile
  # Create or Replace IPFIX dfw collector profile. IPFIX data will be sent to IPFIX collector port. 
  # @param ipfix_dfw_collector_profile_id IPFIX dfw collector profile id
  # @param ipfixdfw_collector_profile 
  # @param [Hash] opts the optional parameters
  # @return [IPFIXDFWCollectorProfile]
  describe 'create_or_replace_ipfixdfw_collector_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_replace_ipfixdfw_profile
  # Create or Replace IPFIX DFW collection Config.
  # Create or replace IPFIX DFW profile. Config will start forwarding data to provided IPFIX DFW collector. 
  # @param ipfix_dfw_profile_id IPFIX DFW Profile ID
  # @param ipfixdfw_profile 
  # @param [Hash] opts the optional parameters
  # @return [IPFIXDFWProfile]
  describe 'create_or_replace_ipfixdfw_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_ipfixdfw_collector_profile
  # Delete IPFIX dfw Collector profile
  # API deletes IPFIX dfw collector profile. Flow forwarding to collector will be stopped. 
  # @param ipfix_dfw_collector_profile_id IPFIX dfw collector Profile id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_ipfixdfw_collector_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_ipfixdfw_profile
  # Delete IPFIX DFW Profile
  # API deletes IPFIX DFW Profile. Selected IPFIX Collectors will stop receiving flows. 
  # @param ipfix_dfw_profile_id IPFIX DFW Profile ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_ipfixdfw_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_ipfixdfw_collector_profiles
  # List IPFIX Collector profiles.
  # API will provide list of all IPFIX dfw collector profiles and their details. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [IPFIXDFWCollectorProfileListResult]
  describe 'list_ipfixdfw_collector_profiles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_ipfixdfw_profiles
  # List IPFIX DFW Profile
  # API provides list IPFIX DFW profiles available on selected logical DFW. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [IPFIXDFWProfileListResult]
  describe 'list_ipfixdfw_profiles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_ipfixdfw_collector_profile
  # IPFIX dfw collector profile id
  # Create a new IPFIX dfw collector profile if the IPFIX dfw collector profile with given id does not already exist. If the IPFIX dfw collector profile with the given id already exists, patch with the existing IPFIX dfw collector profile. 
  # @param ipfix_dfw_collector_profile_id 
  # @param ipfixdfw_collector_profile 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_ipfixdfw_collector_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_ipfixdfw_profile
  # Patch IPFIX DFW profile
  # Create a new IPFIX DFW profile if the IPFIX DFW profile with given id does not already exist. If the IPFIX DFW profile with the given id already exists, patch with the existing IPFIX DFW profile. 
  # @param ipfix_dfw_profile_id IPFIX DFW Profile ID
  # @param ipfixdfw_profile 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_ipfixdfw_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_ipfixdfw_collector_profile
  # Get IPFIX dfw Collector profile
  # API will return details of IPFIX dfw collector profile. If profile does not exist, it will return 404. 
  # @param ipfix_dfw_collector_profile_id IPFIX dfw collector profile id
  # @param [Hash] opts the optional parameters
  # @return [IPFIXDFWCollectorProfile]
  describe 'read_ipfixdfw_collector_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_ipfixdfw_profile
  # Get IPFIX DFW Profile
  # API will return details of IPFIX DFW profile. 
  # @param ipfix_dfw_profile_id IPFIX DFW collection id
  # @param [Hash] opts the optional parameters
  # @return [IPFIXDFWProfile]
  describe 'read_ipfixdfw_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
