=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicySiApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicySiApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicySiApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicySiApi' do
    it 'should create an instance of PolicySiApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicySiApi)
    end
  end

  # unit tests for create_byod_policy_service_instance
  # Create service instance
  # Create BYOD Service Instance which represent instance of service definition created on manager. 
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Byod service instance id
  # @param byod_policy_service_instance 
  # @param [Hash] opts the optional parameters
  # @return [ByodPolicyServiceInstance]
  describe 'create_byod_policy_service_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_update_redirection_policy
  # Create or update redirection policy
  # Create or update the redirection policy. 
  # @param domain_id Domain id
  # @param redirection_policy_id Redirection map id
  # @param redirection_policy 
  # @param [Hash] opts the optional parameters
  # @return [RedirectionPolicy]
  describe 'create_or_update_redirection_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_update_redirection_rule
  # Update redirection rule
  # Create a rule with the rule-id is not already present, otherwise update the rule. 
  # @param domain_id Domain id
  # @param redirection_policy_id Redirection map id
  # @param rule_id Rule id
  # @param redirection_rule 
  # @param [Hash] opts the optional parameters
  # @return [RedirectionRule]
  describe 'create_or_update_redirection_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_update_service_reference
  # Create service reference
  # Create Service Reference representing the intent to consume a given 3rd party service. 
  # @param service_reference_id Service reference id
  # @param service_reference 
  # @param [Hash] opts the optional parameters
  # @return [ServiceReference]
  describe 'create_or_update_service_reference test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_update_virtual_endpoint
  # Create or update virtual endpoint
  # Create or update virtual endpoint. 
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param virtual_endpoint_id Virtual endpoint id
  # @param virtual_endpoint 
  # @param [Hash] opts the optional parameters
  # @return [VirtualEndpoint]
  describe 'create_or_update_virtual_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_policy_service_instance
  # Create service instance
  # Create service instance. 
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param policy_service_instance 
  # @param [Hash] opts the optional parameters
  # @return [PolicyServiceInstance]
  describe 'create_policy_service_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_policy_service_profile
  # Create or update service profile
  # Create or update Service profile to specify vendor temp- late attributes for a given 3rd party service.
  # @param service_reference_id Service reference id
  # @param service_profile_id Service profile id
  # @param policy_service_profile 
  # @param [Hash] opts the optional parameters
  # @return [PolicyServiceProfile]
  describe 'create_policy_service_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_service_chain
  # Create  or update service chain
  # Create or update Service chain representing the sequence in which 3rd party services must be consumed. 
  # @param service_chain_id Service chain id
  # @param policy_service_chain 
  # @param [Hash] opts the optional parameters
  # @return [PolicyServiceChain]
  describe 'create_service_chain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_service_definition
  # Create a Service Definition on given enforcement point.
  # Create a Service Definition on given enforcement point.
  # @param enforcement_point_id Enforcement point id
  # @param service_definition 
  # @param [Hash] opts the optional parameters
  # @return [ServiceDefinition]
  describe 'create_service_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_service_instance_endpoint
  # Create service instance endpoint
  # Create service instance endpoint with given request if not exist. Modification of service instance endpoint is not allowed. 
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param service_instance_endpoint_id Service instance endpoint id
  # @param service_instance_endpoint 
  # @param [Hash] opts the optional parameters
  # @return [ServiceInstanceEndpoint]
  describe 'create_service_instance_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_byod_policy_service_instance
  # Delete BYOD policy service instance
  # Delete BYOD policy service instance
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_byod_policy_service_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_policy_service_chain
  # Delete Service chain
  # This API can be user to delete service chain with given service-chain-id.
  # @param service_chain_id Id of Service chain
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_policy_service_chain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_policy_service_instance
  # Delete policy service instance
  # Delete policy service instance
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_policy_service_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_policy_service_instance_endpoint
  # Delete policy service instance endpoint
  # Delete policy service instance endpoint
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param service_instance_endpoint_id Service instance endpoint id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_policy_service_instance_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_policy_service_profile
  # Delete Service profile
  # This API can be used to delete service profile with given service-profile-id
  # @param service_reference_id Id of Service Reference
  # @param service_profile_id Service profile id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_policy_service_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_redirection_policy
  # Delete redirection policy
  # Delete redirection policy.
  # @param domain_id Domain id
  # @param redirection_policy_id Redirection map id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_redirection_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_redirection_rule
  # Delete RedirectionRule
  # Delete RedirectionRule
  # @param domain_id Domain ID
  # @param redirection_policy_id Redirection Map ID
  # @param rule_id RedirectionRule ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_redirection_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_service_definition
  # Delete an existing Service Definition on the given enforcement point 
  # Delete an existing Service Definition on the given enforcement point. 
  # @param enforcement_point_id Enforcement point id
  # @param service_definition_id Id of service definition
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_service_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_service_reference
  # Delete Service Reference
  # This API can be used to delete a service reference with the given service-reference-id.
  # @param service_reference_id Id of Service Reference
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_service_reference test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_virtual_endpoint
  # Delete virtual endpoint
  # Delete virtual endpoint
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param virtual_endpoint_id Virtual endpoint id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_virtual_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_policy_service_instance_statistics
  # Get statistics for all runtimes associated with this PolicyServiceInstance
  # Get statistics for all data NICs on all runtimes associated with this PolicyServiceInstance. 
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @return [PolicyServiceInstanceStatistics]
  describe 'get_policy_service_instance_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_policy_service_profile_groups
  # Get Groups used in Redirection rules for a given Service Profile.
  # List of Groups used in Redirection rules for a given Service Profile. 
  # @param service_reference_id Service reference id
  # @param service_profile_id Service profile id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @return [ServiceProfileGroups]
  describe 'get_policy_service_profile_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_byod_policy_service_instances_for_tier0
  # Read all BYOD service instance objects under a tier-0
  # Read all BYOD service instance objects under a tier-0
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [ByodPolicyServiceInstanceListResult]
  describe 'list_byod_policy_service_instances_for_tier0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_policy_service_chain_mappings
  # List all service chain mappings for given service profile.
  # List all service chain mappings in the system for the given service profile. If no explicit enforcement point is provided in the request, will return for default. Else, will return for specified points. 
  # @param service_reference_id Service reference id
  # @param service_profile_id Service profile id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @return [ServiceChainMappingListResult]
  describe 'list_policy_service_chain_mappings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_policy_service_chains
  # List service chains
  # List all the service chains available for service insertion 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [PolicyServiceChainListResult]
  describe 'list_policy_service_chains test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_policy_service_instance_endpoints
  # List all service instance endpoint
  # List all service instance endpoint
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [ServiceInstanceEndpointListResult]
  describe 'list_policy_service_instance_endpoints test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_policy_service_profiles
  # List service profiles
  # List all the service profiles available for given service reference 
  # @param service_reference_id Service reference id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [PolicyServiceProfileListResult]
  describe 'list_policy_service_profiles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_redirection_policies
  # List redirection policys for a domain
  # List redirection policys for a domain
  # @param domain_id Domain id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [RedirectionPolicyListResult]
  describe 'list_redirection_policies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_redirection_rules
  # List rules
  # List rules
  # @param domain_id Domain id
  # @param redirection_policy_id Redirection map id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [RedirectionRuleListResult]
  describe 'list_redirection_rules test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_definitions
  # List all Service Definitions registered on given enforcement point.
  # List all Service Definitions registered on given enforcement point. 
  # @param enforcement_point_id Enforcement point id
  # @param [Hash] opts the optional parameters
  # @return [ServiceInsertionServiceListResult]
  describe 'list_service_definitions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_references
  # List service references
  # List all the partner service references available for service insertion 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [ServiceReferenceListResult]
  describe 'list_service_references test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_virtual_endpoints_for_tier0
  # List all virtual endpoints
  # List all virtual endpoints
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [VirtualEndpointListResult]
  describe 'list_virtual_endpoints_for_tier0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_byod_policy_service_instance
  # Create service instance
  # Create BYOD Service Instance which represent instance of service definition created on manager. 
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param byod_policy_service_instance 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_byod_policy_service_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_policy_service_instance
  # Create service instance
  # Create Service Instance. 
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param policy_service_instance 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_policy_service_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_policy_service_profile
  # Create service profile
  # Create Service profile to specify vendor template attri- butes for a given 3rd party service.
  # @param service_reference_id Service reference id
  # @param service_profile_id Service profile id
  # @param policy_service_profile 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_policy_service_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_redirection_policy
  # Create or update redirection policy
  # Create or update the redirection policy. 
  # @param domain_id Domain id
  # @param redirection_policy_id Redirection map id
  # @param redirection_policy 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_redirection_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_redirection_rule
  # Update redirection rule
  # Create a rule with the rule-id is not already present, otherwise update the rule. 
  # @param domain_id Domain id
  # @param redirection_policy_id RedirectionPolicy id
  # @param rule_id rule id
  # @param redirection_rule 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_redirection_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_service_chain
  # Create service chain
  # Create Service chain representing the sequence in which 3rd party services must be consumed. 
  # @param service_chain_id Service chain id
  # @param policy_service_chain 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_service_chain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_service_instance_endpoint
  # Create service instance endpoint
  # Create Service instance endpoint. 
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param service_instance_endpoint_id Service instance endpoint id
  # @param service_instance_endpoint 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_service_instance_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_service_reference
  # Create service reference
  # Create Service Reference representing the intent to consume a given 3rd party service. 
  # @param service_reference_id Service reference id
  # @param service_reference 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_service_reference test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_virtual_endpoint
  # Create or update virtual endpoint
  # Create or update virtual endpoint. 
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param virtual_endpoint_id Virtual endpoint id
  # @param virtual_endpoint 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_virtual_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_all_policy_service_instances_for_tier0
  # Read all service instance objects under a tier-0
  # Read all service instance objects under a tier-0
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [PolicyServiceInstanceListResult]
  describe 'read_all_policy_service_instances_for_tier0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_byod_policy_service_instance
  # Read byod service instance
  # Read byod service instance
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param [Hash] opts the optional parameters
  # @return [ByodPolicyServiceInstance]
  describe 'read_byod_policy_service_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_partner_service
  # Read partner service identified by provided name
  # Read the specific partner service identified by provided name.
  # @param service_name Name of the service
  # @param [Hash] opts the optional parameters
  # @return [ServiceDefinition]
  describe 'read_partner_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_partner_services
  # Read partner services
  # Read all the partner services available for service insertion
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [ServiceInsertionServiceListResult]
  describe 'read_partner_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_policy_service_instance
  # Read service instance
  # Read service instance
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param [Hash] opts the optional parameters
  # @return [PolicyServiceInstance]
  describe 'read_policy_service_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_policy_service_instance_endpoint
  # Read service instance endpoint
  # Read service instance endpoint
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param service_instance_endpoint_id Service instance endpoint id
  # @param [Hash] opts the optional parameters
  # @return [ServiceInstanceEndpoint]
  describe 'read_policy_service_instance_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_policy_service_profile
  # Read service profile
  # This API can be used to read service profile with given service-profile-id
  # @param service_reference_id Id of Service Reference
  # @param service_profile_id Service profile id
  # @param [Hash] opts the optional parameters
  # @return [PolicyServiceProfile]
  describe 'read_policy_service_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_redirection_policy
  # Read redirection policy
  # Read redirection policy. 
  # @param domain_id Domain id
  # @param redirection_policy_id Redirection map id
  # @param [Hash] opts the optional parameters
  # @return [RedirectionPolicy]
  describe 'read_redirection_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_redirection_rule
  # Read rule
  # Read rule
  # @param domain_id Domain id
  # @param redirection_policy_id Redirection map id
  # @param rule_id Rule id
  # @param [Hash] opts the optional parameters
  # @return [RedirectionRule]
  describe 'read_redirection_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_service_chain
  # Read service chain
  # This API can be used to read service chain with given service-chain-id.
  # @param service_chain_id Id of Service chain
  # @param [Hash] opts the optional parameters
  # @return [PolicyServiceChain]
  describe 'read_service_chain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_service_definition
  # Read Service Definition with given service-definition-id.
  # Read Service Definition with given service-definition-id. 
  # @param enforcement_point_id Enforcement point id
  # @param service_definition_id Id of service definition
  # @param [Hash] opts the optional parameters
  # @return [ServiceDefinition]
  describe 'read_service_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_service_reference
  # Read service reference
  # This API can be used to read service reference with the given service-reference-id.
  # @param service_reference_id Id of Service Reference
  # @param [Hash] opts the optional parameters
  # @return [ServiceReference]
  describe 'read_service_reference test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_virtual_endpoint
  # Read virtual endpoint
  # Read virtual endpoint with given id under given Tier0.
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param virtual_endpoint_id Virtual endpoint id
  # @param [Hash] opts the optional parameters
  # @return [VirtualEndpoint]
  describe 'read_virtual_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for renew_authentication_tokens_for_policy_service_instance_reauth
  # Renew the authentication tokens
  # Use this API when an alarm complaining JWT expiry is raised while deploying partner service VM. The OVF for partner service needs to be downloaded from partner services provider. It might be possible that the authentication token for this communication is expired when the service VM deployment starts. That will either require re-login through UI or use of this API. Certain authentication and authorization steps are internally processed in order to enable communication with partner service provider. This API offers the functionality to re-establish communication with partner services provider. This API needs open id and access token to be passed as headers. Those can be obtained from CSP authorize API. Please make sure to pass headers - Authorization:&lt;Bearer ACCESS_TOKEN&gt; and X-NSX-OpenId:&lt;OPEN_ID&gt;. 
  # @param tier_0_id Tier-0 id
  # @param locale_service_id Locale service id
  # @param service_instance_id Service instance id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'renew_authentication_tokens_for_policy_service_instance_reauth test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_service_definition
  # Update an existing Service Definition on the given enforcement point 
  # Update an existing Service Definition on the given enforcement point. 
  # @param enforcement_point_id Enforcement point id
  # @param service_definition_id Id of service definition
  # @param service_definition 
  # @param [Hash] opts the optional parameters
  # @return [ServiceDefinition]
  describe 'update_service_definition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
