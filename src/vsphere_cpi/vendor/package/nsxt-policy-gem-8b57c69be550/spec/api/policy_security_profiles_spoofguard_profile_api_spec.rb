=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicySecurityProfilesSpoofguardProfileApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicySecurityProfilesSpoofguardProfileApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicySecurityProfilesSpoofguardProfileApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicySecurityProfilesSpoofguardProfileApi' do
    it 'should create an instance of PolicySecurityProfilesSpoofguardProfileApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicySecurityProfilesSpoofguardProfileApi)
    end
  end

  # unit tests for create_or_update_spoof_guard_profile
  # Create or replace SpoofGuard profile
  # API will create or replace SpoofGuard profile. 
  # @param spoofguard_profile_id SpoofGuard profile id
  # @param spoof_guard_profile 
  # @param [Hash] opts the optional parameters
  # @return [SpoofGuardProfile]
  describe 'create_or_update_spoof_guard_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_spoof_guard_profile
  # Delete SpoofGuard profile
  # API will delete SpoofGuard profile with the given id. 
  # @param spoofguard_profile_id SpoofGuard profile id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_spoof_guard_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_spoof_guard_profile
  # Get SpoofGuard profile
  # API will return details of the SpoofGuard profile with given id. If the profile does not exist, it will return 404. 
  # @param spoofguard_profile_id SpoofGuard profile id
  # @param [Hash] opts the optional parameters
  # @return [SpoofGuardProfile]
  describe 'get_spoof_guard_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_spoof_guard_profiles
  # List SpoofGuard profiles
  # API will list all SpoofGuard profiles. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [SpoofGuardProfileListResult]
  describe 'list_spoof_guard_profiles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_spoof_guard_profile
  # Patch SpoofGuard profile
  # Create a new SpoofGuard profile if the SpoofGuard profile with the given id does not exist. Otherwise, patch with the existing SpoofGuard profile. 
  # @param spoofguard_profile_id SpoofGuard profile id
  # @param spoof_guard_profile 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_spoof_guard_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
