=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyTlsCertificatesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyTlsCertificatesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyTlsCertificatesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyTlsCertificatesApi' do
    it 'should create an instance of PolicyTlsCertificatesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyTlsCertificatesApi)
    end
  end

  # unit tests for add_tls_certificate
  # Add a New Certificate
  # Adds a new private-public certificate and, optionally, a private key that can be applied to one of the user-facing components (appliance management or edge). The certificate and the key should be stored in PEM format. If no private key is provided, the certificate is used as a client certificate in the trust store.  A certificate chain will not be expanded into separate certificate instances for reference, but would be pushed to the enforcement point as a single certificate. 
  # @param certificate_id 
  # @param tls_trust_data 
  # @param [Hash] opts the optional parameters
  # @return [TlsCertificate]
  describe 'add_tls_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tls_certificate
  # Delete Certificate for the Given Certificate ID
  # Removes the specified certificate. The private key associated with the certificate is also deleted. 
  # @param certificate_id ID of certificate to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_tls_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tls_certificate
  # Show Certificate Data for the Given Certificate ID
  # Returns information for the specified certificate ID, including the certificate&#39;s id; resource_type (for example, certificate_self_signed, certificate_ca, or certificate_signed); pem_encoded data; and history of the certificate (who created or modified it and when). For additional information, include the ?details&#x3D;true modifier at the end of the request URI. 
  # @param certificate_id ID of certificate to read
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :details whether to expand the pem data and show all its details
  # @return [TlsCertificate]
  describe 'get_tls_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tls_certificates
  # Return All the User-Facing Components&#39; Certificates
  # Returns all certificate information viewable by the user, including each certificate&#39;s id; resource_type (for example, certificate_self_signed, certificate_ca, or certificate_signed); pem_encoded data; and history of the certificate (who created or modified it and when). For additional information, include the ?details&#x3D;true modifier at the end of the request URI. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :details whether to expand the pem data and show all its details
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @option opts [String] :type Type of certificate to return
  # @return [TlsCertificateList]
  describe 'list_tls_certificates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_tls_certificate
  # Add a New Certificate
  # Adds a new private-public certificate and, optionally, a private key that can be applied to one of the user-facing components (appliance management or edge). The certificate and the key should be stored in PEM format. If no private key is provided, the certificate is used as a client certificate in the trust store.  A certificate chain will not be expanded into separate certificate instances for reference, but would be pushed to the enforcement point as a single certificate.  This patch method does not modify an existing certificate. 
  # @param certificate_id 
  # @param tls_trust_data 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_tls_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
