=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyConnectivityRoutingBgpApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyConnectivityRoutingBgpApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyConnectivityRoutingBgpApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyConnectivityRoutingBgpApi' do
    it 'should create an instance of PolicyConnectivityRoutingBgpApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyConnectivityRoutingBgpApi)
    end
  end

  # unit tests for create_or_replace_bgp_neighbor_config
  # Create or update a BGP neighbor config
  # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
  # @param tier_0_id 
  # @param locale_service_id 
  # @param neighbor_id 
  # @param bgp_neighbor_config 
  # @param [Hash] opts the optional parameters
  # @return [BgpNeighborConfig]
  describe 'create_or_replace_bgp_neighbor_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_replace_bgp_routing_config
  # Create or update a BGP routing config
  # If BGP routing config is not already present, create BGP routing config. If it already exists, replace the BGP routing config with this object. 
  # @param tier_0_id 
  # @param locale_service_id 
  # @param bgp_routing_config 
  # @param [Hash] opts the optional parameters
  # @return [BgpRoutingConfig]
  describe 'create_or_replace_bgp_routing_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_bgp_neighbor_config
  # Delete BGP neighbor config
  # Delete BGP neighbor config
  # @param tier_0_id 
  # @param locale_service_id 
  # @param neighbor_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_bgp_neighbor_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_bgp_neighbor_configs
  # List BGP neighbor configurations
  # Paginated list of all BGP neighbor configurations 
  # @param tier_0_id 
  # @param locale_service_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [BgpNeighborConfigListResult]
  describe 'list_bgp_neighbor_configs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_bgp_neighbor_config
  # Create or update a BGP neighbor config
  # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
  # @param tier_0_id 
  # @param locale_service_id 
  # @param neighbor_id 
  # @param bgp_neighbor_config 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_bgp_neighbor_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_bgp_routing_config
  # Create or update BGP routing config
  # If an BGP routing config not present, create BGP routing config. If it already exists, update the routing config. 
  # @param tier_0_id 
  # @param locale_service_id 
  # @param bgp_routing_config 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_bgp_routing_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_bgp_neighbor_config
  # Read BGP neighbor config
  # Read BGP neighbor config
  # @param tier_0_id 
  # @param locale_service_id 
  # @param neighbor_id 
  # @param [Hash] opts the optional parameters
  # @return [BgpNeighborConfig]
  describe 'read_bgp_neighbor_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_bgp_routing_config
  # Read BGP routing config
  # Read BGP routing config
  # @param tier_0_id 
  # @param locale_service_id 
  # @param [Hash] opts the optional parameters
  # @return [BgpRoutingConfig]
  describe 'read_bgp_routing_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
