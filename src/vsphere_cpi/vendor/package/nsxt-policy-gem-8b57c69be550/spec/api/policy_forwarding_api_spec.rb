=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyForwardingApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyForwardingApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyForwardingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyForwardingApi' do
    it 'should create an instance of PolicyForwardingApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyForwardingApi)
    end
  end

  # unit tests for create_or_update_forwarding_policy
  # Create or update forwarding policy
  # Create or update the forwarding policy. 
  # @param domain_id Domain id
  # @param forwarding_policy_id Forwarding map id
  # @param forwarding_policy 
  # @param [Hash] opts the optional parameters
  # @return [ForwardingPolicy]
  describe 'create_or_update_forwarding_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_update_forwarding_rule
  # Update forwarding rule
  # Create a rule with the rule-id is not already present, otherwise update the rule. 
  # @param domain_id Domain id
  # @param forwarding_policy_id Forwarding map id
  # @param rule_id rule id
  # @param forwarding_rule 
  # @param [Hash] opts the optional parameters
  # @return [ForwardingRule]
  describe 'create_or_update_forwarding_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_forwarding_policy
  # Delete forwarding policy
  # Delete forwarding policy.
  # @param domain_id Domain id
  # @param forwarding_policy_id Forwarding map id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_forwarding_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_forwarding_rule
  # Delete ForwardingRule
  # Delete ForwardingRule
  # @param domain_id Domain ID
  # @param forwarding_policy_id Forwarding Map ID
  # @param rule_id ForwardingRule ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_forwarding_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_forwarding_policies
  # List forwarding policies for the given domain
  # List all forwarding policies for the given domain ordered by precedence. 
  # @param domain_id Domain id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [ForwardingPolicyListResult]
  describe 'list_forwarding_policies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_forwarding_rule
  # List rules
  # List rules
  # @param domain_id Domain id
  # @param forwarding_policy_id Forwarding map id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [ForwardingRuleListResult]
  describe 'list_forwarding_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_forwarding_policy
  # Create or update forwarding policy
  # Create or update the forwarding policy. 
  # @param domain_id Domain id
  # @param forwarding_policy_id Forwarding map id
  # @param forwarding_policy 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_forwarding_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_forwarding_rule
  # Update forwarding rule
  # Create a rule with the rule-id is not already present, otherwise update the rule. 
  # @param domain_id Domain id
  # @param forwarding_policy_id Forwarding map id
  # @param rule_id Rule id
  # @param forwarding_rule 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_forwarding_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_forwarding_policy
  # Read forwarding policy
  # Read forwarding policy. 
  # @param domain_id Domain id
  # @param forwarding_policy_id Forwarding map id
  # @param [Hash] opts the optional parameters
  # @return [ForwardingPolicy]
  describe 'read_forwarding_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_forwarding_rule
  # Read rule
  # Read rule
  # @param domain_id Domain id
  # @param forwarding_policy_id Forwarding map id
  # @param rule_id Rule id
  # @param [Hash] opts the optional parameters
  # @return [ForwardingRule]
  describe 'read_forwarding_rule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
