=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyDnsForwarderApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyDnsForwarderApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyDnsForwarderApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyDnsForwarderApi' do
    it 'should create an instance of PolicyDnsForwarderApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyDnsForwarderApi)
    end
  end

  # unit tests for delete_policy_dns_forwarder_on_tier0
  # Delete DNS configuration for tier-0 instance
  # Delete DNS configuration for tier-0 instance
  # @param tier_0_id Tier-0 ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_policy_dns_forwarder_on_tier0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_policy_dns_forwarder_on_tier1
  # Delete DNS configuration for tier-1 instance
  # Delete DNS configuration for tier-1 instance
  # @param tier_1_id Tier-1 ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_policy_dns_forwarder_on_tier1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_policy_dns_forwarder_zone
  # Delete the DNS Forwarder Zone
  # Delete the DNS Forwarder Zone
  # @param dns_forwarder_zone_id DNS Forwarder Zone ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_policy_dns_forwarder_zone test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tier0_dns_forwarder_statistics
  # Get tier-0 DNS forwarder statistics
  # Get statistics of tier-0 DNS forwarder. - no enforcement point path specified: Statistics will be evaluated on each enforcement point. - {enforcement_point_path}: Statistics are evaluated only on the given enforcement point. 
  # @param tier_0_id Tier-0 id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @return [AggregateDNSForwarderStatistics]
  describe 'get_tier0_dns_forwarder_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tier0_dns_forwarder_status
  # Get current status of tier-0 DNS forwarder
  # Get current status of tier-0 DNS forwarder. - no enforcement point path specified: Status will be evaluated on each enforcement point. - {enforcement_point_path}: Status will be evaluated only on the given enforcement point. 
  # @param tier_0_id Tier-0 id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @return [AggregateDNSForwarderStatus]
  describe 'get_tier0_dns_forwarder_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tier1_dns_forwarder_statistics
  # Get tier-1 DNS forwarder statistics
  # Get statistics of tier-1 DNS forwarder. - no enforcement point path specified: Statistics will be evaluated on each enforcement point. - {enforcement_point_path}: Statistics are evaluated only on the given enforcement point. 
  # @param tier_1_id Tier-1 id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @return [AggregateDNSForwarderStatistics]
  describe 'get_tier1_dns_forwarder_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tier1_dns_forwarder_status
  # Get current status of tier-1 DNS forwarder
  # Get current status of tier-1 DNS forwarder. - no enforcement point path specified: Status will be evaluated on each enforcement point. - {enforcement_point_path}: Status will be evaluated only on the given enforcement point. 
  # @param tier_1_id Tier-1 id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @return [AggregateDNSForwarderStatus]
  describe 'get_tier1_dns_forwarder_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_policy_dns_forwarder_zone
  # List Dns Forwarder Zones
  # Paginated list of all Dns Forwarder Zones 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [PolicyDnsForwarderZoneListResult]
  describe 'list_policy_dns_forwarder_zone test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for lookup_address_via_tier0_dns_forwarder
  # Resolve a given address via the dns forwarder at Tier0
  # Query the nameserver for an ip-address or a FQDN of the given an address optionally using an specified DNS server. If the address is a fqdn, nslookup will resolve ip-address with it. If the address is an ip-address, do a reverse lookup and answer fqdn(s). If enforcement point is specified, then DNS forwarder nslookup answer will get fetched from specified enforcement point. Otherwise from all enforcement points. 
  # @param tier_0_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :address IP address or FQDN for nslookup
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @return [AggregatePolicyDnsAnswer]
  describe 'lookup_address_via_tier0_dns_forwarder test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for lookup_address_via_tier1_dns_forwarder
  # Resolve a given address via the dns forwarder at Tier1
  # Query the nameserver for an ip-address or a FQDN of the given an address optionally using an specified DNS server. If the address is a fqdn, nslookup will resolve ip-address with it. If the address is an ip-address, do a reverse lookup and answer fqdn(s). If enforcement point is specified, then DNS forwarder nslookup answer will get fetched from specified enforcement point. Otherwise from all enforcement points. 
  # @param tier_1_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :address IP address or FQDN for nslookup
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @return [AggregatePolicyDnsAnswer]
  describe 'lookup_address_via_tier1_dns_forwarder test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_policy_dns_forwarder_on_tier0
  # Update the DNS Forwarder
  # Update the DNS Forwarder
  # @param tier_0_id Tier-0 ID
  # @param policy_dns_forwarder 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_policy_dns_forwarder_on_tier0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_policy_dns_forwarder_on_tier1
  # Create or update the DNS Forwarder
  # Create or update the DNS Forwarder
  # @param tier_1_id Tier-1 ID
  # @param policy_dns_forwarder 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_policy_dns_forwarder_on_tier1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_policy_dns_forwarder_zone
  # Create or update the DNS Forwarder Zone
  # Create or update the DNS Forwarder Zone
  # @param dns_forwarder_zone_id DNS Forwarder Zone ID
  # @param policy_dns_forwarder_zone 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_policy_dns_forwarder_zone test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for perform_ep_action_for_dns_forwarder_at_tier0
  # Perform the specified DNS forwarder action
  # Perform the specified action for Tier0 DNS forwarder on specified enforcement point. 
  # @param tier_0_id 
  # @param action An action to be performed for DNS forwarder on EP
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed
  # @return [nil]
  describe 'perform_ep_action_for_dns_forwarder_at_tier0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for perform_ep_action_for_dns_forwarder_at_tier1
  # Perform the specified DNS forwarder action
  # Perform the specified action for Tier0 DNS forwarder on specified enforcement point. 
  # @param tier_1_id 
  # @param action An action to be performed for DNS forwarder on EP
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed
  # @return [nil]
  describe 'perform_ep_action_for_dns_forwarder_at_tier1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_policy_dns_forwarder_on_tier0
  # Read the DNS Forwarder for the given tier-0 instance
  # Read the DNS Forwarder for the given tier-0 instance
  # @param tier_0_id Tier-0 ID
  # @param [Hash] opts the optional parameters
  # @return [PolicyDnsForwarder]
  describe 'read_policy_dns_forwarder_on_tier0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_policy_dns_forwarder_on_tier1
  # Read the DNS Forwarder for the given tier-1 instance
  # Read the DNS Forwarder for the given tier-1 instance
  # @param tier_1_id Tier-1 ID
  # @param [Hash] opts the optional parameters
  # @return [PolicyDnsForwarder]
  describe 'read_policy_dns_forwarder_on_tier1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_policy_dns_forwarder_zone
  # Read the DNS Forwarder Zone
  # Read the DNS Forwarder Zone
  # @param dns_forwarder_zone_id DNS Forwarder Zone ID
  # @param [Hash] opts the optional parameters
  # @return [PolicyDnsForwarderZone]
  describe 'read_policy_dns_forwarder_zone test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_policy_dns_forwarder_on_tier0
  # Update the DNS Forwarder
  # Update the DNS Forwarder
  # @param tier_0_id Tier-0 ID
  # @param policy_dns_forwarder 
  # @param [Hash] opts the optional parameters
  # @return [PolicyDnsForwarder]
  describe 'update_policy_dns_forwarder_on_tier0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_policy_dns_forwarder_on_tier1
  # Create or update the DNS Forwarder
  # Create or update the DNS Forwarder
  # @param tier_1_id Tier-1 ID
  # @param policy_dns_forwarder 
  # @param [Hash] opts the optional parameters
  # @return [PolicyDnsForwarder]
  describe 'update_policy_dns_forwarder_on_tier1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_policy_dns_forwarder_zone
  # Create or update the DNS Forwarder Zone
  # Create or update the DNS Forwarder Zone
  # @param dns_forwarder_zone_id DNS Forwarder Zone ID
  # @param policy_dns_forwarder_zone 
  # @param [Hash] opts the optional parameters
  # @return [PolicyDnsForwarderZone]
  describe 'update_policy_dns_forwarder_zone test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
