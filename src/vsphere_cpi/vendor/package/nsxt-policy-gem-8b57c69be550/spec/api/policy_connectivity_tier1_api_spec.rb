=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyConnectivityTier1Api
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyConnectivityTier1Api' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyConnectivityTier1Api.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyConnectivityTier1Api' do
    it 'should create an instance of PolicyConnectivityTier1Api' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyConnectivityTier1Api)
    end
  end

  # unit tests for create_or_replace_tier1
  # Create or update tier-1 configuration
  # If Tier-1 with the tier-1-id is not already present, create a new Tier-1 instance. If it already exists, replace the Tier-1 instance with this object. 
  # @param tier_1_id 
  # @param tier1 
  # @param [Hash] opts the optional parameters
  # @return [Tier1]
  describe 'create_or_replace_tier1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_replace_tier1_locale_services
  # Create or update a Tier-1 locale-services
  # If a Tier-1 locale services with the locale-services-id is not already present, create a new locale-services. If it already exists, replace the Tier-1 locale services instance with the new object. 
  # @param tier_1_id 
  # @param locale_services_id 
  # @param locale_services 
  # @param [Hash] opts the optional parameters
  # @return [LocaleServices]
  describe 'create_or_replace_tier1_locale_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tier1
  # Delete Tier-1 configuration
  # Delete Tier-1 configuration
  # @param tier_1_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_tier1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tier1_locale_services
  # Delete Tier-1 locale-services
  # Delete Tier-1 locale-services
  # @param tier_1_id 
  # @param locale_services_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_tier1_locale_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tier1_interface_statistics
  # Get segment statistics information
  # Get tier1 interface statistics information. 
  # @param tier_1_id 
  # @param locale_service_id 
  # @param interface_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [String] :edge_path Policy path of edge node
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [PolicyInterfaceStatistics]
  describe 'get_tier1_interface_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tier1
  # List Tier-1 instances
  # Paginated list of all Tier-1 instances 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [Tier1ListResult]
  describe 'list_tier1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tier1_locale_services
  # List Tier-1 locale-services
  # Paginated list of all Tier-1 locale-services 
  # @param tier_1_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [LocaleServicesListResult]
  describe 'list_tier1_locale_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_tier1
  # Create or update Tier-1 configuration
  # If Tier-1 with the tier-1-id is not already present, create a new Tier-1 instance. If it already exists, update the tier-1 instance with specified attributes. 
  # @param tier_1_id 
  # @param tier1 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_tier1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_tier1_locale_services
  # Create or update a Tier-1 locale-services
  # If a Tier-1 locale services with the locale-services-id is not already present, create a new locale services. If it already exists, update Tier-1 locale services with specified attributes. 
  # @param tier_1_id 
  # @param locale_services_id 
  # @param locale_services 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_tier1_locale_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_tier1
  # Read Tier-1 configuration
  # Read Tier-1 configuration
  # @param tier_1_id 
  # @param [Hash] opts the optional parameters
  # @return [Tier1]
  describe 'read_tier1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_tier1_locale_services
  # Read Tier-1 locale-services
  # Read Tier-1 locale-services
  # @param tier_1_id 
  # @param locale_services_id 
  # @param [Hash] opts the optional parameters
  # @return [LocaleServices]
  describe 'read_tier1_locale_services test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
