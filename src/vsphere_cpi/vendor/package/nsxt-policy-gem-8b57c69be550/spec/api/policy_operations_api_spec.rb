=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyOperationsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyOperationsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyOperationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyOperationsApi' do
    it 'should create an instance of PolicyOperationsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyOperationsApi)
    end
  end

  # unit tests for create_or_replace_ipfix_collector_profile
  # Create or Replace IPFIX collector profile
  # Create or Replace IPFIX collector profile. IPFIX data will be sent to IPFIX collector port. 
  # @param ipfix_collector_profile_id IPFIX collector profile id
  # @param ipfix_collector_profile 
  # @param [Hash] opts the optional parameters
  # @return [IPFIXCollectorProfile]
  describe 'create_or_replace_ipfix_collector_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_replace_ipfix_switch_collection_instance
  # Create or Replace IPFIX switch collection instance
  # Create or replace IPFIX switch collection instance. Instance will start forwarding data to provided IPFIX collector. 
  # @param tier_1_id Tier-1 ID
  # @param ipfix_switch_collection_instance_id IPFIX Switch Collection Instance ID
  # @param ipfix_switch_collection_instance 
  # @param [Hash] opts the optional parameters
  # @return [IPFIXSwitchCollectionInstance]
  describe 'create_or_replace_ipfix_switch_collection_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_or_replace_port_mirroring_instance
  # Create or Replace Port Mirroring Instance.
  # Create or Replace port mirroring instance. Packets will be mirrored from source group to destination group. 
  # @param domain_id Domain ID
  # @param group_id Group ID
  # @param port_mirroring_instance_id Port Mirroring Instance Id
  # @param port_mirroring_instance 
  # @param [Hash] opts the optional parameters
  # @return [PortMirroringInstance]
  describe 'create_or_replace_port_mirroring_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_ipfix_collector_profile
  # Delete IPFIX Collector profile
  # API deletes IPFIX collector profile. Flow forwarding to collector will be stopped. 
  # @param ipfix_collector_profile_id IPFIX collector Profile id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_ipfix_collector_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_ipfix_switch_collection_instance
  # Delete IPFIX Switch Collection Instance
  # API deletes IPFIX Switch Collection Instance.Flow forwarding to selected collector will be stopped. 
  # @param tier_1_id Tier-1 ID
  # @param ipfix_switch_collection_instance_id IPFIX Switch Collection Instance ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_ipfix_switch_collection_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_port_mirroring_instance
  # Delete Port Mirroring Instance
  # API will delete port mirroring instance. Mirroring from source to destination ports will be stopped. 
  # @param domain_id Domain ID
  # @param group_id Group ID
  # @param port_mirroring_instance_id Port Mirroring Instance Id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_port_mirroring_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_ipfix_collector_profiles
  # List IPFIX Collector profiles.
  # API will provide list of all IPFIX collector profiles and their details. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [IPFIXCollectorProfileListResult]
  describe 'list_ipfix_collector_profiles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_ipfix_switch_collection_instances
  # List IPFIX Switch Collection Instances
  # API provides list IPFIX Switch collection instances available on selected logical switch. 
  # @param tier_1_id Tier-1 ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [IPFIXSwitchCollectionInstanceListResult]
  describe 'list_ipfix_switch_collection_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_port_mirroring_instances
  # List Port Mirroring Instances
  # API will list all port mirroring instances active on current group. 
  # @param domain_id Domain ID
  # @param group_id Group ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [PortMirroringInstanceListResult]
  describe 'list_port_mirroring_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_resource_info
  # For each type of entity what are the attributes owned by policy.
  # This API provides field names of attributes in NSX types that are owned by Policy, as opposed to those owned by the enforcement point. For any type on NSX, some of the attributes of that type may be owned and set by Policy when realizing the intent, while some others may be owned and set by the enforcement point itself. This information can be used to disable updates to Policy owned attributes by the advanced networking UI, while allowing tweaking to the attributes owned by the management plane. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @option opts [String] :type Type query
  # @return [ResourceInfoListResult]
  describe 'list_resource_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_ipfix_collector_profile
  # Patch IPFIX collector profile
  # Create a new IPFIX collector profile if the IPFIX collector profile with given id does not already exist. If the IPFIX collector profile with the given id already exists, patch with the existing IPFIX collector profile. 
  # @param ipfix_collector_profile_id IPFIX collector profile id
  # @param ipfix_collector_profile 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_ipfix_collector_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_ipfix_switch_collection_instance
  # Patch IPFIX switch collection instance
  # Create a new IPFIX switch collection instance if the IPFIX switch collection instance  with given id does not already exist. If the IPFIX switch collection instance with the given id already exists, patch with the existing IPFIX switch collection instance. 
  # @param tier_1_id Tier-1 ID
  # @param ipfix_switch_collection_instance_id IPFIX Switch Collection Instance ID
  # @param ipfix_switch_collection_instance 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_ipfix_switch_collection_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_port_mirroring_instance
  # Patch Port Mirroring Instance.
  # Create a new Port Mirroring Instance if the Port Mirroring Instance with given id does not already exist. If the Port Mirroring Instance with the given id already exists, patch with the existing Port Mirroring Instance. 
  # @param domain_id Domain ID
  # @param group_id Group ID
  # @param port_mirroring_instance_id Port Mirroring Instance Id
  # @param port_mirroring_instance 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_port_mirroring_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_ipfix_collector_profile
  # Get IPFIX Collector profile
  # API will return details of IPFIX collector profile. If profile does not exist, it will return 404. 
  # @param ipfix_collector_profile_id IPFIX collector profile id
  # @param [Hash] opts the optional parameters
  # @return [IPFIXCollectorProfile]
  describe 'read_ipfix_collector_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_ipfix_switch_collection_instance
  # Get IPFIX Switch Collection Instance
  # API will return details of IPFIX switch collection. If instance does not exist, it will return 404. 
  # @param tier_1_id Tier-1 ID
  # @param ipfix_switch_collection_instance_id IPFIX switch collection id
  # @param [Hash] opts the optional parameters
  # @return [IPFIXSwitchCollectionInstance]
  describe 'read_ipfix_switch_collection_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_port_mirroring_instance
  # Details of Port Mirroring Instance 
  # API will return details of port mirroring instance. If instance does not exist, it will return 404. 
  # @param domain_id Domain ID
  # @param group_id Group ID
  # @param port_mirroring_instance_id Port Mirroring Instance Id
  # @param [Hash] opts the optional parameters
  # @return [PortMirroringInstance]
  describe 'read_port_mirroring_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
