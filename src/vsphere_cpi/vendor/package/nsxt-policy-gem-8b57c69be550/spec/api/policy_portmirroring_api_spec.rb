=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyPortmirroringApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyPortmirroringApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyPortmirroringApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyPortmirroringApi' do
    it 'should create an instance of PolicyPortmirroringApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyPortmirroringApi)
    end
  end

  # unit tests for create_or_replace_port_mirroring_profile
  # Create or Replace Port Mirroring Profile.
  # Create or Replace port mirroring profile. Packets will be mirrored from source group, segment, port to destination group. 
  # @param port_mirroring_profile_id Port Mirroring Profiles Id
  # @param port_mirroring_profile 
  # @param [Hash] opts the optional parameters
  # @return [PortMirroringProfile]
  describe 'create_or_replace_port_mirroring_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_port_mirroring_profile
  # Delete Port Mirroring Profile
  # API will delete port mirroring profile. Mirroring from source to destination ports will be stopped. 
  # @param port_mirroring_profile_id Port Mirroring Profile Id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_port_mirroring_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_port_mirroring_profiles
  # List Port Mirroring Profiles
  # API will list all port mirroring profiles group. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [PortMirroringProfileListResult]
  describe 'list_port_mirroring_profiles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_port_mirroring_profile
  # Patch Port Mirroring Profile.
  # Create a new Port Mirroring Profile if the Port Mirroring Profile with given id does not already exist. If the Port Mirroring Profile with the given id already exists, patch with the existing Port Mirroring Profile. 
  # @param port_mirroring_profile_id Port Mirroring Profile Id
  # @param port_mirroring_profile 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_port_mirroring_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_port_mirroring_profile
  # Details of Port Mirroring Profile 
  # API will return details of port mirroring profile. 
  # @param port_mirroring_profile_id Port Mirroring Profile Id
  # @param [Hash] opts the optional parameters
  # @return [PortMirroringProfile]
  describe 'read_port_mirroring_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
