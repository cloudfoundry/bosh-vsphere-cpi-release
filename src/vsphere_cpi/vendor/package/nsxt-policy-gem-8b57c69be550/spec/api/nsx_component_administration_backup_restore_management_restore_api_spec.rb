=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::NsxComponentAdministrationBackupRestoreManagementRestoreApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'NsxComponentAdministrationBackupRestoreManagementRestoreApi' do
  before do
    # run before each test
    @instance = SwaggerClient::NsxComponentAdministrationBackupRestoreManagementRestoreApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of NsxComponentAdministrationBackupRestoreManagementRestoreApi' do
    it 'should create an instance of NsxComponentAdministrationBackupRestoreManagementRestoreApi' do
      expect(@instance).to be_instance_of(SwaggerClient::NsxComponentAdministrationBackupRestoreManagementRestoreApi)
    end
  end

  # unit tests for advance_cluster_restore_advance
  # Advance any suspended restore operation
  # Advance any currently suspended restore operation. The operation might have been suspended because (1) the user had suspended it previously, or (2) the operation is waiting for user input, to be provided as a part of the POST request body. This operation is only valid when a GET cluster/restore/status returns a status with value SUSPENDED. Otherwise, a 409 response is returned. 
  # @param advance_cluster_restore_request 
  # @param [Hash] opts the optional parameters
  # @return [ClusterRestoreStatus]
  describe 'advance_cluster_restore_advance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_cluster_restore_cancel
  # Cancel any running restore operation
  # This operation is only valid when a restore is in suspended state. The UI user can cancel any restore operation when the restore is suspended either due to an error, or for a user input. The API user would need to monitor the progression of a restore by calling periodically \&quot;/api/v1/cluster/restore/status\&quot; API. The response object (ClusterRestoreStatus), contains a field \&quot;endpoints\&quot;. The API user can cancel the restore process if &#39;cancel&#39; action is shown in the endpoint field. This operation is only valid when a GET cluster/restore/status returns a status with value SUSPENDED. 
  # @param [Hash] opts the optional parameters
  # @return [ClusterRestoreStatus]
  describe 'cancel_cluster_restore_cancel test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for configure_restore_config
  # Configure Restore SFTP server credentials
  # Configure file server where the backed-up files used for the Restore operation are available. 
  # @param restore_configuration 
  # @param [Hash] opts the optional parameters
  # @return [RestoreConfiguration]
  describe 'configure_restore_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_restore_config
  # Get Restore configuration
  # Get configuration information for the file server used to store backed-up files. Fields that contain secrets (password, passphrase) are not returned. 
  # @param [Hash] opts the optional parameters
  # @return [RestoreConfiguration]
  describe 'get_restore_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for initiate_cluster_restore_start
  # Initiate a restore operation
  # Start the restore of an NSX cluster, from some previously backed-up configuration. This operation is only valid when a GET cluster/restore/status returns a status with value NOT_STARTED. Otherwise, a 409 response is returned. 
  # @param initiate_cluster_restore_request 
  # @param [Hash] opts the optional parameters
  # @return [ClusterRestoreStatus]
  describe 'initiate_cluster_restore_start test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_cluster_backup_timestamps
  # List timestamps of all available Cluster Backups.
  # Returns timestamps for all backup files that are available on the SFTP server. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [ClusterBackupInfoListResult]
  describe 'list_cluster_backup_timestamps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_restore_instruction_resources
  # List resources for a given instruction, to be shown to/executed by users. 
  # For restore operations requiring user input e.g. performing an action, accepting/rejecting an action, etc. the information to be conveyed to users is provided in this call. 
  # @param instruction_id Id of the instruction set whose instructions are to be returned
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [ActionableResourceListResult]
  describe 'list_restore_instruction_resources test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_cluster_restore_retry
  # Retry any failed restore operation
  # Retry any currently in-progress, failed restore operation. Only the last step of the multi-step restore operation would have failed,and only that step is retried. This operation is only valid when a GET cluster/restore/status returns a status with value FAILED. Otherwise, a 409 response is returned. 
  # @param [Hash] opts the optional parameters
  # @return [ClusterRestoreStatus]
  describe 'retry_cluster_restore_retry test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for suspend_cluster_restore_suspend
  # Suspend any running restore operation
  # Suspend any currently running restore operation. The restore operation is made up of a number of steps. When this call is issued, any currently running step is allowed to finish (successfully or with errors), and the next step (and therefore the entire restore operation) is suspended until a subsequent resume or cancel call is issued. This operation is only valid when a GET cluster/restore/status returns a status with value RUNNING. Otherwise, a 409 response is returned. 
  # @param [Hash] opts the optional parameters
  # @return [ClusterRestoreStatus]
  describe 'suspend_cluster_restore_suspend test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
