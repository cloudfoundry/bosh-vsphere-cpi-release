=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyConnectivityRoutingPrefixListApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyConnectivityRoutingPrefixListApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyConnectivityRoutingPrefixListApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyConnectivityRoutingPrefixListApi' do
    it 'should create an instance of PolicyConnectivityRoutingPrefixListApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyConnectivityRoutingPrefixListApi)
    end
  end

  # unit tests for create_or_replace_prefix_list
  # Create or update a prefix list
  # If prefix list for prefix-list-id is not already present, create a prefix list. If it already exists, replace the prefix list for prefix-list-id. 
  # @param tier_0_id Tier-0 ID
  # @param prefix_list_id Prefix List ID
  # @param prefix_list 
  # @param [Hash] opts the optional parameters
  # @return [PrefixList]
  describe 'create_or_replace_prefix_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_prefix_list
  # Delete a prefix list
  # Delete a prefix list
  # @param tier_0_id 
  # @param prefix_list_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_prefix_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_prefix_lists
  # List prefix lists
  # Paginated list of all prefix lists 
  # @param tier_0_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
  # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
  # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
  # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
  # @option opts [BOOLEAN] :sort_ascending 
  # @option opts [String] :sort_by Field by which records are sorted
  # @return [PrefixListResult]
  describe 'list_prefix_lists test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_prefix_list
  # Create or update a prefix list
  # If prefix list for prefix-list-id is not already present, create a prefix list. If it already exists, update prefix list for prefix-list-id. 
  # @param tier_0_id 
  # @param prefix_list_id 
  # @param prefix_list 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_prefix_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_prefix_list
  # Read a prefix list
  # Read a prefix list
  # @param tier_0_id 
  # @param prefix_list_id 
  # @param [Hash] opts the optional parameters
  # @return [PrefixList]
  describe 'read_prefix_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
