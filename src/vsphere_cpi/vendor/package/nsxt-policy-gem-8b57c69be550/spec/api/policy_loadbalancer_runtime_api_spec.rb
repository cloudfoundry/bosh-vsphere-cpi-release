=begin
#${NODE TITLE} API

#VMware ${NODE TITLE} REST API

OpenAPI spec version: (unknown version)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PolicyLoadbalancerRuntimeApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PolicyLoadbalancerRuntimeApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PolicyLoadbalancerRuntimeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyLoadbalancerRuntimeApi' do
    it 'should create an instance of PolicyLoadbalancerRuntimeApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PolicyLoadbalancerRuntimeApi)
    end
  end

  # unit tests for get_lb_pool_statistics
  # Get LBPool statistics information
  # Get LBPoolStatistics information. - no enforcement point path specified: Information will be aggregated from each enforcement point. - {enforcement_point_path}: Information will be retrieved only from the given enforcement point. 
  # @param lb_service_id LBService id
  # @param lb_pool_id LBPool id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @option opts [String] :source Data source type.
  # @return [AggregateLBPoolStatistics]
  describe 'get_lb_pool_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_lb_pool_status
  # Get LBPool status information
  # Get LBPool detailed status information. - no enforcement point path specified: Information will be aggregated from each enforcement point. - {enforcement_point_path}: Information will be retrieved only from the given enforcement point. 
  # @param lb_service_id LBService id
  # @param lb_pool_id LBPool id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @option opts [String] :source Data source type.
  # @return [AggregateLBPoolStatus]
  describe 'get_lb_pool_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_lb_service_statistics
  # Get LBService statistics information
  # Get LBServiceStatistics information. - no enforcement point path specified: Information will be aggregated from each enforcement point. - {enforcement_point_path}: Information will be retrieved only from the given enforcement point. 
  # @param lb_service_id LBService id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @option opts [String] :source Data source type.
  # @return [AggregateLBServiceStatistics]
  describe 'get_lb_service_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_lb_service_status
  # Get LBService status information
  # Get LBService detailed status information. - no enforcement point path specified: Information will be aggregated from each enforcement point. - {enforcement_point_path}: Information will be retrieved only from the given enforcement point. 
  # @param lb_service_id LBService id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @option opts [String] :source Data source type.
  # @return [AggregateLBServiceStatus]
  describe 'get_lb_service_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_lb_service_usage
  # Get LBService usage information
  # Get LBServiceUsage information. - no enforcement point path specified: Information will be aggregated from each enforcement point. - {enforcement_point_path}: Information will be retrieved only from the given enforcement point. 
  # @param lb_service_id LBService id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @option opts [String] :source Data source type.
  # @return [AggregateLBServiceUsage]
  describe 'get_lb_service_usage test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_lb_virtual_server_statistics
  # Get LBVirtualServer statistics information
  # Get LBVirtualServerStatistics information. - no enforcement point path specified: Information will be aggregated from each enforcement point. - {enforcement_point_path}: Information will be retrieved only from the given enforcement point. 
  # @param lb_service_id LBService id
  # @param lb_virtual_server_id LBVirtualServer id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @option opts [String] :source Data source type.
  # @return [AggregateLBVirtualServerStatistics]
  describe 'get_lb_virtual_server_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_lb_virtual_server_status
  # Get LBVirtualServer status information
  # Get LBVirtualServer detailed status information. - no enforcement point path specified: Information will be aggregated from each enforcement point. - {enforcement_point_path}: Information will be retrieved only from the given enforcement point. 
  # @param lb_service_id LBService id
  # @param lb_virtual_server_id LBVirtualServer id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :enforcement_point_path String Path of the enforcement point
  # @option opts [String] :source Data source type.
  # @return [AggregateLBVirtualServerStatus]
  describe 'get_lb_virtual_server_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
