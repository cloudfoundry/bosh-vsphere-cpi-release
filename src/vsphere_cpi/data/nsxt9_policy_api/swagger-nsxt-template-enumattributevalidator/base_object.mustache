    class EnumAttributeValidator
      attr_reader :datatype
      attr_reader :allowable_values

      def initialize(datatype, allowable_values)
        @allowable_values = allowable_values.map do |value|
          case datatype.to_s
          when /Integer/i
            value.to_i
          when /Float/i
            value.to_f
          when /String/i
            [value, value.downcase]
          else
            value
          end
        end.flatten
      end

      def valid?(value)
        !value || allowable_values.include?(value)
      end
    end