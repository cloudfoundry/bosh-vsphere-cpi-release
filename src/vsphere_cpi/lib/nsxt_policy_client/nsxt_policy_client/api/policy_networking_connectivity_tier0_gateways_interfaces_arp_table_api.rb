=begin
#NSX-T Data Center Policy API

#VMware NSX-T Data Center Policy REST API

OpenAPI spec version: 3.1.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module NSXTPolicy
  class PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get ARP table for downlink router port on tier-0 router
    # Segment ID is the ID of the  segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def get_downlink_port_arp_table_for_infra_segment(segment_id, opts = {})
      data, _status_code, _headers = get_downlink_port_arp_table_for_infra_segment_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table for downlink router port on tier-0 router
    # Segment ID is the ID of the  segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def get_downlink_port_arp_table_for_infra_segment_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/segments/{segment-id}/gateway-interface-arp-table'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_downlink_port_arp_table_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table for downlink router port on tier-0 router
    # Segment ID is the ID of the  segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def get_downlink_port_arp_table_for_infra_segment_0(segment_id, opts = {})
      data, _status_code, _headers = get_downlink_port_arp_table_for_infra_segment_0_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table for downlink router port on tier-0 router
    # Segment ID is the ID of the  segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def get_downlink_port_arp_table_for_infra_segment_0_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_0 ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/gateway-interface-arp-table'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_downlink_port_arp_table_for_infra_segment_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table for downlink router port on tier-0 router in CSV
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def get_downlink_port_arp_table_for_infra_segment_in_csv(segment_id, opts = {})
      data, _status_code, _headers = get_downlink_port_arp_table_for_infra_segment_in_csv_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table for downlink router port on tier-0 router in CSV
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def get_downlink_port_arp_table_for_infra_segment_in_csv_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_in_csv ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_in_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_in_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_in_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/segments/{segment-id}/gateway-interface-arp-table?format=csv'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_downlink_port_arp_table_for_infra_segment_in_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table for downlink router port on tier-0 router in CSV
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def get_downlink_port_arp_table_for_infra_segment_in_csv_0(segment_id, opts = {})
      data, _status_code, _headers = get_downlink_port_arp_table_for_infra_segment_in_csv_0_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table for downlink router port on tier-0 router in CSV
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def get_downlink_port_arp_table_for_infra_segment_in_csv_0_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_in_csv_0 ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_in_csv_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_in_csv_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_downlink_port_arp_table_for_infra_segment_in_csv_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/gateway-interface-arp-table?format=csv'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_downlink_port_arp_table_for_infra_segment_in_csv_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from segment interface (downlink)
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def get_infra_segment_interface_arp_table(segment_id, opts = {})
      data, _status_code, _headers = get_infra_segment_interface_arp_table_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table from segment interface (downlink)
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def get_infra_segment_interface_arp_table_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/arp-table'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_infra_segment_interface_arp_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from segment interface (downlink)
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def get_infra_segment_interface_arp_table_0(segment_id, opts = {})
      data, _status_code, _headers = get_infra_segment_interface_arp_table_0_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table from segment interface (downlink)
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def get_infra_segment_interface_arp_table_0_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_0 ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/segments/{segment-id}/arp-table'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_infra_segment_interface_arp_table_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from segment interface (downlink) in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def get_infra_segment_interface_arp_table_csv(segment_id, opts = {})
      data, _status_code, _headers = get_infra_segment_interface_arp_table_csv_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table from segment interface (downlink) in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def get_infra_segment_interface_arp_table_csv_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_csv ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/segments/{segment-id}/arp-table?format=csv'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_infra_segment_interface_arp_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from segment interface (downlink) in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def get_infra_segment_interface_arp_table_csv_0(segment_id, opts = {})
      data, _status_code, _headers = get_infra_segment_interface_arp_table_csv_0_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table from segment interface (downlink) in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def get_infra_segment_interface_arp_table_csv_0_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_csv_0 ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_csv_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_csv_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_infra_segment_interface_arp_table_csv_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/arp-table?format=csv'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_infra_segment_interface_arp_table_csv_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from tier-0 interface
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the tier-0 interface, on a edge node if a query parameter \"edge_path=<policy-edge-path>\" is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def get_tier0_interface_arp_table(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_arp_table_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get ARP table from tier-0 interface
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the tier-0 interface, on a edge node if a query parameter \&quot;edge_path&#x3D;&lt;policy-edge-path&gt;\&quot; is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def get_tier0_interface_arp_table_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-table'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_tier0_interface_arp_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from tier-0 interface
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the tier-0 interface, on a edge node if a query parameter \"edge_path=<policy-edge-path>\" is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def get_tier0_interface_arp_table_0(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_arp_table_0_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get ARP table from tier-0 interface
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the tier-0 interface, on a edge node if a query parameter \&quot;edge_path&#x3D;&lt;policy-edge-path&gt;\&quot; is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def get_tier0_interface_arp_table_0_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_0"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-table'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_tier0_interface_arp_table_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from tier-0 interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 interface, on a edge node if a query parameter \"edge_path=<policy-edge-path>\" is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def get_tier0_interface_arp_table_csv(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_arp_table_csv_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get ARP table from tier-0 interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 interface, on a edge node if a query parameter \&quot;edge_path&#x3D;&lt;policy-edge-path&gt;\&quot; is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def get_tier0_interface_arp_table_csv_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-table?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_tier0_interface_arp_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from tier-0 interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 interface, on a edge node if a query parameter \"edge_path=<policy-edge-path>\" is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def get_tier0_interface_arp_table_csv_0(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_arp_table_csv_0_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get ARP table from tier-0 interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 interface, on a edge node if a query parameter \&quot;edge_path&#x3D;&lt;policy-edge-path&gt;\&quot; is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def get_tier0_interface_arp_table_csv_0_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv_0"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi.get_tier0_interface_arp_table_csv_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-table?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysInterfacesARPTableApi#get_tier0_interface_arp_table_csv_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
