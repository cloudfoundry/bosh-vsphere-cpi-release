=begin
#NSX-T Data Center Policy API

#VMware NSX-T Data Center Policy REST API

OpenAPI spec version: 3.1.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module NSXTPolicy
  class PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [ByodPolicyServiceInstance]
    def create_byod_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      data, _status_code, _headers = create_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts)
      data
    end

    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ByodPolicyServiceInstance, Fixnum, Hash)>] ByodPolicyServiceInstance data, response status code and response headers
    def create_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_byod_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_byod_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_byod_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_byod_policy_service_instance"
      end
      # verify the required parameter 'byod_policy_service_instance' is set
      if @api_client.config.client_side_validation && byod_policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'byod_policy_service_instance' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_byod_policy_service_instance"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(byod_policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ByodPolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#create_byod_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [ByodPolicyServiceInstance]
    def create_byod_policy_service_instance_0(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      data, _status_code, _headers = create_byod_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts)
      data
    end

    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ByodPolicyServiceInstance, Fixnum, Hash)>] ByodPolicyServiceInstance data, response status code and response headers
    def create_byod_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_byod_policy_service_instance_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_byod_policy_service_instance_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_byod_policy_service_instance_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_byod_policy_service_instance_0"
      end
      # verify the required parameter 'byod_policy_service_instance' is set
      if @api_client.config.client_side_validation && byod_policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'byod_policy_service_instance' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_byod_policy_service_instance_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(byod_policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ByodPolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#create_byod_policy_service_instance_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance
    # Create service instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [PolicyServiceInstance]
    def create_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      data, _status_code, _headers = create_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts)
      data
    end

    # Create service instance
    # Create service instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyServiceInstance, Fixnum, Hash)>] PolicyServiceInstance data, response status code and response headers
    def create_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_policy_service_instance"
      end
      # verify the required parameter 'policy_service_instance' is set
      if @api_client.config.client_side_validation && policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'policy_service_instance' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_policy_service_instance"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#create_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance
    # Create service instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [PolicyServiceInstance]
    def create_policy_service_instance_0(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      data, _status_code, _headers = create_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts)
      data
    end

    # Create service instance
    # Create service instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyServiceInstance, Fixnum, Hash)>] PolicyServiceInstance data, response status code and response headers
    def create_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_policy_service_instance_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_policy_service_instance_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_policy_service_instance_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_policy_service_instance_0"
      end
      # verify the required parameter 'policy_service_instance' is set
      if @api_client.config.client_side_validation && policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'policy_service_instance' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_policy_service_instance_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#create_policy_service_instance_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance endpoint
    # Create service instance endpoint with given request if not exist. Modification of service instance endpoint is not allowed. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [ServiceInstanceEndpoint]
    def create_service_instance_endpoint(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      data, _status_code, _headers = create_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts)
      data
    end

    # Create service instance endpoint
    # Create service instance endpoint with given request if not exist. Modification of service instance endpoint is not allowed. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceInstanceEndpoint, Fixnum, Hash)>] ServiceInstanceEndpoint data, response status code and response headers
    def create_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint' is set
      if @api_client.config.client_side_validation && service_instance_endpoint.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_instance_endpoint)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInstanceEndpoint')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#create_service_instance_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance endpoint
    # Create service instance endpoint with given request if not exist. Modification of service instance endpoint is not allowed. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [ServiceInstanceEndpoint]
    def create_service_instance_endpoint_0(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      data, _status_code, _headers = create_service_instance_endpoint_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts)
      data
    end

    # Create service instance endpoint
    # Create service instance endpoint with given request if not exist. Modification of service instance endpoint is not allowed. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceInstanceEndpoint, Fixnum, Hash)>] ServiceInstanceEndpoint data, response status code and response headers
    def create_service_instance_endpoint_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint_0"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint_0"
      end
      # verify the required parameter 'service_instance_endpoint' is set
      if @api_client.config.client_side_validation && service_instance_endpoint.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.create_service_instance_endpoint_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_instance_endpoint)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInstanceEndpoint')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#create_service_instance_endpoint_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete BYOD policy service instance
    # Delete BYOD policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_byod_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, opts = {})
      delete_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      nil
    end

    # Delete BYOD policy service instance
    # Delete BYOD policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_byod_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_byod_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_byod_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_byod_policy_service_instance"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#delete_byod_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete BYOD policy service instance
    # Delete BYOD policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_byod_policy_service_instance_0(tier_0_id, locale_service_id, service_instance_id, opts = {})
      delete_byod_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      nil
    end

    # Delete BYOD policy service instance
    # Delete BYOD policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_byod_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_byod_policy_service_instance_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_byod_policy_service_instance_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_byod_policy_service_instance_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_byod_policy_service_instance_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#delete_byod_policy_service_instance_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete policy service instance
    # Delete policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, opts = {})
      delete_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      nil
    end

    # Delete policy service instance
    # Delete policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#delete_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete policy service instance
    # Delete policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_service_instance_0(tier_0_id, locale_service_id, service_instance_id, opts = {})
      delete_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      nil
    end

    # Delete policy service instance
    # Delete policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#delete_policy_service_instance_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete service instance endpoint
    # Delete service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_service_instance_endpoint(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      delete_policy_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts)
      nil
    end

    # Delete service instance endpoint
    # Delete service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_endpoint"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#delete_policy_service_instance_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete service instance endpoint
    # Delete service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_service_instance_endpoint_0(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      delete_policy_service_instance_endpoint_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts)
      nil
    end

    # Delete service instance endpoint
    # Delete service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_service_instance_endpoint_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_endpoint_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_endpoint_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_endpoint_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_endpoint_0"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.delete_policy_service_instance_endpoint_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#delete_policy_service_instance_endpoint_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read all BYOD service instance objects under a tier-0
    # Read all BYOD service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ByodPolicyServiceInstanceListResult]
    def list_byod_policy_service_instances_for_tier0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_byod_policy_service_instances_for_tier0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read all BYOD service instance objects under a tier-0
    # Read all BYOD service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ByodPolicyServiceInstanceListResult, Fixnum, Hash)>] ByodPolicyServiceInstanceListResult data, response status code and response headers
    def list_byod_policy_service_instances_for_tier0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_byod_policy_service_instances_for_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_byod_policy_service_instances_for_tier0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_byod_policy_service_instances_for_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_byod_policy_service_instances_for_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_byod_policy_service_instances_for_tier0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ByodPolicyServiceInstanceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#list_byod_policy_service_instances_for_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read all BYOD service instance objects under a tier-0
    # Read all BYOD service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ByodPolicyServiceInstanceListResult]
    def list_byod_policy_service_instances_for_tier0_0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_byod_policy_service_instances_for_tier0_0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read all BYOD service instance objects under a tier-0
    # Read all BYOD service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ByodPolicyServiceInstanceListResult, Fixnum, Hash)>] ByodPolicyServiceInstanceListResult data, response status code and response headers
    def list_byod_policy_service_instances_for_tier0_0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_byod_policy_service_instances_for_tier0_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_byod_policy_service_instances_for_tier0_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_byod_policy_service_instances_for_tier0_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_byod_policy_service_instances_for_tier0_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_byod_policy_service_instances_for_tier0_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ByodPolicyServiceInstanceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#list_byod_policy_service_instances_for_tier0_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all service instance endpoint
    # List all service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceInstanceEndpointListResult]
    def list_policy_service_instance_endpoints(tier_0_id, locale_service_id, service_instance_id, opts = {})
      data, _status_code, _headers = list_policy_service_instance_endpoints_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      data
    end

    # List all service instance endpoint
    # List all service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceInstanceEndpointListResult, Fixnum, Hash)>] ServiceInstanceEndpointListResult data, response status code and response headers
    def list_policy_service_instance_endpoints_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInstanceEndpointListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#list_policy_service_instance_endpoints\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all service instance endpoint
    # List all service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceInstanceEndpointListResult]
    def list_policy_service_instance_endpoints_0(tier_0_id, locale_service_id, service_instance_id, opts = {})
      data, _status_code, _headers = list_policy_service_instance_endpoints_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      data
    end

    # List all service instance endpoint
    # List all service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceInstanceEndpointListResult, Fixnum, Hash)>] ServiceInstanceEndpointListResult data, response status code and response headers
    def list_policy_service_instance_endpoints_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.list_policy_service_instance_endpoints_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInstanceEndpointListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#list_policy_service_instance_endpoints_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_byod_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      patch_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts)
      nil
    end

    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_byod_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_byod_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_byod_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_byod_policy_service_instance"
      end
      # verify the required parameter 'byod_policy_service_instance' is set
      if @api_client.config.client_side_validation && byod_policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'byod_policy_service_instance' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_byod_policy_service_instance"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(byod_policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#patch_byod_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_byod_policy_service_instance_0(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      patch_byod_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts)
      nil
    end

    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_byod_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_byod_policy_service_instance_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_byod_policy_service_instance_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_byod_policy_service_instance_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_byod_policy_service_instance_0"
      end
      # verify the required parameter 'byod_policy_service_instance' is set
      if @api_client.config.client_side_validation && byod_policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'byod_policy_service_instance' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_byod_policy_service_instance_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(byod_policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#patch_byod_policy_service_instance_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance
    # Create Service Instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      patch_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts)
      nil
    end

    # Create service instance
    # Create Service Instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_policy_service_instance"
      end
      # verify the required parameter 'policy_service_instance' is set
      if @api_client.config.client_side_validation && policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'policy_service_instance' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_policy_service_instance"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#patch_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance
    # Create Service Instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_service_instance_0(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      patch_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts)
      nil
    end

    # Create service instance
    # Create Service Instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_policy_service_instance_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_policy_service_instance_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_policy_service_instance_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_policy_service_instance_0"
      end
      # verify the required parameter 'policy_service_instance' is set
      if @api_client.config.client_side_validation && policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'policy_service_instance' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_policy_service_instance_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#patch_policy_service_instance_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance endpoint
    # Create Service instance endpoint. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_service_instance_endpoint(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      patch_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts)
      nil
    end

    # Create service instance endpoint
    # Create Service instance endpoint. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint' is set
      if @api_client.config.client_side_validation && service_instance_endpoint.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_instance_endpoint)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#patch_service_instance_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance endpoint
    # Create Service instance endpoint. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_service_instance_endpoint_0(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      patch_service_instance_endpoint_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts)
      nil
    end

    # Create service instance endpoint
    # Create Service instance endpoint. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_service_instance_endpoint_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint_0"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint_0"
      end
      # verify the required parameter 'service_instance_endpoint' is set
      if @api_client.config.client_side_validation && service_instance_endpoint.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.patch_service_instance_endpoint_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_instance_endpoint)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#patch_service_instance_endpoint_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read all service instance objects under a tier-0
    # Read all service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyServiceInstanceListResult]
    def read_all_policy_service_instances_for_tier0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = read_all_policy_service_instances_for_tier0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read all service instance objects under a tier-0
    # Read all service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyServiceInstanceListResult, Fixnum, Hash)>] PolicyServiceInstanceListResult data, response status code and response headers
    def read_all_policy_service_instances_for_tier0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_all_policy_service_instances_for_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_all_policy_service_instances_for_tier0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_all_policy_service_instances_for_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_all_policy_service_instances_for_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_all_policy_service_instances_for_tier0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyServiceInstanceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#read_all_policy_service_instances_for_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read all service instance objects under a tier-0
    # Read all service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyServiceInstanceListResult]
    def read_all_policy_service_instances_for_tier0_0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = read_all_policy_service_instances_for_tier0_0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read all service instance objects under a tier-0
    # Read all service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyServiceInstanceListResult, Fixnum, Hash)>] PolicyServiceInstanceListResult data, response status code and response headers
    def read_all_policy_service_instances_for_tier0_0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_all_policy_service_instances_for_tier0_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_all_policy_service_instances_for_tier0_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_all_policy_service_instances_for_tier0_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_all_policy_service_instances_for_tier0_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_all_policy_service_instances_for_tier0_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyServiceInstanceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#read_all_policy_service_instances_for_tier0_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BYOD service instance
    # Read BYOD service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param [Hash] opts the optional parameters
    # @return [ByodPolicyServiceInstance]
    def read_byod_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, opts = {})
      data, _status_code, _headers = read_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      data
    end

    # Read BYOD service instance
    # Read BYOD service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(ByodPolicyServiceInstance, Fixnum, Hash)>] ByodPolicyServiceInstance data, response status code and response headers
    def read_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_byod_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_byod_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_byod_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_byod_policy_service_instance"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ByodPolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#read_byod_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BYOD service instance
    # Read BYOD service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param [Hash] opts the optional parameters
    # @return [ByodPolicyServiceInstance]
    def read_byod_policy_service_instance_0(tier_0_id, locale_service_id, service_instance_id, opts = {})
      data, _status_code, _headers = read_byod_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      data
    end

    # Read BYOD service instance
    # Read BYOD service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(ByodPolicyServiceInstance, Fixnum, Hash)>] ByodPolicyServiceInstance data, response status code and response headers
    def read_byod_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_byod_policy_service_instance_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_byod_policy_service_instance_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_byod_policy_service_instance_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_byod_policy_service_instance_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ByodPolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#read_byod_policy_service_instance_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read service instance
    # Read service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [PolicyServiceInstance]
    def read_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, opts = {})
      data, _status_code, _headers = read_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      data
    end

    # Read service instance
    # Read service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyServiceInstance, Fixnum, Hash)>] PolicyServiceInstance data, response status code and response headers
    def read_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#read_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read service instance
    # Read service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [PolicyServiceInstance]
    def read_policy_service_instance_0(tier_0_id, locale_service_id, service_instance_id, opts = {})
      data, _status_code, _headers = read_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      data
    end

    # Read service instance
    # Read service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyServiceInstance, Fixnum, Hash)>] PolicyServiceInstance data, response status code and response headers
    def read_policy_service_instance_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#read_policy_service_instance_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read service instance endpoint
    # Read service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [ServiceInstanceEndpoint]
    def read_policy_service_instance_endpoint(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      data, _status_code, _headers = read_policy_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts)
      data
    end

    # Read service instance endpoint
    # Read service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceInstanceEndpoint, Fixnum, Hash)>] ServiceInstanceEndpoint data, response status code and response headers
    def read_policy_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_endpoint"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInstanceEndpoint')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#read_policy_service_instance_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read service instance endpoint
    # Read service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [ServiceInstanceEndpoint]
    def read_policy_service_instance_endpoint_0(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      data, _status_code, _headers = read_policy_service_instance_endpoint_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts)
      data
    end

    # Read service instance endpoint
    # Read service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceInstanceEndpoint, Fixnum, Hash)>] ServiceInstanceEndpoint data, response status code and response headers
    def read_policy_service_instance_endpoint_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_endpoint_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_endpoint_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_endpoint_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_endpoint_0"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.read_policy_service_instance_endpoint_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInstanceEndpoint')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#read_policy_service_instance_endpoint_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Renew the authentication tokens
    # Use this API when an alarm complaining JWT expiry is raised while deploying partner service VM. The OVF for partner service needs to be downloaded from partner services provider. It might be possible that the authentication token for this communication is expired when the service VM deployment starts. That will either require re-login through UI or use of this API. Certain authentication and authorization steps are internally processed in order to enable communication with partner service provider. This API offers the functionality to re-establish communication with partner services provider. This API needs open id and access token to be passed as headers. Those can be obtained from CSP authorize API. Please make sure to pass headers - Authorization:<Bearer ACCESS_TOKEN> and X-NSX-OpenId:<OPEN_ID>. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def renew_authentication_tokens_for_policy_service_instance_reauth(tier_0_id, locale_service_id, service_instance_id, opts = {})
      renew_authentication_tokens_for_policy_service_instance_reauth_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      nil
    end

    # Renew the authentication tokens
    # Use this API when an alarm complaining JWT expiry is raised while deploying partner service VM. The OVF for partner service needs to be downloaded from partner services provider. It might be possible that the authentication token for this communication is expired when the service VM deployment starts. That will either require re-login through UI or use of this API. Certain authentication and authorization steps are internally processed in order to enable communication with partner service provider. This API offers the functionality to re-establish communication with partner services provider. This API needs open id and access token to be passed as headers. Those can be obtained from CSP authorize API. Please make sure to pass headers - Authorization:&lt;Bearer ACCESS_TOKEN&gt; and X-NSX-OpenId:&lt;OPEN_ID&gt;. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def renew_authentication_tokens_for_policy_service_instance_reauth_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance_reauth ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance_reauth"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance_reauth"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance_reauth"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}?action=reauth'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#renew_authentication_tokens_for_policy_service_instance_reauth\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Renew the authentication tokens
    # Use this API when an alarm complaining JWT expiry is raised while deploying partner service VM. The OVF for partner service needs to be downloaded from partner services provider. It might be possible that the authentication token for this communication is expired when the service VM deployment starts. That will either require re-login through UI or use of this API. Certain authentication and authorization steps are internally processed in order to enable communication with partner service provider. This API offers the functionality to re-establish communication with partner services provider. This API needs open id and access token to be passed as headers. Those can be obtained from CSP authorize API. Please make sure to pass headers - Authorization:<Bearer ACCESS_TOKEN> and X-NSX-OpenId:<OPEN_ID>. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def renew_authentication_tokens_for_policy_service_instance_reauth_0(tier_0_id, locale_service_id, service_instance_id, opts = {})
      renew_authentication_tokens_for_policy_service_instance_reauth_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      nil
    end

    # Renew the authentication tokens
    # Use this API when an alarm complaining JWT expiry is raised while deploying partner service VM. The OVF for partner service needs to be downloaded from partner services provider. It might be possible that the authentication token for this communication is expired when the service VM deployment starts. That will either require re-login through UI or use of this API. Certain authentication and authorization steps are internally processed in order to enable communication with partner service provider. This API offers the functionality to re-establish communication with partner services provider. This API needs open id and access token to be passed as headers. Those can be obtained from CSP authorize API. Please make sure to pass headers - Authorization:&lt;Bearer ACCESS_TOKEN&gt; and X-NSX-OpenId:&lt;OPEN_ID&gt;. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def renew_authentication_tokens_for_policy_service_instance_reauth_0_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance_reauth_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance_reauth_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance_reauth_0"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance_reauth_0"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}?action=reauth'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityServiceInsertionServiceInstancesTier0GatewaysApi#renew_authentication_tokens_for_policy_service_instance_reauth_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
