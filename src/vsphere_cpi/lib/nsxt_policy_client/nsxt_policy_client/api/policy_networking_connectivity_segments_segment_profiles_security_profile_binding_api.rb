=begin
#NSX-T Data Center Policy API

#VMware NSX-T Data Center Policy REST API

OpenAPI spec version: 3.1.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module NSXTPolicy
  class PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Patch segment security profile binding map
    # Create a new segment security profile binding map if the given security profile binding map does not exist. Otherwise, patch the existing segment security profile binding map. For objects with no binding maps, default profile is applied. 
    # @param tier_1_id tier-1 gateway id
    # @param segment_id segment id
    # @param segment_security_profile_binding_map_id segment security profile binding map id
    # @param segment_security_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_segment_security_profile_binding(tier_1_id, segment_id, segment_security_profile_binding_map_id, segment_security_profile_binding_map, opts = {})
      patch_segment_security_profile_binding_with_http_info(tier_1_id, segment_id, segment_security_profile_binding_map_id, segment_security_profile_binding_map, opts)
      nil
    end

    # Patch segment security profile binding map
    # Create a new segment security profile binding map if the given security profile binding map does not exist. Otherwise, patch the existing segment security profile binding map. For objects with no binding maps, default profile is applied. 
    # @param tier_1_id tier-1 gateway id
    # @param segment_id segment id
    # @param segment_security_profile_binding_map_id segment security profile binding map id
    # @param segment_security_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_segment_security_profile_binding_with_http_info(tier_1_id, segment_id, segment_security_profile_binding_map_id, segment_security_profile_binding_map, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi.patch_segment_security_profile_binding ...'
      end
      # verify the required parameter 'tier_1_id' is set
      if @api_client.config.client_side_validation && tier_1_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_1_id' when calling PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi.patch_segment_security_profile_binding"
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi.patch_segment_security_profile_binding"
      end
      # verify the required parameter 'segment_security_profile_binding_map_id' is set
      if @api_client.config.client_side_validation && segment_security_profile_binding_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_security_profile_binding_map_id' when calling PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi.patch_segment_security_profile_binding"
      end
      # verify the required parameter 'segment_security_profile_binding_map' is set
      if @api_client.config.client_side_validation && segment_security_profile_binding_map.nil?
        fail ArgumentError, "Missing the required parameter 'segment_security_profile_binding_map' when calling PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi.patch_segment_security_profile_binding"
      end
      # resource path
      local_var_path = '/global-infra/tier-1s/{tier-1-id}/segments/{segment-id}/segment-security-profile-binding-maps/{segment-security-profile-binding-map-id}'.sub('{' + 'tier-1-id' + '}', tier_1_id.to_s).sub('{' + 'segment-id' + '}', segment_id.to_s).sub('{' + 'segment-security-profile-binding-map-id' + '}', segment_security_profile_binding_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(segment_security_profile_binding_map)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi#patch_segment_security_profile_binding\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch segment security profile binding map
    # Create a new segment security profile binding map if the given security profile binding map does not exist. Otherwise, patch the existing segment security profile binding map. For objects with no binding maps, default profile is applied. 
    # @param tier_1_id tier-1 gateway id
    # @param segment_id segment id
    # @param segment_security_profile_binding_map_id segment security profile binding map id
    # @param segment_security_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_segment_security_profile_binding_0(tier_1_id, segment_id, segment_security_profile_binding_map_id, segment_security_profile_binding_map, opts = {})
      patch_segment_security_profile_binding_0_with_http_info(tier_1_id, segment_id, segment_security_profile_binding_map_id, segment_security_profile_binding_map, opts)
      nil
    end

    # Patch segment security profile binding map
    # Create a new segment security profile binding map if the given security profile binding map does not exist. Otherwise, patch the existing segment security profile binding map. For objects with no binding maps, default profile is applied. 
    # @param tier_1_id tier-1 gateway id
    # @param segment_id segment id
    # @param segment_security_profile_binding_map_id segment security profile binding map id
    # @param segment_security_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_segment_security_profile_binding_0_with_http_info(tier_1_id, segment_id, segment_security_profile_binding_map_id, segment_security_profile_binding_map, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi.patch_segment_security_profile_binding_0 ...'
      end
      # verify the required parameter 'tier_1_id' is set
      if @api_client.config.client_side_validation && tier_1_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_1_id' when calling PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi.patch_segment_security_profile_binding_0"
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi.patch_segment_security_profile_binding_0"
      end
      # verify the required parameter 'segment_security_profile_binding_map_id' is set
      if @api_client.config.client_side_validation && segment_security_profile_binding_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_security_profile_binding_map_id' when calling PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi.patch_segment_security_profile_binding_0"
      end
      # verify the required parameter 'segment_security_profile_binding_map' is set
      if @api_client.config.client_side_validation && segment_security_profile_binding_map.nil?
        fail ArgumentError, "Missing the required parameter 'segment_security_profile_binding_map' when calling PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi.patch_segment_security_profile_binding_0"
      end
      # resource path
      local_var_path = '/infra/tier-1s/{tier-1-id}/segments/{segment-id}/segment-security-profile-binding-maps/{segment-security-profile-binding-map-id}'.sub('{' + 'tier-1-id' + '}', tier_1_id.to_s).sub('{' + 'segment-id' + '}', segment_id.to_s).sub('{' + 'segment-security-profile-binding-map-id' + '}', segment_security_profile_binding_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(segment_security_profile_binding_map)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivitySegmentsSegmentProfilesSecurityProfileBindingApi#patch_segment_security_profile_binding_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
