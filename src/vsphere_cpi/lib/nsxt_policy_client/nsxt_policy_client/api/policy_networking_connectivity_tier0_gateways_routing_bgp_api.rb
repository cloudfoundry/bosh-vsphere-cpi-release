=begin
#NSX-T Data Center Policy API

#VMware NSX-T Data Center Policy REST API

OpenAPI spec version: 3.1.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module NSXTPolicy
  class PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [BgpNeighborConfig]
    def create_or_replace_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      data, _status_code, _headers = create_or_replace_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts)
      data
    end

    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(BgpNeighborConfig, Fixnum, Hash)>] BgpNeighborConfig data, response status code and response headers
    def create_or_replace_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_neighbor_config"
      end
      # verify the required parameter 'bgp_neighbor_config' is set
      if @api_client.config.client_side_validation && bgp_neighbor_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_neighbor_config' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_neighbor_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#create_or_replace_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [BgpNeighborConfig]
    def create_or_replace_bgp_neighbor_config_0(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      data, _status_code, _headers = create_or_replace_bgp_neighbor_config_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts)
      data
    end

    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(BgpNeighborConfig, Fixnum, Hash)>] BgpNeighborConfig data, response status code and response headers
    def create_or_replace_bgp_neighbor_config_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_neighbor_config_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_neighbor_config_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_neighbor_config_0"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_neighbor_config_0"
      end
      # verify the required parameter 'bgp_neighbor_config' is set
      if @api_client.config.client_side_validation && bgp_neighbor_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_neighbor_config' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_neighbor_config_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_neighbor_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#create_or_replace_bgp_neighbor_config_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP routing config
    # If BGP routing config is not already present, create BGP routing config. If it already exists, replace the BGP routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [BgpRoutingConfig]
    def create_or_replace_bgp_routing_config(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      data, _status_code, _headers = create_or_replace_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts)
      data
    end

    # Create or update a BGP routing config
    # If BGP routing config is not already present, create BGP routing config. If it already exists, replace the BGP routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(BgpRoutingConfig, Fixnum, Hash)>] BgpRoutingConfig data, response status code and response headers
    def create_or_replace_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_routing_config"
      end
      # verify the required parameter 'bgp_routing_config' is set
      if @api_client.config.client_side_validation && bgp_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_routing_config' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_routing_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#create_or_replace_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP routing config
    # If BGP routing config is not already present, create BGP routing config. If it already exists, replace the BGP routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [BgpRoutingConfig]
    def create_or_replace_bgp_routing_config_0(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      data, _status_code, _headers = create_or_replace_bgp_routing_config_0_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts)
      data
    end

    # Create or update a BGP routing config
    # If BGP routing config is not already present, create BGP routing config. If it already exists, replace the BGP routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(BgpRoutingConfig, Fixnum, Hash)>] BgpRoutingConfig data, response status code and response headers
    def create_or_replace_bgp_routing_config_0_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_routing_config_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_routing_config_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_routing_config_0"
      end
      # verify the required parameter 'bgp_routing_config' is set
      if @api_client.config.client_side_validation && bgp_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_routing_config' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.create_or_replace_bgp_routing_config_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#create_or_replace_bgp_routing_config_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete BGP neighbor config
    # Delete BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def delete_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, opts = {})
      delete_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      nil
    end

    # Delete BGP neighbor config
    # Delete BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.delete_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.delete_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.delete_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.delete_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#delete_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete BGP neighbor config
    # Delete BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def delete_bgp_neighbor_config_0(tier_0_id, locale_service_id, neighbor_id, opts = {})
      delete_bgp_neighbor_config_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      nil
    end

    # Delete BGP neighbor config
    # Delete BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_bgp_neighbor_config_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.delete_bgp_neighbor_config_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.delete_bgp_neighbor_config_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.delete_bgp_neighbor_config_0"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.delete_bgp_neighbor_config_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#delete_bgp_neighbor_config_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor advertised routes
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled. The query parameter \"source=cached\" is not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRoutesListResult]
    def get_tier0_bgp_neighbor_advertised_routes(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_advertised_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get BGP neighbor advertised routes
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled. The query parameter \&quot;source&#x3D;cached\&quot; is not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRoutesListResult, Fixnum, Hash)>] BgpNeighborRoutesListResult data, response status code and response headers
    def get_tier0_bgp_neighbor_advertised_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/advertised-routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#get_tier0_bgp_neighbor_advertised_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor advertised routes
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled. The query parameter \"source=cached\" is not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRoutesListResult]
    def get_tier0_bgp_neighbor_advertised_routes_0(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_advertised_routes_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get BGP neighbor advertised routes
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled. The query parameter \&quot;source&#x3D;cached\&quot; is not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRoutesListResult, Fixnum, Hash)>] BgpNeighborRoutesListResult data, response status code and response headers
    def get_tier0_bgp_neighbor_advertised_routes_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_0"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_0"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_0, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/advertised-routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#get_tier0_bgp_neighbor_advertised_routes_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor advertised routes in CSV format
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled in CSV format. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRouteDetailsInCsvFormat]
    def get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get BGP neighbor advertised routes in CSV format
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled in CSV format. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRouteDetailsInCsvFormat, Fixnum, Hash)>] BgpNeighborRouteDetailsInCsvFormat data, response status code and response headers
    def get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/advertised-routes?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRouteDetailsInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor advertised routes in CSV format
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled in CSV format. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRouteDetailsInCsvFormat]
    def get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get BGP neighbor advertised routes in CSV format
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled in CSV format. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRouteDetailsInCsvFormat, Fixnum, Hash)>] BgpNeighborRouteDetailsInCsvFormat data, response status code and response headers
    def get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/advertised-routes?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRouteDetailsInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#get_tier0_bgp_neighbor_advertised_routes_in_csv_format_csv_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routes learned by BGP neighbor
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRoutesListResult]
    def get_tier0_bgp_neighbor_routes(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get routes learned by BGP neighbor
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRoutesListResult, Fixnum, Hash)>] BgpNeighborRoutesListResult data, response status code and response headers
    def get_tier0_bgp_neighbor_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#get_tier0_bgp_neighbor_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routes learned by BGP neighbor
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRoutesListResult]
    def get_tier0_bgp_neighbor_routes_0(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_routes_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get routes learned by BGP neighbor
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRoutesListResult, Fixnum, Hash)>] BgpNeighborRoutesListResult data, response status code and response headers
    def get_tier0_bgp_neighbor_routes_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_0"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_0"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_0, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#get_tier0_bgp_neighbor_routes_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routes learned by BGP neighbor in CSV format
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRouteDetailsInCsvFormat]
    def get_tier0_bgp_neighbor_routes_in_csv_format_csv(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_routes_in_csv_format_csv_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get routes learned by BGP neighbor in CSV format
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRouteDetailsInCsvFormat, Fixnum, Hash)>] BgpNeighborRouteDetailsInCsvFormat data, response status code and response headers
    def get_tier0_bgp_neighbor_routes_in_csv_format_csv_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/routes?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRouteDetailsInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#get_tier0_bgp_neighbor_routes_in_csv_format_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routes learned by BGP neighbor in CSV format
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRouteDetailsInCsvFormat]
    def get_tier0_bgp_neighbor_routes_in_csv_format_csv_0(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_routes_in_csv_format_csv_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get routes learned by BGP neighbor in CSV format
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRouteDetailsInCsvFormat, Fixnum, Hash)>] BgpNeighborRouteDetailsInCsvFormat data, response status code and response headers
    def get_tier0_bgp_neighbor_routes_in_csv_format_csv_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv_0"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv_0"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv_0, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbor_routes_in_csv_format_csv_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/routes?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRouteDetailsInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#get_tier0_bgp_neighbor_routes_in_csv_format_csv_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor status for the Tier0
    # Returns the status of all the BGP neighbors for the given Tier0. To get BGP neighbor status for a particular enforcement point, parameter \"enforcement_point_path=<enforcement_point_path>\" needs to be specified. If an enforcement_point is unspecified, then bgp neighbor status for all enforcement points is fetched. To get BGP neighbors status for the logical router from particular edge node, parameter \"edge_path=<edge_path>\" needs to be specified. If an edge_path is unspecified, then bgp neighbor status for all edges is fetched. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyBgpNeighborsStatusListResult]
    def get_tier0_bgp_neighbors_status(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbors_status_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get BGP neighbor status for the Tier0
    # Returns the status of all the BGP neighbors for the given Tier0. To get BGP neighbor status for a particular enforcement point, parameter \&quot;enforcement_point_path&#x3D;&lt;enforcement_point_path&gt;\&quot; needs to be specified. If an enforcement_point is unspecified, then bgp neighbor status for all enforcement points is fetched. To get BGP neighbors status for the logical router from particular edge node, parameter \&quot;edge_path&#x3D;&lt;edge_path&gt;\&quot; needs to be specified. If an edge_path is unspecified, then bgp neighbor status for all edges is fetched. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyBgpNeighborsStatusListResult, Fixnum, Hash)>] PolicyBgpNeighborsStatusListResult data, response status code and response headers
    def get_tier0_bgp_neighbors_status_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbors_status ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbors_status"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbors_status"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbors_status, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbors_status, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/status'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyBgpNeighborsStatusListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#get_tier0_bgp_neighbors_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor status for the Tier0
    # Returns the status of all the BGP neighbors for the given Tier0. To get BGP neighbor status for a particular enforcement point, parameter \"enforcement_point_path=<enforcement_point_path>\" needs to be specified. If an enforcement_point is unspecified, then bgp neighbor status for all enforcement points is fetched. To get BGP neighbors status for the logical router from particular edge node, parameter \"edge_path=<edge_path>\" needs to be specified. If an edge_path is unspecified, then bgp neighbor status for all edges is fetched. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyBgpNeighborsStatusListResult]
    def get_tier0_bgp_neighbors_status_0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbors_status_0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get BGP neighbor status for the Tier0
    # Returns the status of all the BGP neighbors for the given Tier0. To get BGP neighbor status for a particular enforcement point, parameter \&quot;enforcement_point_path&#x3D;&lt;enforcement_point_path&gt;\&quot; needs to be specified. If an enforcement_point is unspecified, then bgp neighbor status for all enforcement points is fetched. To get BGP neighbors status for the logical router from particular edge node, parameter \&quot;edge_path&#x3D;&lt;edge_path&gt;\&quot; needs to be specified. If an edge_path is unspecified, then bgp neighbor status for all edges is fetched. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyBgpNeighborsStatusListResult, Fixnum, Hash)>] PolicyBgpNeighborsStatusListResult data, response status code and response headers
    def get_tier0_bgp_neighbors_status_0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbors_status_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbors_status_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbors_status_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbors_status_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.get_tier0_bgp_neighbors_status_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/status'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyBgpNeighborsStatusListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#get_tier0_bgp_neighbors_status_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List BGP neighbor configurations
    # Paginated list of all BGP neighbor configurations 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborConfigListResult]
    def list_bgp_neighbor_configs(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_bgp_neighbor_configs_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List BGP neighbor configurations
    # Paginated list of all BGP neighbor configurations 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborConfigListResult, Fixnum, Hash)>] BgpNeighborConfigListResult data, response status code and response headers
    def list_bgp_neighbor_configs_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.list_bgp_neighbor_configs ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.list_bgp_neighbor_configs"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.list_bgp_neighbor_configs"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.list_bgp_neighbor_configs, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.list_bgp_neighbor_configs, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfigListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#list_bgp_neighbor_configs\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List BGP neighbor configurations
    # Paginated list of all BGP neighbor configurations 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborConfigListResult]
    def list_bgp_neighbor_configs_0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_bgp_neighbor_configs_0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List BGP neighbor configurations
    # Paginated list of all BGP neighbor configurations 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborConfigListResult, Fixnum, Hash)>] BgpNeighborConfigListResult data, response status code and response headers
    def list_bgp_neighbor_configs_0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.list_bgp_neighbor_configs_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.list_bgp_neighbor_configs_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.list_bgp_neighbor_configs_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.list_bgp_neighbor_configs_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.list_bgp_neighbor_configs_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfigListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#list_bgp_neighbor_configs_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      patch_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts)
      nil
    end

    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_neighbor_config"
      end
      # verify the required parameter 'bgp_neighbor_config' is set
      if @api_client.config.client_side_validation && bgp_neighbor_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_neighbor_config' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_neighbor_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#patch_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_bgp_neighbor_config_0(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      patch_bgp_neighbor_config_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts)
      nil
    end

    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_bgp_neighbor_config_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_neighbor_config_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_neighbor_config_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_neighbor_config_0"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_neighbor_config_0"
      end
      # verify the required parameter 'bgp_neighbor_config' is set
      if @api_client.config.client_side_validation && bgp_neighbor_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_neighbor_config' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_neighbor_config_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_neighbor_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#patch_bgp_neighbor_config_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update BGP routing config
    # If an BGP routing config not present, create BGP routing config. If it already exists, update the routing config. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_bgp_routing_config(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      patch_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts)
      nil
    end

    # Create or update BGP routing config
    # If an BGP routing config not present, create BGP routing config. If it already exists, update the routing config. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_routing_config"
      end
      # verify the required parameter 'bgp_routing_config' is set
      if @api_client.config.client_side_validation && bgp_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_routing_config' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_routing_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#patch_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update BGP routing config
    # If an BGP routing config not present, create BGP routing config. If it already exists, update the routing config. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_bgp_routing_config_0(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      patch_bgp_routing_config_0_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts)
      nil
    end

    # Create or update BGP routing config
    # If an BGP routing config not present, create BGP routing config. If it already exists, update the routing config. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_bgp_routing_config_0_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_routing_config_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_routing_config_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_routing_config_0"
      end
      # verify the required parameter 'bgp_routing_config' is set
      if @api_client.config.client_side_validation && bgp_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_routing_config' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.patch_bgp_routing_config_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#patch_bgp_routing_config_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BGP neighbor config
    # Read BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @return [BgpNeighborConfig]
    def read_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = read_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Read BGP neighbor config
    # Read BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BgpNeighborConfig, Fixnum, Hash)>] BgpNeighborConfig data, response status code and response headers
    def read_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#read_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BGP neighbor config
    # Read BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @return [BgpNeighborConfig]
    def read_bgp_neighbor_config_0(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = read_bgp_neighbor_config_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Read BGP neighbor config
    # Read BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BgpNeighborConfig, Fixnum, Hash)>] BgpNeighborConfig data, response status code and response headers
    def read_bgp_neighbor_config_0_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_neighbor_config_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_neighbor_config_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_neighbor_config_0"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_neighbor_config_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#read_bgp_neighbor_config_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BGP routing config
    # Read BGP routing config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [BgpRoutingConfig]
    def read_bgp_routing_config(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = read_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read BGP routing config
    # Read BGP routing config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BgpRoutingConfig, Fixnum, Hash)>] BgpRoutingConfig data, response status code and response headers
    def read_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_routing_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#read_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BGP routing config
    # Read BGP routing config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [BgpRoutingConfig]
    def read_bgp_routing_config_0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = read_bgp_routing_config_0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read BGP routing config
    # Read BGP routing config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BgpRoutingConfig, Fixnum, Hash)>] BgpRoutingConfig data, response status code and response headers
    def read_bgp_routing_config_0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_routing_config_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_routing_config_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi.read_bgp_routing_config_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingConnectivityTier0GatewaysRoutingBGPApi#read_bgp_routing_config_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
