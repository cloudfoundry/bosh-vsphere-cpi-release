=begin
#NSX-T Data Center Policy API

#VMware NSX-T Data Center Policy REST API

OpenAPI spec version: 3.1.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module NSXTPolicy
  class PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # create or update Global IDS Signature
    # Update global intrusion detection signature.
    # @param signature_id Signature ID
    # @param global_ids_signature 
    # @param [Hash] opts the optional parameters
    # @return [GlobalIdsSignature]
    def create_or_update_global_ids_signature(signature_id, global_ids_signature, opts = {})
      data, _status_code, _headers = create_or_update_global_ids_signature_with_http_info(signature_id, global_ids_signature, opts)
      data
    end

    # create or update Global IDS Signature
    # Update global intrusion detection signature.
    # @param signature_id Signature ID
    # @param global_ids_signature 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GlobalIdsSignature, Fixnum, Hash)>] GlobalIdsSignature data, response status code and response headers
    def create_or_update_global_ids_signature_with_http_info(signature_id, global_ids_signature, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.create_or_update_global_ids_signature ...'
      end
      # verify the required parameter 'signature_id' is set
      if @api_client.config.client_side_validation && signature_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_id' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.create_or_update_global_ids_signature"
      end
      # verify the required parameter 'global_ids_signature' is set
      if @api_client.config.client_side_validation && global_ids_signature.nil?
        fail ArgumentError, "Missing the required parameter 'global_ids_signature' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.create_or_update_global_ids_signature"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/security/intrusion-services/global-signatures/{signature-id}'.sub('{' + 'signature-id' + '}', signature_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(global_ids_signature)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GlobalIdsSignature')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#create_or_update_global_ids_signature\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # create or update Global IDS Signature
    # Update global intrusion detection signature.
    # @param signature_id Signature ID
    # @param global_ids_signature 
    # @param [Hash] opts the optional parameters
    # @return [GlobalIdsSignature]
    def create_or_update_global_ids_signature_0(signature_id, global_ids_signature, opts = {})
      data, _status_code, _headers = create_or_update_global_ids_signature_0_with_http_info(signature_id, global_ids_signature, opts)
      data
    end

    # create or update Global IDS Signature
    # Update global intrusion detection signature.
    # @param signature_id Signature ID
    # @param global_ids_signature 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GlobalIdsSignature, Fixnum, Hash)>] GlobalIdsSignature data, response status code and response headers
    def create_or_update_global_ids_signature_0_with_http_info(signature_id, global_ids_signature, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.create_or_update_global_ids_signature_0 ...'
      end
      # verify the required parameter 'signature_id' is set
      if @api_client.config.client_side_validation && signature_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_id' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.create_or_update_global_ids_signature_0"
      end
      # verify the required parameter 'global_ids_signature' is set
      if @api_client.config.client_side_validation && global_ids_signature.nil?
        fail ArgumentError, "Missing the required parameter 'global_ids_signature' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.create_or_update_global_ids_signature_0"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/security/intrusion-services/global-signatures/{signature-id}'.sub('{' + 'signature-id' + '}', signature_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(global_ids_signature)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GlobalIdsSignature')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#create_or_update_global_ids_signature_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Global IDS signature
    # Delete global intrusion detection signature. 
    # @param signature_id Signature ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_global_ids_signature(signature_id, opts = {})
      delete_global_ids_signature_with_http_info(signature_id, opts)
      nil
    end

    # Delete Global IDS signature
    # Delete global intrusion detection signature. 
    # @param signature_id Signature ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_global_ids_signature_with_http_info(signature_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.delete_global_ids_signature ...'
      end
      # verify the required parameter 'signature_id' is set
      if @api_client.config.client_side_validation && signature_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_id' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.delete_global_ids_signature"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/security/intrusion-services/global-signatures/{signature-id}'.sub('{' + 'signature-id' + '}', signature_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#delete_global_ids_signature\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Global IDS signature
    # Delete global intrusion detection signature. 
    # @param signature_id Signature ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_global_ids_signature_0(signature_id, opts = {})
      delete_global_ids_signature_0_with_http_info(signature_id, opts)
      nil
    end

    # Delete Global IDS signature
    # Delete global intrusion detection signature. 
    # @param signature_id Signature ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_global_ids_signature_0_with_http_info(signature_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.delete_global_ids_signature_0 ...'
      end
      # verify the required parameter 'signature_id' is set
      if @api_client.config.client_side_validation && signature_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_id' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.delete_global_ids_signature_0"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/security/intrusion-services/global-signatures/{signature-id}'.sub('{' + 'signature-id' + '}', signature_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#delete_global_ids_signature_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Global IDS signature.
    # Read global intrusion detection signature 
    # @param signature_id Signature ID
    # @param [Hash] opts the optional parameters
    # @return [GlobalIdsSignature]
    def get_global_ids_signature(signature_id, opts = {})
      data, _status_code, _headers = get_global_ids_signature_with_http_info(signature_id, opts)
      data
    end

    # Get Global IDS signature.
    # Read global intrusion detection signature 
    # @param signature_id Signature ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(GlobalIdsSignature, Fixnum, Hash)>] GlobalIdsSignature data, response status code and response headers
    def get_global_ids_signature_with_http_info(signature_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_global_ids_signature ...'
      end
      # verify the required parameter 'signature_id' is set
      if @api_client.config.client_side_validation && signature_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_id' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_global_ids_signature"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/security/intrusion-services/global-signatures/{signature-id}'.sub('{' + 'signature-id' + '}', signature_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GlobalIdsSignature')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#get_global_ids_signature\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Global IDS signature.
    # Read global intrusion detection signature 
    # @param signature_id Signature ID
    # @param [Hash] opts the optional parameters
    # @return [GlobalIdsSignature]
    def get_global_ids_signature_0(signature_id, opts = {})
      data, _status_code, _headers = get_global_ids_signature_0_with_http_info(signature_id, opts)
      data
    end

    # Get Global IDS signature.
    # Read global intrusion detection signature 
    # @param signature_id Signature ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(GlobalIdsSignature, Fixnum, Hash)>] GlobalIdsSignature data, response status code and response headers
    def get_global_ids_signature_0_with_http_info(signature_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_global_ids_signature_0 ...'
      end
      # verify the required parameter 'signature_id' is set
      if @api_client.config.client_side_validation && signature_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_id' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_global_ids_signature_0"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/security/intrusion-services/global-signatures/{signature-id}'.sub('{' + 'signature-id' + '}', signature_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GlobalIdsSignature')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#get_global_ids_signature_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IDS signature status
    # Intrusion detection system signatures status. 
    # @param [Hash] opts the optional parameters
    # @return [IdsSignatureStatus]
    def get_ids_signature_status(opts = {})
      data, _status_code, _headers = get_ids_signature_status_with_http_info(opts)
      data
    end

    # Get IDS signature status
    # Intrusion detection system signatures status. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(IdsSignatureStatus, Fixnum, Hash)>] IdsSignatureStatus data, response status code and response headers
    def get_ids_signature_status_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_ids_signature_status ...'
      end
      # resource path
      local_var_path = '/infra/settings/firewall/security/intrusion-services/signatures/status'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'IdsSignatureStatus')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#get_ids_signature_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IDS signature status
    # Intrusion detection system signatures status. 
    # @param [Hash] opts the optional parameters
    # @return [IdsSignatureStatus]
    def get_ids_signature_status_0(opts = {})
      data, _status_code, _headers = get_ids_signature_status_0_with_http_info(opts)
      data
    end

    # Get IDS signature status
    # Intrusion detection system signatures status. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(IdsSignatureStatus, Fixnum, Hash)>] IdsSignatureStatus data, response status code and response headers
    def get_ids_signature_status_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_ids_signature_status_0 ...'
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/security/intrusion-services/signatures/status'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'IdsSignatureStatus')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#get_ids_signature_status_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IDS signature versions
    # Intrusion detection system signature versions. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [IdsSignatureVersionListResult]
    def get_ids_signature_versions(opts = {})
      data, _status_code, _headers = get_ids_signature_versions_with_http_info(opts)
      data
    end

    # Get IDS signature versions
    # Intrusion detection system signature versions. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(IdsSignatureVersionListResult, Fixnum, Hash)>] IdsSignatureVersionListResult data, response status code and response headers
    def get_ids_signature_versions_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_ids_signature_versions ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_ids_signature_versions, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_ids_signature_versions, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/settings/firewall/security/intrusion-services/signature-versions'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'IdsSignatureVersionListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#get_ids_signature_versions\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IDS signature versions
    # Intrusion detection system signature versions. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [IdsSignatureVersionListResult]
    def get_ids_signature_versions_0(opts = {})
      data, _status_code, _headers = get_ids_signature_versions_0_with_http_info(opts)
      data
    end

    # Get IDS signature versions
    # Intrusion detection system signature versions. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(IdsSignatureVersionListResult, Fixnum, Hash)>] IdsSignatureVersionListResult data, response status code and response headers
    def get_ids_signature_versions_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_ids_signature_versions_0 ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_ids_signature_versions_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.get_ids_signature_versions_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/settings/firewall/security/intrusion-services/signature-versions'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'IdsSignatureVersionListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#get_ids_signature_versions_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Global IDS signatures
    # List global intrusion detection signatures. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GlobalIdsSignatureListResult]
    def list_global_ids_signatures(opts = {})
      data, _status_code, _headers = list_global_ids_signatures_with_http_info(opts)
      data
    end

    # List Global IDS signatures
    # List global intrusion detection signatures. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GlobalIdsSignatureListResult, Fixnum, Hash)>] GlobalIdsSignatureListResult data, response status code and response headers
    def list_global_ids_signatures_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_global_ids_signatures ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_global_ids_signatures, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_global_ids_signatures, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/settings/firewall/security/intrusion-services/global-signatures'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GlobalIdsSignatureListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#list_global_ids_signatures\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Global IDS signatures
    # List global intrusion detection signatures. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GlobalIdsSignatureListResult]
    def list_global_ids_signatures_0(opts = {})
      data, _status_code, _headers = list_global_ids_signatures_0_with_http_info(opts)
      data
    end

    # List Global IDS signatures
    # List global intrusion detection signatures. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GlobalIdsSignatureListResult, Fixnum, Hash)>] GlobalIdsSignatureListResult data, response status code and response headers
    def list_global_ids_signatures_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_global_ids_signatures_0 ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_global_ids_signatures_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_global_ids_signatures_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/settings/firewall/security/intrusion-services/global-signatures'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GlobalIdsSignatureListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#list_global_ids_signatures_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List IDS signatures
    # List intrusion detection system signatures. 
    # @param version_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [IdsSignatureListResult]
    def list_ids_signatures(version_id, opts = {})
      data, _status_code, _headers = list_ids_signatures_with_http_info(version_id, opts)
      data
    end

    # List IDS signatures
    # List intrusion detection system signatures. 
    # @param version_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(IdsSignatureListResult, Fixnum, Hash)>] IdsSignatureListResult data, response status code and response headers
    def list_ids_signatures_with_http_info(version_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_ids_signatures ...'
      end
      # verify the required parameter 'version_id' is set
      if @api_client.config.client_side_validation && version_id.nil?
        fail ArgumentError, "Missing the required parameter 'version_id' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_ids_signatures"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_ids_signatures, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_ids_signatures, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/settings/firewall/security/intrusion-services/signature-versions/{version-id}/signatures'.sub('{' + 'version-id' + '}', version_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'IdsSignatureListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#list_ids_signatures\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List IDS signatures
    # List intrusion detection system signatures. 
    # @param version_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [IdsSignatureListResult]
    def list_ids_signatures_0(version_id, opts = {})
      data, _status_code, _headers = list_ids_signatures_0_with_http_info(version_id, opts)
      data
    end

    # List IDS signatures
    # List intrusion detection system signatures. 
    # @param version_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(IdsSignatureListResult, Fixnum, Hash)>] IdsSignatureListResult data, response status code and response headers
    def list_ids_signatures_0_with_http_info(version_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_ids_signatures_0 ...'
      end
      # verify the required parameter 'version_id' is set
      if @api_client.config.client_side_validation && version_id.nil?
        fail ArgumentError, "Missing the required parameter 'version_id' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_ids_signatures_0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_ids_signatures_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.list_ids_signatures_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/settings/firewall/security/intrusion-services/signature-versions/{version-id}/signatures'.sub('{' + 'version-id' + '}', version_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'IdsSignatureListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#list_ids_signatures_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Change the state of IDS Signature Version
    # Make this IDS Signature version as ACTIVE version and other versions as NOTACTIVE. 
    # @param ids_signature_version 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def make_version_as_active_make_active_version(ids_signature_version, opts = {})
      make_version_as_active_make_active_version_with_http_info(ids_signature_version, opts)
      nil
    end

    # Change the state of IDS Signature Version
    # Make this IDS Signature version as ACTIVE version and other versions as NOTACTIVE. 
    # @param ids_signature_version 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def make_version_as_active_make_active_version_with_http_info(ids_signature_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.make_version_as_active_make_active_version ...'
      end
      # verify the required parameter 'ids_signature_version' is set
      if @api_client.config.client_side_validation && ids_signature_version.nil?
        fail ArgumentError, "Missing the required parameter 'ids_signature_version' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.make_version_as_active_make_active_version"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/security/intrusion-services/signature-versions?action=make_active_version'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ids_signature_version)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#make_version_as_active_make_active_version\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Change the state of IDS Signature Version
    # Make this IDS Signature version as ACTIVE version and other versions as NOTACTIVE. 
    # @param ids_signature_version 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def make_version_as_active_make_active_version_0(ids_signature_version, opts = {})
      make_version_as_active_make_active_version_0_with_http_info(ids_signature_version, opts)
      nil
    end

    # Change the state of IDS Signature Version
    # Make this IDS Signature version as ACTIVE version and other versions as NOTACTIVE. 
    # @param ids_signature_version 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def make_version_as_active_make_active_version_0_with_http_info(ids_signature_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.make_version_as_active_make_active_version_0 ...'
      end
      # verify the required parameter 'ids_signature_version' is set
      if @api_client.config.client_side_validation && ids_signature_version.nil?
        fail ArgumentError, "Missing the required parameter 'ids_signature_version' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.make_version_as_active_make_active_version_0"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/security/intrusion-services/signature-versions?action=make_active_version'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ids_signature_version)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#make_version_as_active_make_active_version_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch Global IDS Signature
    # Patch global intrusion detection system signature.
    # @param signature_id Signature ID
    # @param global_ids_signature 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_global_ids_signature(signature_id, global_ids_signature, opts = {})
      patch_global_ids_signature_with_http_info(signature_id, global_ids_signature, opts)
      nil
    end

    # Patch Global IDS Signature
    # Patch global intrusion detection system signature.
    # @param signature_id Signature ID
    # @param global_ids_signature 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_global_ids_signature_with_http_info(signature_id, global_ids_signature, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.patch_global_ids_signature ...'
      end
      # verify the required parameter 'signature_id' is set
      if @api_client.config.client_side_validation && signature_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_id' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.patch_global_ids_signature"
      end
      # verify the required parameter 'global_ids_signature' is set
      if @api_client.config.client_side_validation && global_ids_signature.nil?
        fail ArgumentError, "Missing the required parameter 'global_ids_signature' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.patch_global_ids_signature"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/security/intrusion-services/global-signatures/{signature-id}'.sub('{' + 'signature-id' + '}', signature_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(global_ids_signature)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#patch_global_ids_signature\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch Global IDS Signature
    # Patch global intrusion detection system signature.
    # @param signature_id Signature ID
    # @param global_ids_signature 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_global_ids_signature_0(signature_id, global_ids_signature, opts = {})
      patch_global_ids_signature_0_with_http_info(signature_id, global_ids_signature, opts)
      nil
    end

    # Patch Global IDS Signature
    # Patch global intrusion detection system signature.
    # @param signature_id Signature ID
    # @param global_ids_signature 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_global_ids_signature_0_with_http_info(signature_id, global_ids_signature, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.patch_global_ids_signature_0 ...'
      end
      # verify the required parameter 'signature_id' is set
      if @api_client.config.client_side_validation && signature_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_id' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.patch_global_ids_signature_0"
      end
      # verify the required parameter 'global_ids_signature' is set
      if @api_client.config.client_side_validation && global_ids_signature.nil?
        fail ArgumentError, "Missing the required parameter 'global_ids_signature' when calling PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.patch_global_ids_signature_0"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/security/intrusion-services/global-signatures/{signature-id}'.sub('{' + 'signature-id' + '}', signature_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(global_ids_signature)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#patch_global_ids_signature_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Download and update IDS signatures
    # Trigger the process to Download and update the IDS signatures manually. 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def update_ids_signatures_update_signatures(opts = {})
      update_ids_signatures_update_signatures_with_http_info(opts)
      nil
    end

    # Download and update IDS signatures
    # Trigger the process to Download and update the IDS signatures manually. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def update_ids_signatures_update_signatures_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.update_ids_signatures_update_signatures ...'
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/security/intrusion-services/signatures?action=update_signatures'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#update_ids_signatures_update_signatures\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Download and update IDS signatures
    # Trigger the process to Download and update the IDS signatures manually. 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def update_ids_signatures_update_signatures_0(opts = {})
      update_ids_signatures_update_signatures_0_with_http_info(opts)
      nil
    end

    # Download and update IDS signatures
    # Trigger the process to Download and update the IDS signatures manually. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def update_ids_signatures_update_signatures_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi.update_ids_signatures_update_signatures_0 ...'
      end
      # resource path
      local_var_path = '/infra/settings/firewall/security/intrusion-services/signatures?action=update_signatures'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecurityEastWestSecurityDistributedIdsSettingsSignaturesApi#update_ids_signatures_update_signatures_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
