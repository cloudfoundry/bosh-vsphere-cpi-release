=begin
#NSX-T Data Center Policy API

#VMware NSX-T Data Center Policy REST API

OpenAPI spec version: 3.1.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module NSXTPolicy
  class PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Delete CPU and memory thresholds profile
    # Delete CPU and memory thresholds profile.
    # @param profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def delete_cpu_mem_thresholds_profile(profile_id, opts = {})
      delete_cpu_mem_thresholds_profile_with_http_info(profile_id, opts)
      nil
    end

    # Delete CPU and memory thresholds profile
    # Delete CPU and memory thresholds profile.
    # @param profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_cpu_mem_thresholds_profile_with_http_info(profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.delete_cpu_mem_thresholds_profile ...'
      end
      # verify the required parameter 'profile_id' is set
      if @api_client.config.client_side_validation && profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'profile_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.delete_cpu_mem_thresholds_profile"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/cpu-mem-thresholds-profiles/{profile-id}'.sub('{' + 'profile-id' + '}', profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#delete_cpu_mem_thresholds_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete CPU and memory thresholds profile
    # Delete CPU and memory thresholds profile.
    # @param profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def delete_cpu_mem_thresholds_profile_0(profile_id, opts = {})
      delete_cpu_mem_thresholds_profile_0_with_http_info(profile_id, opts)
      nil
    end

    # Delete CPU and memory thresholds profile
    # Delete CPU and memory thresholds profile.
    # @param profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_cpu_mem_thresholds_profile_0_with_http_info(profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.delete_cpu_mem_thresholds_profile_0 ...'
      end
      # verify the required parameter 'profile_id' is set
      if @api_client.config.client_side_validation && profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'profile_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.delete_cpu_mem_thresholds_profile_0"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/cpu-mem-thresholds-profiles/{profile-id}'.sub('{' + 'profile-id' + '}', profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#delete_cpu_mem_thresholds_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Firewall CPU Memory Thresholds Profile Binding
    # API will delete Firewall CPU Memory Thresholds Profile Binding.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_firewall_cpu_mem_thresholds_profile_binding_map(cpu_mem_thresholds_profile_binding_map_id, opts = {})
      delete_policy_firewall_cpu_mem_thresholds_profile_binding_map_with_http_info(cpu_mem_thresholds_profile_binding_map_id, opts)
      nil
    end

    # Delete Firewall CPU Memory Thresholds Profile Binding
    # API will delete Firewall CPU Memory Thresholds Profile Binding.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_firewall_cpu_mem_thresholds_profile_binding_map_with_http_info(cpu_mem_thresholds_profile_binding_map_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.delete_policy_firewall_cpu_mem_thresholds_profile_binding_map ...'
      end
      # verify the required parameter 'cpu_mem_thresholds_profile_binding_map_id' is set
      if @api_client.config.client_side_validation && cpu_mem_thresholds_profile_binding_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'cpu_mem_thresholds_profile_binding_map_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.delete_policy_firewall_cpu_mem_thresholds_profile_binding_map"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/cpu-mem-thresholds-profile-binding-maps/{cpu-mem-thresholds-profile-binding-map-id}'.sub('{' + 'cpu-mem-thresholds-profile-binding-map-id' + '}', cpu_mem_thresholds_profile_binding_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#delete_policy_firewall_cpu_mem_thresholds_profile_binding_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Firewall CPU Memory Thresholds Profile Binding
    # API will delete Firewall CPU Memory Thresholds Profile Binding.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_firewall_cpu_mem_thresholds_profile_binding_map_0(cpu_mem_thresholds_profile_binding_map_id, opts = {})
      delete_policy_firewall_cpu_mem_thresholds_profile_binding_map_0_with_http_info(cpu_mem_thresholds_profile_binding_map_id, opts)
      nil
    end

    # Delete Firewall CPU Memory Thresholds Profile Binding
    # API will delete Firewall CPU Memory Thresholds Profile Binding.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_firewall_cpu_mem_thresholds_profile_binding_map_0_with_http_info(cpu_mem_thresholds_profile_binding_map_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.delete_policy_firewall_cpu_mem_thresholds_profile_binding_map_0 ...'
      end
      # verify the required parameter 'cpu_mem_thresholds_profile_binding_map_id' is set
      if @api_client.config.client_side_validation && cpu_mem_thresholds_profile_binding_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'cpu_mem_thresholds_profile_binding_map_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.delete_policy_firewall_cpu_mem_thresholds_profile_binding_map_0"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/cpu-mem-thresholds-profile-binding-maps/{cpu-mem-thresholds-profile-binding-map-id}'.sub('{' + 'cpu-mem-thresholds-profile-binding-map-id' + '}', cpu_mem_thresholds_profile_binding_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#delete_policy_firewall_cpu_mem_thresholds_profile_binding_map_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Firewall CPU Memory Thresholds Profile Binding Map
    # API will get Firewall CPU Memory Thresholds Profile Binding Map. 
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param [Hash] opts the optional parameters
    # @return [PolicyFirewallCPUMemThresholdsProfileBindingMap]
    def get_policy_firewall_cpu_mem_thresholds_profile_binding_map(cpu_mem_thresholds_profile_binding_map_id, opts = {})
      data, _status_code, _headers = get_policy_firewall_cpu_mem_thresholds_profile_binding_map_with_http_info(cpu_mem_thresholds_profile_binding_map_id, opts)
      data
    end

    # Get Firewall CPU Memory Thresholds Profile Binding Map
    # API will get Firewall CPU Memory Thresholds Profile Binding Map. 
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyFirewallCPUMemThresholdsProfileBindingMap, Fixnum, Hash)>] PolicyFirewallCPUMemThresholdsProfileBindingMap data, response status code and response headers
    def get_policy_firewall_cpu_mem_thresholds_profile_binding_map_with_http_info(cpu_mem_thresholds_profile_binding_map_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.get_policy_firewall_cpu_mem_thresholds_profile_binding_map ...'
      end
      # verify the required parameter 'cpu_mem_thresholds_profile_binding_map_id' is set
      if @api_client.config.client_side_validation && cpu_mem_thresholds_profile_binding_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'cpu_mem_thresholds_profile_binding_map_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.get_policy_firewall_cpu_mem_thresholds_profile_binding_map"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/cpu-mem-thresholds-profile-binding-maps/{cpu-mem-thresholds-profile-binding-map-id}'.sub('{' + 'cpu-mem-thresholds-profile-binding-map-id' + '}', cpu_mem_thresholds_profile_binding_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCPUMemThresholdsProfileBindingMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#get_policy_firewall_cpu_mem_thresholds_profile_binding_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Firewall CPU Memory Thresholds Profile Binding Map
    # API will get Firewall CPU Memory Thresholds Profile Binding Map. 
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param [Hash] opts the optional parameters
    # @return [PolicyFirewallCPUMemThresholdsProfileBindingMap]
    def get_policy_firewall_cpu_mem_thresholds_profile_binding_map_0(cpu_mem_thresholds_profile_binding_map_id, opts = {})
      data, _status_code, _headers = get_policy_firewall_cpu_mem_thresholds_profile_binding_map_0_with_http_info(cpu_mem_thresholds_profile_binding_map_id, opts)
      data
    end

    # Get Firewall CPU Memory Thresholds Profile Binding Map
    # API will get Firewall CPU Memory Thresholds Profile Binding Map. 
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyFirewallCPUMemThresholdsProfileBindingMap, Fixnum, Hash)>] PolicyFirewallCPUMemThresholdsProfileBindingMap data, response status code and response headers
    def get_policy_firewall_cpu_mem_thresholds_profile_binding_map_0_with_http_info(cpu_mem_thresholds_profile_binding_map_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.get_policy_firewall_cpu_mem_thresholds_profile_binding_map_0 ...'
      end
      # verify the required parameter 'cpu_mem_thresholds_profile_binding_map_id' is set
      if @api_client.config.client_side_validation && cpu_mem_thresholds_profile_binding_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'cpu_mem_thresholds_profile_binding_map_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.get_policy_firewall_cpu_mem_thresholds_profile_binding_map_0"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/cpu-mem-thresholds-profile-binding-maps/{cpu-mem-thresholds-profile-binding-map-id}'.sub('{' + 'cpu-mem-thresholds-profile-binding-map-id' + '}', cpu_mem_thresholds_profile_binding_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCPUMemThresholdsProfileBindingMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#get_policy_firewall_cpu_mem_thresholds_profile_binding_map_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all CPU and memory thresholds profiles
    # List all CPU and memory thresholds profiles.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyFirewallCpuMemThresholdsProfileListResult]
    def list_cpu_mem_thresholds_profiles(opts = {})
      data, _status_code, _headers = list_cpu_mem_thresholds_profiles_with_http_info(opts)
      data
    end

    # List all CPU and memory thresholds profiles
    # List all CPU and memory thresholds profiles.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyFirewallCpuMemThresholdsProfileListResult, Fixnum, Hash)>] PolicyFirewallCpuMemThresholdsProfileListResult data, response status code and response headers
    def list_cpu_mem_thresholds_profiles_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_cpu_mem_thresholds_profiles ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_cpu_mem_thresholds_profiles, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_cpu_mem_thresholds_profiles, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/settings/firewall/cpu-mem-thresholds-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCpuMemThresholdsProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#list_cpu_mem_thresholds_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all CPU and memory thresholds profiles
    # List all CPU and memory thresholds profiles.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyFirewallCpuMemThresholdsProfileListResult]
    def list_cpu_mem_thresholds_profiles_0(opts = {})
      data, _status_code, _headers = list_cpu_mem_thresholds_profiles_0_with_http_info(opts)
      data
    end

    # List all CPU and memory thresholds profiles
    # List all CPU and memory thresholds profiles.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyFirewallCpuMemThresholdsProfileListResult, Fixnum, Hash)>] PolicyFirewallCpuMemThresholdsProfileListResult data, response status code and response headers
    def list_cpu_mem_thresholds_profiles_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_cpu_mem_thresholds_profiles_0 ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_cpu_mem_thresholds_profiles_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_cpu_mem_thresholds_profiles_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/settings/firewall/cpu-mem-thresholds-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCpuMemThresholdsProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#list_cpu_mem_thresholds_profiles_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Firewall CPU Memory Thresholds Profile Binding Maps
    # API will list all Firewall CPU Memory Thresholds Profile Binding Maps. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyFirewallCPUMemThresholdsProfileBindingMapListResult]
    def list_policy_firewall_cpu_mem_thresholds_profile_binding_maps(opts = {})
      data, _status_code, _headers = list_policy_firewall_cpu_mem_thresholds_profile_binding_maps_with_http_info(opts)
      data
    end

    # List Firewall CPU Memory Thresholds Profile Binding Maps
    # API will list all Firewall CPU Memory Thresholds Profile Binding Maps. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyFirewallCPUMemThresholdsProfileBindingMapListResult, Fixnum, Hash)>] PolicyFirewallCPUMemThresholdsProfileBindingMapListResult data, response status code and response headers
    def list_policy_firewall_cpu_mem_thresholds_profile_binding_maps_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_policy_firewall_cpu_mem_thresholds_profile_binding_maps ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_policy_firewall_cpu_mem_thresholds_profile_binding_maps, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_policy_firewall_cpu_mem_thresholds_profile_binding_maps, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/settings/firewall/cpu-mem-thresholds-profile-binding-maps'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCPUMemThresholdsProfileBindingMapListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#list_policy_firewall_cpu_mem_thresholds_profile_binding_maps\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Firewall CPU Memory Thresholds Profile Binding Maps
    # API will list all Firewall CPU Memory Thresholds Profile Binding Maps. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyFirewallCPUMemThresholdsProfileBindingMapListResult]
    def list_policy_firewall_cpu_mem_thresholds_profile_binding_maps_0(opts = {})
      data, _status_code, _headers = list_policy_firewall_cpu_mem_thresholds_profile_binding_maps_0_with_http_info(opts)
      data
    end

    # List Firewall CPU Memory Thresholds Profile Binding Maps
    # API will list all Firewall CPU Memory Thresholds Profile Binding Maps. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyFirewallCPUMemThresholdsProfileBindingMapListResult, Fixnum, Hash)>] PolicyFirewallCPUMemThresholdsProfileBindingMapListResult data, response status code and response headers
    def list_policy_firewall_cpu_mem_thresholds_profile_binding_maps_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_policy_firewall_cpu_mem_thresholds_profile_binding_maps_0 ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_policy_firewall_cpu_mem_thresholds_profile_binding_maps_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.list_policy_firewall_cpu_mem_thresholds_profile_binding_maps_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/settings/firewall/cpu-mem-thresholds-profile-binding-maps'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCPUMemThresholdsProfileBindingMapListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#list_policy_firewall_cpu_mem_thresholds_profile_binding_maps_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update CPU and memory thresholds profile
    # Create or update CPU and memory thresholds profile.
    # @param profile_id 
    # @param policy_firewall_cpu_mem_thresholds_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_cpu_mem_thresholds_profile(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts = {})
      patch_cpu_mem_thresholds_profile_with_http_info(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts)
      nil
    end

    # Create or update CPU and memory thresholds profile
    # Create or update CPU and memory thresholds profile.
    # @param profile_id 
    # @param policy_firewall_cpu_mem_thresholds_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_cpu_mem_thresholds_profile_with_http_info(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_cpu_mem_thresholds_profile ...'
      end
      # verify the required parameter 'profile_id' is set
      if @api_client.config.client_side_validation && profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'profile_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_cpu_mem_thresholds_profile"
      end
      # verify the required parameter 'policy_firewall_cpu_mem_thresholds_profile' is set
      if @api_client.config.client_side_validation && policy_firewall_cpu_mem_thresholds_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_firewall_cpu_mem_thresholds_profile' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_cpu_mem_thresholds_profile"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/cpu-mem-thresholds-profiles/{profile-id}'.sub('{' + 'profile-id' + '}', profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_firewall_cpu_mem_thresholds_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#patch_cpu_mem_thresholds_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update CPU and memory thresholds profile
    # Create or update CPU and memory thresholds profile.
    # @param profile_id 
    # @param policy_firewall_cpu_mem_thresholds_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_cpu_mem_thresholds_profile_0(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts = {})
      patch_cpu_mem_thresholds_profile_0_with_http_info(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts)
      nil
    end

    # Create or update CPU and memory thresholds profile
    # Create or update CPU and memory thresholds profile.
    # @param profile_id 
    # @param policy_firewall_cpu_mem_thresholds_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_cpu_mem_thresholds_profile_0_with_http_info(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_cpu_mem_thresholds_profile_0 ...'
      end
      # verify the required parameter 'profile_id' is set
      if @api_client.config.client_side_validation && profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'profile_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_cpu_mem_thresholds_profile_0"
      end
      # verify the required parameter 'policy_firewall_cpu_mem_thresholds_profile' is set
      if @api_client.config.client_side_validation && policy_firewall_cpu_mem_thresholds_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_firewall_cpu_mem_thresholds_profile' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_cpu_mem_thresholds_profile_0"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/cpu-mem-thresholds-profiles/{profile-id}'.sub('{' + 'profile-id' + '}', profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_firewall_cpu_mem_thresholds_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#patch_cpu_mem_thresholds_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update Firewall CPU Memory Thresholds Profile Binding Map
    # API will create or update Firewall CPU Memory Thresholds Profile binding map.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param policy_firewall_cpu_mem_thresholds_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_firewall_cpu_mem_thresholds_profile_binding_map(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts = {})
      patch_policy_firewall_cpu_mem_thresholds_profile_binding_map_with_http_info(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts)
      nil
    end

    # Create or update Firewall CPU Memory Thresholds Profile Binding Map
    # API will create or update Firewall CPU Memory Thresholds Profile binding map.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param policy_firewall_cpu_mem_thresholds_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_firewall_cpu_mem_thresholds_profile_binding_map_with_http_info(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_policy_firewall_cpu_mem_thresholds_profile_binding_map ...'
      end
      # verify the required parameter 'cpu_mem_thresholds_profile_binding_map_id' is set
      if @api_client.config.client_side_validation && cpu_mem_thresholds_profile_binding_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'cpu_mem_thresholds_profile_binding_map_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_policy_firewall_cpu_mem_thresholds_profile_binding_map"
      end
      # verify the required parameter 'policy_firewall_cpu_mem_thresholds_profile_binding_map' is set
      if @api_client.config.client_side_validation && policy_firewall_cpu_mem_thresholds_profile_binding_map.nil?
        fail ArgumentError, "Missing the required parameter 'policy_firewall_cpu_mem_thresholds_profile_binding_map' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_policy_firewall_cpu_mem_thresholds_profile_binding_map"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/cpu-mem-thresholds-profile-binding-maps/{cpu-mem-thresholds-profile-binding-map-id}'.sub('{' + 'cpu-mem-thresholds-profile-binding-map-id' + '}', cpu_mem_thresholds_profile_binding_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_firewall_cpu_mem_thresholds_profile_binding_map)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#patch_policy_firewall_cpu_mem_thresholds_profile_binding_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update Firewall CPU Memory Thresholds Profile Binding Map
    # API will create or update Firewall CPU Memory Thresholds Profile binding map.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param policy_firewall_cpu_mem_thresholds_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_firewall_cpu_mem_thresholds_profile_binding_map_0(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts = {})
      patch_policy_firewall_cpu_mem_thresholds_profile_binding_map_0_with_http_info(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts)
      nil
    end

    # Create or update Firewall CPU Memory Thresholds Profile Binding Map
    # API will create or update Firewall CPU Memory Thresholds Profile binding map.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param policy_firewall_cpu_mem_thresholds_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_firewall_cpu_mem_thresholds_profile_binding_map_0_with_http_info(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_policy_firewall_cpu_mem_thresholds_profile_binding_map_0 ...'
      end
      # verify the required parameter 'cpu_mem_thresholds_profile_binding_map_id' is set
      if @api_client.config.client_side_validation && cpu_mem_thresholds_profile_binding_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'cpu_mem_thresholds_profile_binding_map_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_policy_firewall_cpu_mem_thresholds_profile_binding_map_0"
      end
      # verify the required parameter 'policy_firewall_cpu_mem_thresholds_profile_binding_map' is set
      if @api_client.config.client_side_validation && policy_firewall_cpu_mem_thresholds_profile_binding_map.nil?
        fail ArgumentError, "Missing the required parameter 'policy_firewall_cpu_mem_thresholds_profile_binding_map' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.patch_policy_firewall_cpu_mem_thresholds_profile_binding_map_0"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/cpu-mem-thresholds-profile-binding-maps/{cpu-mem-thresholds-profile-binding-map-id}'.sub('{' + 'cpu-mem-thresholds-profile-binding-map-id' + '}', cpu_mem_thresholds_profile_binding_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_firewall_cpu_mem_thresholds_profile_binding_map)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#patch_policy_firewall_cpu_mem_thresholds_profile_binding_map_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read the CPU and memory thresholds profile
    # Read the CPU and memory thresholds profile.
    # @param profile_id 
    # @param [Hash] opts the optional parameters
    # @return [PolicyFirewallCpuMemThresholdsProfile]
    def read_cpu_mem_thresholds_profile(profile_id, opts = {})
      data, _status_code, _headers = read_cpu_mem_thresholds_profile_with_http_info(profile_id, opts)
      data
    end

    # Read the CPU and memory thresholds profile
    # Read the CPU and memory thresholds profile.
    # @param profile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyFirewallCpuMemThresholdsProfile, Fixnum, Hash)>] PolicyFirewallCpuMemThresholdsProfile data, response status code and response headers
    def read_cpu_mem_thresholds_profile_with_http_info(profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.read_cpu_mem_thresholds_profile ...'
      end
      # verify the required parameter 'profile_id' is set
      if @api_client.config.client_side_validation && profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'profile_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.read_cpu_mem_thresholds_profile"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/cpu-mem-thresholds-profiles/{profile-id}'.sub('{' + 'profile-id' + '}', profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCpuMemThresholdsProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#read_cpu_mem_thresholds_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read the CPU and memory thresholds profile
    # Read the CPU and memory thresholds profile.
    # @param profile_id 
    # @param [Hash] opts the optional parameters
    # @return [PolicyFirewallCpuMemThresholdsProfile]
    def read_cpu_mem_thresholds_profile_0(profile_id, opts = {})
      data, _status_code, _headers = read_cpu_mem_thresholds_profile_0_with_http_info(profile_id, opts)
      data
    end

    # Read the CPU and memory thresholds profile
    # Read the CPU and memory thresholds profile.
    # @param profile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyFirewallCpuMemThresholdsProfile, Fixnum, Hash)>] PolicyFirewallCpuMemThresholdsProfile data, response status code and response headers
    def read_cpu_mem_thresholds_profile_0_with_http_info(profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.read_cpu_mem_thresholds_profile_0 ...'
      end
      # verify the required parameter 'profile_id' is set
      if @api_client.config.client_side_validation && profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'profile_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.read_cpu_mem_thresholds_profile_0"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/cpu-mem-thresholds-profiles/{profile-id}'.sub('{' + 'profile-id' + '}', profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCpuMemThresholdsProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#read_cpu_mem_thresholds_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update CPU and memory thresholds profile
    # Create or update CPU and memory thresholds profile.
    # @param profile_id 
    # @param policy_firewall_cpu_mem_thresholds_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [PolicyFirewallCpuMemThresholdsProfile]
    def update_cpu_mem_thresholds_profile(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts = {})
      data, _status_code, _headers = update_cpu_mem_thresholds_profile_with_http_info(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts)
      data
    end

    # Create or update CPU and memory thresholds profile
    # Create or update CPU and memory thresholds profile.
    # @param profile_id 
    # @param policy_firewall_cpu_mem_thresholds_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(PolicyFirewallCpuMemThresholdsProfile, Fixnum, Hash)>] PolicyFirewallCpuMemThresholdsProfile data, response status code and response headers
    def update_cpu_mem_thresholds_profile_with_http_info(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_cpu_mem_thresholds_profile ...'
      end
      # verify the required parameter 'profile_id' is set
      if @api_client.config.client_side_validation && profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'profile_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_cpu_mem_thresholds_profile"
      end
      # verify the required parameter 'policy_firewall_cpu_mem_thresholds_profile' is set
      if @api_client.config.client_side_validation && policy_firewall_cpu_mem_thresholds_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_firewall_cpu_mem_thresholds_profile' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_cpu_mem_thresholds_profile"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/cpu-mem-thresholds-profiles/{profile-id}'.sub('{' + 'profile-id' + '}', profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_firewall_cpu_mem_thresholds_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCpuMemThresholdsProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#update_cpu_mem_thresholds_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update CPU and memory thresholds profile
    # Create or update CPU and memory thresholds profile.
    # @param profile_id 
    # @param policy_firewall_cpu_mem_thresholds_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [PolicyFirewallCpuMemThresholdsProfile]
    def update_cpu_mem_thresholds_profile_0(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts = {})
      data, _status_code, _headers = update_cpu_mem_thresholds_profile_0_with_http_info(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts)
      data
    end

    # Create or update CPU and memory thresholds profile
    # Create or update CPU and memory thresholds profile.
    # @param profile_id 
    # @param policy_firewall_cpu_mem_thresholds_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(PolicyFirewallCpuMemThresholdsProfile, Fixnum, Hash)>] PolicyFirewallCpuMemThresholdsProfile data, response status code and response headers
    def update_cpu_mem_thresholds_profile_0_with_http_info(profile_id, policy_firewall_cpu_mem_thresholds_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_cpu_mem_thresholds_profile_0 ...'
      end
      # verify the required parameter 'profile_id' is set
      if @api_client.config.client_side_validation && profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'profile_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_cpu_mem_thresholds_profile_0"
      end
      # verify the required parameter 'policy_firewall_cpu_mem_thresholds_profile' is set
      if @api_client.config.client_side_validation && policy_firewall_cpu_mem_thresholds_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_firewall_cpu_mem_thresholds_profile' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_cpu_mem_thresholds_profile_0"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/cpu-mem-thresholds-profiles/{profile-id}'.sub('{' + 'profile-id' + '}', profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_firewall_cpu_mem_thresholds_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCpuMemThresholdsProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#update_cpu_mem_thresholds_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update Firewall CPU Memory Thresholds Profile Binding Map
    # API will update Firewall CPU Memory Thresholds Profile Binding Map.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param policy_firewall_cpu_mem_thresholds_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [PolicyFirewallCPUMemThresholdsProfileBindingMap]
    def update_policy_firewall_cpu_mem_thresholds_profile_binding_map(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts = {})
      data, _status_code, _headers = update_policy_firewall_cpu_mem_thresholds_profile_binding_map_with_http_info(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts)
      data
    end

    # Update Firewall CPU Memory Thresholds Profile Binding Map
    # API will update Firewall CPU Memory Thresholds Profile Binding Map.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param policy_firewall_cpu_mem_thresholds_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyFirewallCPUMemThresholdsProfileBindingMap, Fixnum, Hash)>] PolicyFirewallCPUMemThresholdsProfileBindingMap data, response status code and response headers
    def update_policy_firewall_cpu_mem_thresholds_profile_binding_map_with_http_info(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_policy_firewall_cpu_mem_thresholds_profile_binding_map ...'
      end
      # verify the required parameter 'cpu_mem_thresholds_profile_binding_map_id' is set
      if @api_client.config.client_side_validation && cpu_mem_thresholds_profile_binding_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'cpu_mem_thresholds_profile_binding_map_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_policy_firewall_cpu_mem_thresholds_profile_binding_map"
      end
      # verify the required parameter 'policy_firewall_cpu_mem_thresholds_profile_binding_map' is set
      if @api_client.config.client_side_validation && policy_firewall_cpu_mem_thresholds_profile_binding_map.nil?
        fail ArgumentError, "Missing the required parameter 'policy_firewall_cpu_mem_thresholds_profile_binding_map' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_policy_firewall_cpu_mem_thresholds_profile_binding_map"
      end
      # resource path
      local_var_path = '/infra/settings/firewall/cpu-mem-thresholds-profile-binding-maps/{cpu-mem-thresholds-profile-binding-map-id}'.sub('{' + 'cpu-mem-thresholds-profile-binding-map-id' + '}', cpu_mem_thresholds_profile_binding_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_firewall_cpu_mem_thresholds_profile_binding_map)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCPUMemThresholdsProfileBindingMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#update_policy_firewall_cpu_mem_thresholds_profile_binding_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update Firewall CPU Memory Thresholds Profile Binding Map
    # API will update Firewall CPU Memory Thresholds Profile Binding Map.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param policy_firewall_cpu_mem_thresholds_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [PolicyFirewallCPUMemThresholdsProfileBindingMap]
    def update_policy_firewall_cpu_mem_thresholds_profile_binding_map_0(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts = {})
      data, _status_code, _headers = update_policy_firewall_cpu_mem_thresholds_profile_binding_map_0_with_http_info(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts)
      data
    end

    # Update Firewall CPU Memory Thresholds Profile Binding Map
    # API will update Firewall CPU Memory Thresholds Profile Binding Map.
    # @param cpu_mem_thresholds_profile_binding_map_id Firewall CPU Memory Thresholds Profile Binding Map ID
    # @param policy_firewall_cpu_mem_thresholds_profile_binding_map 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyFirewallCPUMemThresholdsProfileBindingMap, Fixnum, Hash)>] PolicyFirewallCPUMemThresholdsProfileBindingMap data, response status code and response headers
    def update_policy_firewall_cpu_mem_thresholds_profile_binding_map_0_with_http_info(cpu_mem_thresholds_profile_binding_map_id, policy_firewall_cpu_mem_thresholds_profile_binding_map, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_policy_firewall_cpu_mem_thresholds_profile_binding_map_0 ...'
      end
      # verify the required parameter 'cpu_mem_thresholds_profile_binding_map_id' is set
      if @api_client.config.client_side_validation && cpu_mem_thresholds_profile_binding_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'cpu_mem_thresholds_profile_binding_map_id' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_policy_firewall_cpu_mem_thresholds_profile_binding_map_0"
      end
      # verify the required parameter 'policy_firewall_cpu_mem_thresholds_profile_binding_map' is set
      if @api_client.config.client_side_validation && policy_firewall_cpu_mem_thresholds_profile_binding_map.nil?
        fail ArgumentError, "Missing the required parameter 'policy_firewall_cpu_mem_thresholds_profile_binding_map' when calling PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi.update_policy_firewall_cpu_mem_thresholds_profile_binding_map_0"
      end
      # resource path
      local_var_path = '/global-infra/settings/firewall/cpu-mem-thresholds-profile-binding-maps/{cpu-mem-thresholds-profile-binding-map-id}'.sub('{' + 'cpu-mem-thresholds-profile-binding-map-id' + '}', cpu_mem_thresholds_profile_binding_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_firewall_cpu_mem_thresholds_profile_binding_map)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyFirewallCPUMemThresholdsProfileBindingMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicySecuritySecurityProfilesCpuMemoryThresholdsProfilesApi#update_policy_firewall_cpu_mem_thresholds_profile_binding_map_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
