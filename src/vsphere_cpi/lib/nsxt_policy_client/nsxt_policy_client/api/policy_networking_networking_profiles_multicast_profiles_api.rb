=begin
#NSX-T Data Center Policy API

#VMware NSX-T Data Center Policy REST API

OpenAPI spec version: 3.1.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module NSXTPolicy
  class PolicyNetworkingNetworkingProfilesMulticastProfilesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Update igmp profile
    # Create or update igmp profile. 
    # @param igmp_profile_id igmp profile id
    # @param policy_igmp_profile 
    # @param [Hash] opts the optional parameters
    # @return [PolicyIgmpProfile]
    def create_or_update_policy_igmp_profile(igmp_profile_id, policy_igmp_profile, opts = {})
      data, _status_code, _headers = create_or_update_policy_igmp_profile_with_http_info(igmp_profile_id, policy_igmp_profile, opts)
      data
    end

    # Update igmp profile
    # Create or update igmp profile. 
    # @param igmp_profile_id igmp profile id
    # @param policy_igmp_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyIgmpProfile, Fixnum, Hash)>] PolicyIgmpProfile data, response status code and response headers
    def create_or_update_policy_igmp_profile_with_http_info(igmp_profile_id, policy_igmp_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_igmp_profile ...'
      end
      # verify the required parameter 'igmp_profile_id' is set
      if @api_client.config.client_side_validation && igmp_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'igmp_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_igmp_profile"
      end
      # verify the required parameter 'policy_igmp_profile' is set
      if @api_client.config.client_side_validation && policy_igmp_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_igmp_profile' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_igmp_profile"
      end
      # resource path
      local_var_path = '/global-infra/igmp-profiles/{igmp-profile-id}'.sub('{' + 'igmp-profile-id' + '}', igmp_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_igmp_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyIgmpProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#create_or_update_policy_igmp_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update igmp profile
    # Create or update igmp profile. 
    # @param igmp_profile_id igmp profile id
    # @param policy_igmp_profile 
    # @param [Hash] opts the optional parameters
    # @return [PolicyIgmpProfile]
    def create_or_update_policy_igmp_profile_0(igmp_profile_id, policy_igmp_profile, opts = {})
      data, _status_code, _headers = create_or_update_policy_igmp_profile_0_with_http_info(igmp_profile_id, policy_igmp_profile, opts)
      data
    end

    # Update igmp profile
    # Create or update igmp profile. 
    # @param igmp_profile_id igmp profile id
    # @param policy_igmp_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyIgmpProfile, Fixnum, Hash)>] PolicyIgmpProfile data, response status code and response headers
    def create_or_update_policy_igmp_profile_0_with_http_info(igmp_profile_id, policy_igmp_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_igmp_profile_0 ...'
      end
      # verify the required parameter 'igmp_profile_id' is set
      if @api_client.config.client_side_validation && igmp_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'igmp_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_igmp_profile_0"
      end
      # verify the required parameter 'policy_igmp_profile' is set
      if @api_client.config.client_side_validation && policy_igmp_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_igmp_profile' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_igmp_profile_0"
      end
      # resource path
      local_var_path = '/infra/igmp-profiles/{igmp-profile-id}'.sub('{' + 'igmp-profile-id' + '}', igmp_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_igmp_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyIgmpProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#create_or_update_policy_igmp_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update pim profile
    # Create or update pim profile. 
    # @param pim_profile_id pim profile id
    # @param policy_pim_profile 
    # @param [Hash] opts the optional parameters
    # @return [PolicyPimProfile]
    def create_or_update_policy_pim_profile(pim_profile_id, policy_pim_profile, opts = {})
      data, _status_code, _headers = create_or_update_policy_pim_profile_with_http_info(pim_profile_id, policy_pim_profile, opts)
      data
    end

    # Update pim profile
    # Create or update pim profile. 
    # @param pim_profile_id pim profile id
    # @param policy_pim_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyPimProfile, Fixnum, Hash)>] PolicyPimProfile data, response status code and response headers
    def create_or_update_policy_pim_profile_with_http_info(pim_profile_id, policy_pim_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_pim_profile ...'
      end
      # verify the required parameter 'pim_profile_id' is set
      if @api_client.config.client_side_validation && pim_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'pim_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_pim_profile"
      end
      # verify the required parameter 'policy_pim_profile' is set
      if @api_client.config.client_side_validation && policy_pim_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_pim_profile' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_pim_profile"
      end
      # resource path
      local_var_path = '/infra/pim-profiles/{pim-profile-id}'.sub('{' + 'pim-profile-id' + '}', pim_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_pim_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyPimProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#create_or_update_policy_pim_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update pim profile
    # Create or update pim profile. 
    # @param pim_profile_id pim profile id
    # @param policy_pim_profile 
    # @param [Hash] opts the optional parameters
    # @return [PolicyPimProfile]
    def create_or_update_policy_pim_profile_0(pim_profile_id, policy_pim_profile, opts = {})
      data, _status_code, _headers = create_or_update_policy_pim_profile_0_with_http_info(pim_profile_id, policy_pim_profile, opts)
      data
    end

    # Update pim profile
    # Create or update pim profile. 
    # @param pim_profile_id pim profile id
    # @param policy_pim_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyPimProfile, Fixnum, Hash)>] PolicyPimProfile data, response status code and response headers
    def create_or_update_policy_pim_profile_0_with_http_info(pim_profile_id, policy_pim_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_pim_profile_0 ...'
      end
      # verify the required parameter 'pim_profile_id' is set
      if @api_client.config.client_side_validation && pim_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'pim_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_pim_profile_0"
      end
      # verify the required parameter 'policy_pim_profile' is set
      if @api_client.config.client_side_validation && policy_pim_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_pim_profile' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.create_or_update_policy_pim_profile_0"
      end
      # resource path
      local_var_path = '/global-infra/pim-profiles/{pim-profile-id}'.sub('{' + 'pim-profile-id' + '}', pim_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_pim_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyPimProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#create_or_update_policy_pim_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Igmp Profile
    # Delete Igmp Profile.
    # @param igmp_profile_id igmp profile id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_igmp_profile(igmp_profile_id, opts = {})
      delete_policy_igmp_profile_with_http_info(igmp_profile_id, opts)
      nil
    end

    # Delete Igmp Profile
    # Delete Igmp Profile.
    # @param igmp_profile_id igmp profile id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_igmp_profile_with_http_info(igmp_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.delete_policy_igmp_profile ...'
      end
      # verify the required parameter 'igmp_profile_id' is set
      if @api_client.config.client_side_validation && igmp_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'igmp_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.delete_policy_igmp_profile"
      end
      # resource path
      local_var_path = '/global-infra/igmp-profiles/{igmp-profile-id}'.sub('{' + 'igmp-profile-id' + '}', igmp_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#delete_policy_igmp_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Igmp Profile
    # Delete Igmp Profile.
    # @param igmp_profile_id igmp profile id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_igmp_profile_0(igmp_profile_id, opts = {})
      delete_policy_igmp_profile_0_with_http_info(igmp_profile_id, opts)
      nil
    end

    # Delete Igmp Profile
    # Delete Igmp Profile.
    # @param igmp_profile_id igmp profile id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_igmp_profile_0_with_http_info(igmp_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.delete_policy_igmp_profile_0 ...'
      end
      # verify the required parameter 'igmp_profile_id' is set
      if @api_client.config.client_side_validation && igmp_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'igmp_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.delete_policy_igmp_profile_0"
      end
      # resource path
      local_var_path = '/infra/igmp-profiles/{igmp-profile-id}'.sub('{' + 'igmp-profile-id' + '}', igmp_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#delete_policy_igmp_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Igmp Profile
    # List all igmp profile. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyIgmpProfileListResult]
    def list_policy_igmp_profile(opts = {})
      data, _status_code, _headers = list_policy_igmp_profile_with_http_info(opts)
      data
    end

    # List Igmp Profile
    # List all igmp profile. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyIgmpProfileListResult, Fixnum, Hash)>] PolicyIgmpProfileListResult data, response status code and response headers
    def list_policy_igmp_profile_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_igmp_profile ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_igmp_profile, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_igmp_profile, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/igmp-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyIgmpProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#list_policy_igmp_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Igmp Profile
    # List all igmp profile. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyIgmpProfileListResult]
    def list_policy_igmp_profile_0(opts = {})
      data, _status_code, _headers = list_policy_igmp_profile_0_with_http_info(opts)
      data
    end

    # List Igmp Profile
    # List all igmp profile. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyIgmpProfileListResult, Fixnum, Hash)>] PolicyIgmpProfileListResult data, response status code and response headers
    def list_policy_igmp_profile_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_igmp_profile_0 ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_igmp_profile_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_igmp_profile_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/igmp-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyIgmpProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#list_policy_igmp_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Pim Profile
    # List all pim profile. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyPimProfileListResult]
    def list_policy_pim_profile(opts = {})
      data, _status_code, _headers = list_policy_pim_profile_with_http_info(opts)
      data
    end

    # List Pim Profile
    # List all pim profile. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyPimProfileListResult, Fixnum, Hash)>] PolicyPimProfileListResult data, response status code and response headers
    def list_policy_pim_profile_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_pim_profile ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_pim_profile, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_pim_profile, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/pim-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyPimProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#list_policy_pim_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Pim Profile
    # List all pim profile. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyPimProfileListResult]
    def list_policy_pim_profile_0(opts = {})
      data, _status_code, _headers = list_policy_pim_profile_0_with_http_info(opts)
      data
    end

    # List Pim Profile
    # List all pim profile. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyPimProfileListResult, Fixnum, Hash)>] PolicyPimProfileListResult data, response status code and response headers
    def list_policy_pim_profile_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_pim_profile_0 ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_pim_profile_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.list_policy_pim_profile_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/pim-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyPimProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#list_policy_pim_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update igmp profile
    # Create a igmp profile with the igmp-profile-id is not already present, otherwise update the igmp profile. 
    # @param igmp_profile_id igmp profile id
    # @param policy_igmp_profile 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_igmp_profile(igmp_profile_id, policy_igmp_profile, opts = {})
      patch_policy_igmp_profile_with_http_info(igmp_profile_id, policy_igmp_profile, opts)
      nil
    end

    # Update igmp profile
    # Create a igmp profile with the igmp-profile-id is not already present, otherwise update the igmp profile. 
    # @param igmp_profile_id igmp profile id
    # @param policy_igmp_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_igmp_profile_with_http_info(igmp_profile_id, policy_igmp_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_igmp_profile ...'
      end
      # verify the required parameter 'igmp_profile_id' is set
      if @api_client.config.client_side_validation && igmp_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'igmp_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_igmp_profile"
      end
      # verify the required parameter 'policy_igmp_profile' is set
      if @api_client.config.client_side_validation && policy_igmp_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_igmp_profile' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_igmp_profile"
      end
      # resource path
      local_var_path = '/global-infra/igmp-profiles/{igmp-profile-id}'.sub('{' + 'igmp-profile-id' + '}', igmp_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_igmp_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#patch_policy_igmp_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update igmp profile
    # Create a igmp profile with the igmp-profile-id is not already present, otherwise update the igmp profile. 
    # @param igmp_profile_id igmp profile id
    # @param policy_igmp_profile 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_igmp_profile_0(igmp_profile_id, policy_igmp_profile, opts = {})
      patch_policy_igmp_profile_0_with_http_info(igmp_profile_id, policy_igmp_profile, opts)
      nil
    end

    # Update igmp profile
    # Create a igmp profile with the igmp-profile-id is not already present, otherwise update the igmp profile. 
    # @param igmp_profile_id igmp profile id
    # @param policy_igmp_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_igmp_profile_0_with_http_info(igmp_profile_id, policy_igmp_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_igmp_profile_0 ...'
      end
      # verify the required parameter 'igmp_profile_id' is set
      if @api_client.config.client_side_validation && igmp_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'igmp_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_igmp_profile_0"
      end
      # verify the required parameter 'policy_igmp_profile' is set
      if @api_client.config.client_side_validation && policy_igmp_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_igmp_profile' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_igmp_profile_0"
      end
      # resource path
      local_var_path = '/infra/igmp-profiles/{igmp-profile-id}'.sub('{' + 'igmp-profile-id' + '}', igmp_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_igmp_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#patch_policy_igmp_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update pim profile
    # Create a pim profile with the pim-profile-id is not already present, otherwise update the pim profile. 
    # @param pim_profile_id pim profile id
    # @param policy_pim_profile 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_pim_profile(pim_profile_id, policy_pim_profile, opts = {})
      patch_policy_pim_profile_with_http_info(pim_profile_id, policy_pim_profile, opts)
      nil
    end

    # Update pim profile
    # Create a pim profile with the pim-profile-id is not already present, otherwise update the pim profile. 
    # @param pim_profile_id pim profile id
    # @param policy_pim_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_pim_profile_with_http_info(pim_profile_id, policy_pim_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_pim_profile ...'
      end
      # verify the required parameter 'pim_profile_id' is set
      if @api_client.config.client_side_validation && pim_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'pim_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_pim_profile"
      end
      # verify the required parameter 'policy_pim_profile' is set
      if @api_client.config.client_side_validation && policy_pim_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_pim_profile' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_pim_profile"
      end
      # resource path
      local_var_path = '/infra/pim-profiles/{pim-profile-id}'.sub('{' + 'pim-profile-id' + '}', pim_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_pim_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#patch_policy_pim_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update pim profile
    # Create a pim profile with the pim-profile-id is not already present, otherwise update the pim profile. 
    # @param pim_profile_id pim profile id
    # @param policy_pim_profile 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_pim_profile_0(pim_profile_id, policy_pim_profile, opts = {})
      patch_policy_pim_profile_0_with_http_info(pim_profile_id, policy_pim_profile, opts)
      nil
    end

    # Update pim profile
    # Create a pim profile with the pim-profile-id is not already present, otherwise update the pim profile. 
    # @param pim_profile_id pim profile id
    # @param policy_pim_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_pim_profile_0_with_http_info(pim_profile_id, policy_pim_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_pim_profile_0 ...'
      end
      # verify the required parameter 'pim_profile_id' is set
      if @api_client.config.client_side_validation && pim_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'pim_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_pim_profile_0"
      end
      # verify the required parameter 'policy_pim_profile' is set
      if @api_client.config.client_side_validation && policy_pim_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_pim_profile' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.patch_policy_pim_profile_0"
      end
      # resource path
      local_var_path = '/global-infra/pim-profiles/{pim-profile-id}'.sub('{' + 'pim-profile-id' + '}', pim_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_pim_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#patch_policy_pim_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Igmp Profile
    # Read Igmp Profile. 
    # @param igmp_profile_id igmp profile id
    # @param [Hash] opts the optional parameters
    # @return [PolicyIgmpProfile]
    def read_policy_igmp_profile(igmp_profile_id, opts = {})
      data, _status_code, _headers = read_policy_igmp_profile_with_http_info(igmp_profile_id, opts)
      data
    end

    # Read Igmp Profile
    # Read Igmp Profile. 
    # @param igmp_profile_id igmp profile id
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyIgmpProfile, Fixnum, Hash)>] PolicyIgmpProfile data, response status code and response headers
    def read_policy_igmp_profile_with_http_info(igmp_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.read_policy_igmp_profile ...'
      end
      # verify the required parameter 'igmp_profile_id' is set
      if @api_client.config.client_side_validation && igmp_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'igmp_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.read_policy_igmp_profile"
      end
      # resource path
      local_var_path = '/global-infra/igmp-profiles/{igmp-profile-id}'.sub('{' + 'igmp-profile-id' + '}', igmp_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyIgmpProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#read_policy_igmp_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Igmp Profile
    # Read Igmp Profile. 
    # @param igmp_profile_id igmp profile id
    # @param [Hash] opts the optional parameters
    # @return [PolicyIgmpProfile]
    def read_policy_igmp_profile_0(igmp_profile_id, opts = {})
      data, _status_code, _headers = read_policy_igmp_profile_0_with_http_info(igmp_profile_id, opts)
      data
    end

    # Read Igmp Profile
    # Read Igmp Profile. 
    # @param igmp_profile_id igmp profile id
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyIgmpProfile, Fixnum, Hash)>] PolicyIgmpProfile data, response status code and response headers
    def read_policy_igmp_profile_0_with_http_info(igmp_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.read_policy_igmp_profile_0 ...'
      end
      # verify the required parameter 'igmp_profile_id' is set
      if @api_client.config.client_side_validation && igmp_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'igmp_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.read_policy_igmp_profile_0"
      end
      # resource path
      local_var_path = '/infra/igmp-profiles/{igmp-profile-id}'.sub('{' + 'igmp-profile-id' + '}', igmp_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyIgmpProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#read_policy_igmp_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Pim Profile
    # Read Pim Profile. 
    # @param pim_profile_id pim profile id
    # @param [Hash] opts the optional parameters
    # @return [PolicyPimProfile]
    def read_policy_pim_profile(pim_profile_id, opts = {})
      data, _status_code, _headers = read_policy_pim_profile_with_http_info(pim_profile_id, opts)
      data
    end

    # Read Pim Profile
    # Read Pim Profile. 
    # @param pim_profile_id pim profile id
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyPimProfile, Fixnum, Hash)>] PolicyPimProfile data, response status code and response headers
    def read_policy_pim_profile_with_http_info(pim_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.read_policy_pim_profile ...'
      end
      # verify the required parameter 'pim_profile_id' is set
      if @api_client.config.client_side_validation && pim_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'pim_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.read_policy_pim_profile"
      end
      # resource path
      local_var_path = '/infra/pim-profiles/{pim-profile-id}'.sub('{' + 'pim-profile-id' + '}', pim_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyPimProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#read_policy_pim_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Pim Profile
    # Read Pim Profile. 
    # @param pim_profile_id pim profile id
    # @param [Hash] opts the optional parameters
    # @return [PolicyPimProfile]
    def read_policy_pim_profile_0(pim_profile_id, opts = {})
      data, _status_code, _headers = read_policy_pim_profile_0_with_http_info(pim_profile_id, opts)
      data
    end

    # Read Pim Profile
    # Read Pim Profile. 
    # @param pim_profile_id pim profile id
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyPimProfile, Fixnum, Hash)>] PolicyPimProfile data, response status code and response headers
    def read_policy_pim_profile_0_with_http_info(pim_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkingProfilesMulticastProfilesApi.read_policy_pim_profile_0 ...'
      end
      # verify the required parameter 'pim_profile_id' is set
      if @api_client.config.client_side_validation && pim_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'pim_profile_id' when calling PolicyNetworkingNetworkingProfilesMulticastProfilesApi.read_policy_pim_profile_0"
      end
      # resource path
      local_var_path = '/global-infra/pim-profiles/{pim-profile-id}'.sub('{' + 'pim-profile-id' + '}', pim_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyPimProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkingProfilesMulticastProfilesApi#read_policy_pim_profile_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
