=begin
#NSX-T Data Center Policy API

#VMware NSX-T Data Center Policy REST API

OpenAPI spec version: 3.1.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module NSXTPolicy
  class PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create or patch an L3Vpn
    # Create the new L3Vpn if it does not exist. If the L3Vpn already exists, merge with the the existing one. This is a patch. - If the passed L3Vpn is a policy-based one and has new L3VpnRules, add them to the existing L3VpnRules. - If the passed L3Vpn is a policy-based one and also has existing L3VpnRules, update the existing L3VpnRules. This API is deprecated. Please use the following APIs instead: - PATCH /infra/ipsec-vpn-tunnel-profiles/<tunnel-profile-id> to patch the IPSecVpnTunnelProfile. - PATCH /infra/ipsec-vpn-ike-profiles/<ike-profile-id> to patch the IPSecVpnIkeProfile. - PATCH /infra/ipsec-vpn-dpd-profiles/<dpd-profile-id> to patch the IPSecVpnDpdProfile. - PATCH /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/local-endpoints/<local-endpoint-id> to patch the IPSecVpnLocalEndpoint. - PATCH /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/sessions/<l3vpn-id> to patch the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/patched: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id>. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id>. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id>. - IPSecVpnLocalEndpoint: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/   ipsec-vpn-services/default/local-endpoints/<local-endpoint-id>. If an object with the same   \"local_address\" already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/   ipsec-vpn-services/default/sessions/L3VPN_<l3vpn-id>. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def create_or_patch_l3_vpn(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      create_or_patch_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts)
      nil
    end

    # Create or patch an L3Vpn
    # Create the new L3Vpn if it does not exist. If the L3Vpn already exists, merge with the the existing one. This is a patch. - If the passed L3Vpn is a policy-based one and has new L3VpnRules, add them to the existing L3VpnRules. - If the passed L3Vpn is a policy-based one and also has existing L3VpnRules, update the existing L3VpnRules. This API is deprecated. Please use the following APIs instead: - PATCH /infra/ipsec-vpn-tunnel-profiles/&lt;tunnel-profile-id&gt; to patch the IPSecVpnTunnelProfile. - PATCH /infra/ipsec-vpn-ike-profiles/&lt;ike-profile-id&gt; to patch the IPSecVpnIkeProfile. - PATCH /infra/ipsec-vpn-dpd-profiles/&lt;dpd-profile-id&gt; to patch the IPSecVpnDpdProfile. - PATCH /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to patch the IPSecVpnLocalEndpoint. - PATCH /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/&lt;l3vpn-id&gt; to patch the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/patched: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/local-endpoints/&lt;local-endpoint-id&gt;. If an object with the same   \&quot;local_address\&quot; already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def create_or_patch_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_patch_l3_vpn ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_patch_l3_vpn"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_patch_l3_vpn"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_patch_l3_vpn"
      end
      # verify the required parameter 'l3_vpn' is set
      if @api_client.config.client_side_validation && l3_vpn.nil?
        fail ArgumentError, "Missing the required parameter 'l3_vpn' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_patch_l3_vpn"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l3_vpn)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#create_or_patch_l3_vpn\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or patch an L3Vpn
    # Create the new L3Vpn if it does not exist. If the L3Vpn already exists, merge with the the existing one. This is a patch. - If the passed L3Vpn is a policy-based one and has new L3VpnRules, add them to the existing L3VpnRules. - If the passed L3Vpn is a policy-based one and also has existing L3VpnRules, update the existing L3VpnRules. This API is deprecated. Please use the following APIs instead: - PATCH /infra/ipsec-vpn-tunnel-profiles/<tunnel-profile-id> to patch the IPSecVpnTunnelProfile. - PATCH /infra/ipsec-vpn-ike-profiles/<ike-profile-id> to patch the IPSecVpnIkeProfile. - PATCH /infra/ipsec-vpn-dpd-profiles/<dpd-profile-id> to patch the IPSecVpnDpdProfile. - PATCH /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/local-endpoints/<local-endpoint-id> to patch the IPSecVpnLocalEndpoint. - PATCH /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/sessions/<l3vpn-id> to patch the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/patched: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id>. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id>. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id>. - IPSecVpnLocalEndpoint: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/   ipsec-vpn-services/default/local-endpoints/<local-endpoint-id>. If an object with the same   \"local_address\" already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/   ipsec-vpn-services/default/sessions/L3VPN_<l3vpn-id>. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def create_or_patch_l3_vpn_0(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      create_or_patch_l3_vpn_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts)
      nil
    end

    # Create or patch an L3Vpn
    # Create the new L3Vpn if it does not exist. If the L3Vpn already exists, merge with the the existing one. This is a patch. - If the passed L3Vpn is a policy-based one and has new L3VpnRules, add them to the existing L3VpnRules. - If the passed L3Vpn is a policy-based one and also has existing L3VpnRules, update the existing L3VpnRules. This API is deprecated. Please use the following APIs instead: - PATCH /infra/ipsec-vpn-tunnel-profiles/&lt;tunnel-profile-id&gt; to patch the IPSecVpnTunnelProfile. - PATCH /infra/ipsec-vpn-ike-profiles/&lt;ike-profile-id&gt; to patch the IPSecVpnIkeProfile. - PATCH /infra/ipsec-vpn-dpd-profiles/&lt;dpd-profile-id&gt; to patch the IPSecVpnDpdProfile. - PATCH /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to patch the IPSecVpnLocalEndpoint. - PATCH /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/&lt;l3vpn-id&gt; to patch the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/patched: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/local-endpoints/&lt;local-endpoint-id&gt;. If an object with the same   \&quot;local_address\&quot; already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def create_or_patch_l3_vpn_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_patch_l3_vpn_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_patch_l3_vpn_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_patch_l3_vpn_0"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_patch_l3_vpn_0"
      end
      # verify the required parameter 'l3_vpn' is set
      if @api_client.config.client_side_validation && l3_vpn.nil?
        fail ArgumentError, "Missing the required parameter 'l3_vpn' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_patch_l3_vpn_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l3_vpn)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#create_or_patch_l3_vpn_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or replace an L3Vpn
    # Create a new L3Vpn if the L3Vpn with given id does not already exist. If the L3Vpn with the given id already exists, replace the existing L3Vpn. This a full replace. This API is deprecated. Please use the following APIs instead: - PUT /infra/ipsec-vpn-tunnel-profiles/<tunnel-profile-id> to update the IPSecVpnTunnelProfile. - PUT /infra/ipsec-vpn-ike-profiles/<ike-profile-id> to update the IPSecVpnIkeProfile. - PUT /infra/ipsec-vpn-dpd-profiles/<dpd-profile-id> to update the IPSecVpnDpdProfile. - PUT /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/local-endpoints/<local-endpoint-id> to update the IPSecVpnLocalEndpoint. - PUT /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/sessions/<l3vpn-id> to update the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/updated: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id>. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id>. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id>. - IPSecVpnLocalEndpoint: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/   ipsec-vpn-services/default/local-endpoints/<local-endpoint-id>. If an object with the same   \"local_address\" already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/   ipsec-vpn-services/default/sessions/L3VPN_<l3vpn-id>. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [L3Vpn]
    def create_or_replace_l3_vpn(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      data, _status_code, _headers = create_or_replace_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts)
      data
    end

    # Create or replace an L3Vpn
    # Create a new L3Vpn if the L3Vpn with given id does not already exist. If the L3Vpn with the given id already exists, replace the existing L3Vpn. This a full replace. This API is deprecated. Please use the following APIs instead: - PUT /infra/ipsec-vpn-tunnel-profiles/&lt;tunnel-profile-id&gt; to update the IPSecVpnTunnelProfile. - PUT /infra/ipsec-vpn-ike-profiles/&lt;ike-profile-id&gt; to update the IPSecVpnIkeProfile. - PUT /infra/ipsec-vpn-dpd-profiles/&lt;dpd-profile-id&gt; to update the IPSecVpnDpdProfile. - PUT /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to update the IPSecVpnLocalEndpoint. - PUT /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/&lt;l3vpn-id&gt; to update the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/updated: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/local-endpoints/&lt;local-endpoint-id&gt;. If an object with the same   \&quot;local_address\&quot; already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L3Vpn, Fixnum, Hash)>] L3Vpn data, response status code and response headers
    def create_or_replace_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_replace_l3_vpn ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_replace_l3_vpn"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_replace_l3_vpn"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_replace_l3_vpn"
      end
      # verify the required parameter 'l3_vpn' is set
      if @api_client.config.client_side_validation && l3_vpn.nil?
        fail ArgumentError, "Missing the required parameter 'l3_vpn' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_replace_l3_vpn"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l3_vpn)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3Vpn')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#create_or_replace_l3_vpn\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or replace an L3Vpn
    # Create a new L3Vpn if the L3Vpn with given id does not already exist. If the L3Vpn with the given id already exists, replace the existing L3Vpn. This a full replace. This API is deprecated. Please use the following APIs instead: - PUT /infra/ipsec-vpn-tunnel-profiles/<tunnel-profile-id> to update the IPSecVpnTunnelProfile. - PUT /infra/ipsec-vpn-ike-profiles/<ike-profile-id> to update the IPSecVpnIkeProfile. - PUT /infra/ipsec-vpn-dpd-profiles/<dpd-profile-id> to update the IPSecVpnDpdProfile. - PUT /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/local-endpoints/<local-endpoint-id> to update the IPSecVpnLocalEndpoint. - PUT /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/sessions/<l3vpn-id> to update the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/updated: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id>. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id>. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id>. - IPSecVpnLocalEndpoint: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/   ipsec-vpn-services/default/local-endpoints/<local-endpoint-id>. If an object with the same   \"local_address\" already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/   ipsec-vpn-services/default/sessions/L3VPN_<l3vpn-id>. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [L3Vpn]
    def create_or_replace_l3_vpn_0(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      data, _status_code, _headers = create_or_replace_l3_vpn_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts)
      data
    end

    # Create or replace an L3Vpn
    # Create a new L3Vpn if the L3Vpn with given id does not already exist. If the L3Vpn with the given id already exists, replace the existing L3Vpn. This a full replace. This API is deprecated. Please use the following APIs instead: - PUT /infra/ipsec-vpn-tunnel-profiles/&lt;tunnel-profile-id&gt; to update the IPSecVpnTunnelProfile. - PUT /infra/ipsec-vpn-ike-profiles/&lt;ike-profile-id&gt; to update the IPSecVpnIkeProfile. - PUT /infra/ipsec-vpn-dpd-profiles/&lt;dpd-profile-id&gt; to update the IPSecVpnDpdProfile. - PUT /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to update the IPSecVpnLocalEndpoint. - PUT /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/&lt;l3vpn-id&gt; to update the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/updated: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/local-endpoints/&lt;local-endpoint-id&gt;. If an object with the same   \&quot;local_address\&quot; already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L3Vpn, Fixnum, Hash)>] L3Vpn data, response status code and response headers
    def create_or_replace_l3_vpn_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_replace_l3_vpn_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_replace_l3_vpn_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_replace_l3_vpn_0"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_replace_l3_vpn_0"
      end
      # verify the required parameter 'l3_vpn' is set
      if @api_client.config.client_side_validation && l3_vpn.nil?
        fail ArgumentError, "Missing the required parameter 'l3_vpn' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.create_or_replace_l3_vpn_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l3_vpn)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3Vpn')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#create_or_replace_l3_vpn_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete an L3Vpn
    # Delete the L3Vpn with the given id. This API is deprecated. Please use the following APIs instead: - DELETE /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/ default/sessions/L3VPN_<l3vpn-id> to delete the associated IPSecVpnSession. - DELETE /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/ default/local-endpoints/<local-endpoint-id> to delete the associated IPSecVpnLocalEndpoint. - DELETE /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id> to delete the associated IPSecVpnTunnelProfile. - DELETE /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id> to delete the associated IPSecVpnIkeProfile. - DELETE /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id> to delete the associated IPSecVpnDpdProfile. If used, this deprecated API will result in the following objects being internally deleted: - IPSecVpnSession: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ ipsec-vpn-services/default/sessions/L3VPN_<l3vpn-id>. - IPSecVpnLocalEndpoint: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ ipsec-vpn-services/default/local-endpoints/<local-endpoint-id> when not used by other IPSecVpnSessions. - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id>. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id>. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id>. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_l3_vpn(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      delete_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      nil
    end

    # Delete an L3Vpn
    # Delete the L3Vpn with the given id. This API is deprecated. Please use the following APIs instead: - DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/sessions/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnSession. - DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/local-endpoints/&lt;local-endpoint-id&gt; to delete the associated IPSecVpnLocalEndpoint. - DELETE /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnTunnelProfile. - DELETE /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnIkeProfile. - DELETE /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnDpdProfile. If used, this deprecated API will result in the following objects being internally deleted: - IPSecVpnSession: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ ipsec-vpn-services/default/local-endpoints/&lt;local-endpoint-id&gt; when not used by other IPSecVpnSessions. - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.delete_l3_vpn ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.delete_l3_vpn"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.delete_l3_vpn"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.delete_l3_vpn"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#delete_l3_vpn\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete an L3Vpn
    # Delete the L3Vpn with the given id. This API is deprecated. Please use the following APIs instead: - DELETE /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/ default/sessions/L3VPN_<l3vpn-id> to delete the associated IPSecVpnSession. - DELETE /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/ default/local-endpoints/<local-endpoint-id> to delete the associated IPSecVpnLocalEndpoint. - DELETE /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id> to delete the associated IPSecVpnTunnelProfile. - DELETE /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id> to delete the associated IPSecVpnIkeProfile. - DELETE /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id> to delete the associated IPSecVpnDpdProfile. If used, this deprecated API will result in the following objects being internally deleted: - IPSecVpnSession: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ ipsec-vpn-services/default/sessions/L3VPN_<l3vpn-id>. - IPSecVpnLocalEndpoint: /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ ipsec-vpn-services/default/local-endpoints/<local-endpoint-id> when not used by other IPSecVpnSessions. - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id>. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id>. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id>. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_l3_vpn_0(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      delete_l3_vpn_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      nil
    end

    # Delete an L3Vpn
    # Delete the L3Vpn with the given id. This API is deprecated. Please use the following APIs instead: - DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/sessions/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnSession. - DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/local-endpoints/&lt;local-endpoint-id&gt; to delete the associated IPSecVpnLocalEndpoint. - DELETE /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnTunnelProfile. - DELETE /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnIkeProfile. - DELETE /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnDpdProfile. If used, this deprecated API will result in the following objects being internally deleted: - IPSecVpnSession: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ ipsec-vpn-services/default/local-endpoints/&lt;local-endpoint-id&gt; when not used by other IPSecVpnSessions. - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_l3_vpn_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.delete_l3_vpn_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.delete_l3_vpn_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.delete_l3_vpn_0"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.delete_l3_vpn_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#delete_l3_vpn_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List L3Vpns
    # Paginated list of L3Vpns. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/sessions to list all IPSecVpnSessions. - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/local-endpoints to list all IPSecVpnLocalEndpoints. - GET /infra/ipsec-vpn-tunnel-profiles to list all IPSecVpnTunnelProfiles. - GET /infra/ipsec-vpn-ike-profiles to list all IPSecVpnIkeProfiles. - GET /infra/ipsec-vpn-dpd-profiles to list all IPSecVpnDpdProfiles. If used, this deprecated API will only return L3Vpns that were created through the deprecated PATCH and PUT /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/l3vpns/<l3vpn-id> APIs. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :l3vpn_session Resource type of L3Vpn Session
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [L3VpnListResult]
    def list_l3_vpns(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_l3_vpns_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List L3Vpns
    # Paginated list of L3Vpns. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions to list all IPSecVpnSessions. - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints to list all IPSecVpnLocalEndpoints. - GET /infra/ipsec-vpn-tunnel-profiles to list all IPSecVpnTunnelProfiles. - GET /infra/ipsec-vpn-ike-profiles to list all IPSecVpnIkeProfiles. - GET /infra/ipsec-vpn-dpd-profiles to list all IPSecVpnDpdProfiles. If used, this deprecated API will only return L3Vpns that were created through the deprecated PATCH and PUT /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/l3vpns/&lt;l3vpn-id&gt; APIs. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :l3vpn_session Resource type of L3Vpn Session
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(L3VpnListResult, Fixnum, Hash)>] L3VpnListResult data, response status code and response headers
    def list_l3_vpns_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.list_l3_vpns ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.list_l3_vpns"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.list_l3_vpns"
      end
      if @api_client.config.client_side_validation && opts[:'l3vpn_session'] && !['PolicyBasedL3VpnSession', 'RouteBasedL3VpnSession'].include?(opts[:'l3vpn_session'])
        fail ArgumentError, 'invalid value for "l3vpn_session", must be one of PolicyBasedL3VpnSession, RouteBasedL3VpnSession'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.list_l3_vpns, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.list_l3_vpns, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'l3vpn_session'] = opts[:'l3vpn_session'] if !opts[:'l3vpn_session'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3VpnListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#list_l3_vpns\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List L3Vpns
    # Paginated list of L3Vpns. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/sessions to list all IPSecVpnSessions. - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/local-endpoints to list all IPSecVpnLocalEndpoints. - GET /infra/ipsec-vpn-tunnel-profiles to list all IPSecVpnTunnelProfiles. - GET /infra/ipsec-vpn-ike-profiles to list all IPSecVpnIkeProfiles. - GET /infra/ipsec-vpn-dpd-profiles to list all IPSecVpnDpdProfiles. If used, this deprecated API will only return L3Vpns that were created through the deprecated PATCH and PUT /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/l3vpns/<l3vpn-id> APIs. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :l3vpn_session Resource type of L3Vpn Session
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [L3VpnListResult]
    def list_l3_vpns_0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_l3_vpns_0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List L3Vpns
    # Paginated list of L3Vpns. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions to list all IPSecVpnSessions. - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints to list all IPSecVpnLocalEndpoints. - GET /infra/ipsec-vpn-tunnel-profiles to list all IPSecVpnTunnelProfiles. - GET /infra/ipsec-vpn-ike-profiles to list all IPSecVpnIkeProfiles. - GET /infra/ipsec-vpn-dpd-profiles to list all IPSecVpnDpdProfiles. If used, this deprecated API will only return L3Vpns that were created through the deprecated PATCH and PUT /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/l3vpns/&lt;l3vpn-id&gt; APIs. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :l3vpn_session Resource type of L3Vpn Session
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(L3VpnListResult, Fixnum, Hash)>] L3VpnListResult data, response status code and response headers
    def list_l3_vpns_0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.list_l3_vpns_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.list_l3_vpns_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.list_l3_vpns_0"
      end
      if @api_client.config.client_side_validation && opts[:'l3vpn_session'] && !['PolicyBasedL3VpnSession', 'RouteBasedL3VpnSession'].include?(opts[:'l3vpn_session'])
        fail ArgumentError, 'invalid value for "l3vpn_session", must be one of PolicyBasedL3VpnSession, RouteBasedL3VpnSession'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.list_l3_vpns_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.list_l3_vpns_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'l3vpn_session'] = opts[:'l3vpn_session'] if !opts[:'l3vpn_session'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3VpnListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#list_l3_vpns_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read an L3Vpn
    # Read the L3Vpn with the given id. No sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/sessions/L3VPN_<l3vpn-id> to get the associated IPSecVpnSession. - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/local-endpoints/<local-endpoint-id> to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id> to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id> to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id> to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with <l3vpn-id> id unless the associated IPSecVpnSession with L3VPN_<l3vpn-id> id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/ default/sessions/L3VPN_<l3vpn-id>, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [L3Vpn]
    def read_l3_vpn(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      data, _status_code, _headers = read_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      data
    end

    # Read an L3Vpn
    # Read the L3Vpn with the given id. No sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnSession. - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with &lt;l3vpn-id&gt; id unless the associated IPSecVpnSession with L3VPN_&lt;l3vpn-id&gt; id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/sessions/L3VPN_&lt;l3vpn-id&gt;, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L3Vpn, Fixnum, Hash)>] L3Vpn data, response status code and response headers
    def read_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3Vpn')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#read_l3_vpn\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read an L3Vpn
    # Read the L3Vpn with the given id. No sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/sessions/L3VPN_<l3vpn-id> to get the associated IPSecVpnSession. - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/local-endpoints/<local-endpoint-id> to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id> to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id> to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id> to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with <l3vpn-id> id unless the associated IPSecVpnSession with L3VPN_<l3vpn-id> id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/ default/sessions/L3VPN_<l3vpn-id>, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [L3Vpn]
    def read_l3_vpn_0(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      data, _status_code, _headers = read_l3_vpn_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      data
    end

    # Read an L3Vpn
    # Read the L3Vpn with the given id. No sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnSession. - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with &lt;l3vpn-id&gt; id unless the associated IPSecVpnSession with L3VPN_&lt;l3vpn-id&gt; id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/sessions/L3VPN_&lt;l3vpn-id&gt;, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L3Vpn, Fixnum, Hash)>] L3Vpn data, response status code and response headers
    def read_l3_vpn_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_0"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3Vpn')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#read_l3_vpn_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Download L3Vpn Config for Remote Site
    # Get the L3Vpn Configuration for the peer site. Peer config contains PSK; be careful when sharing or storing it. - no enforcement point path specified: L3Vpn Peer Config will be evaluated on each enforcement point. - {enforcement_point_path}: L3Vpn Peer Config is evaluated only on the given enforcement point. This API is deprecated. Please use GET /infra/tier-0s/<tier-0-id>/locale-services/ <locale-service-id>/ipsec-vpn-services/default/sessions/L3VPN_<l3vpn-id>/peer-config instead. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [String]
    def read_l3_vpn_peer_config(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      data, _status_code, _headers = read_l3_vpn_peer_config_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      data
    end

    # Download L3Vpn Config for Remote Site
    # Get the L3Vpn Configuration for the peer site. Peer config contains PSK; be careful when sharing or storing it. - no enforcement point path specified: L3Vpn Peer Config will be evaluated on each enforcement point. - {enforcement_point_path}: L3Vpn Peer Config is evaluated only on the given enforcement point. This API is deprecated. Please use GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/ &lt;locale-service-id&gt;/ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;/peer-config instead. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def read_l3_vpn_peer_config_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_peer_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_peer_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_peer_config"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_peer_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}/peer-config'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/plain; charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#read_l3_vpn_peer_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Download L3Vpn Config for Remote Site
    # Get the L3Vpn Configuration for the peer site. Peer config contains PSK; be careful when sharing or storing it. - no enforcement point path specified: L3Vpn Peer Config will be evaluated on each enforcement point. - {enforcement_point_path}: L3Vpn Peer Config is evaluated only on the given enforcement point. This API is deprecated. Please use GET /infra/tier-0s/<tier-0-id>/locale-services/ <locale-service-id>/ipsec-vpn-services/default/sessions/L3VPN_<l3vpn-id>/peer-config instead. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [String]
    def read_l3_vpn_peer_config_0(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      data, _status_code, _headers = read_l3_vpn_peer_config_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      data
    end

    # Download L3Vpn Config for Remote Site
    # Get the L3Vpn Configuration for the peer site. Peer config contains PSK; be careful when sharing or storing it. - no enforcement point path specified: L3Vpn Peer Config will be evaluated on each enforcement point. - {enforcement_point_path}: L3Vpn Peer Config is evaluated only on the given enforcement point. This API is deprecated. Please use GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/ &lt;locale-service-id&gt;/ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;/peer-config instead. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def read_l3_vpn_peer_config_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_peer_config_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_peer_config_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_peer_config_0"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_peer_config_0"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}/peer-config'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/plain; charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#read_l3_vpn_peer_config_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read an L3Vpn
    # Read the L3Vpn with the given id. Sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/sessions/L3VPN_<l3vpn-id>?action=show_sensitive_data to get the associated   IPSecVpnSession. - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/local-endpoints/<local-endpoint-id> to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id> to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id> to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id> to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with <l3vpn-id> id unless the associated IPSecVpnSession with L3VPN_<l3vpn-id> id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/ default/sessions/L3VPN_<l3vpn-id>, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [L3Vpn]
    def read_l3_vpn_with_sensitive_data_show_sensitive_data(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      data, _status_code, _headers = read_l3_vpn_with_sensitive_data_show_sensitive_data_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      data
    end

    # Read an L3Vpn
    # Read the L3Vpn with the given id. Sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/L3VPN_&lt;l3vpn-id&gt;?action&#x3D;show_sensitive_data to get the associated   IPSecVpnSession. - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with &lt;l3vpn-id&gt; id unless the associated IPSecVpnSession with L3VPN_&lt;l3vpn-id&gt; id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/sessions/L3VPN_&lt;l3vpn-id&gt;, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L3Vpn, Fixnum, Hash)>] L3Vpn data, response status code and response headers
    def read_l3_vpn_with_sensitive_data_show_sensitive_data_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_with_sensitive_data_show_sensitive_data ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_with_sensitive_data_show_sensitive_data"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_with_sensitive_data_show_sensitive_data"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_with_sensitive_data_show_sensitive_data"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}?action=show_sensitive_data'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3Vpn')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#read_l3_vpn_with_sensitive_data_show_sensitive_data\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read an L3Vpn
    # Read the L3Vpn with the given id. Sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/sessions/L3VPN_<l3vpn-id>?action=show_sensitive_data to get the associated   IPSecVpnSession. - GET /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/   default/local-endpoints/<local-endpoint-id> to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_<l3vpn-id> to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_<l3vpn-id> to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_<l3vpn-id> to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with <l3vpn-id> id unless the associated IPSecVpnSession with L3VPN_<l3vpn-id> id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/<tier-0-id>/locale-services/<locale-service-id>/ipsec-vpn-services/ default/sessions/L3VPN_<l3vpn-id>, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [L3Vpn]
    def read_l3_vpn_with_sensitive_data_show_sensitive_data_0(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      data, _status_code, _headers = read_l3_vpn_with_sensitive_data_show_sensitive_data_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      data
    end

    # Read an L3Vpn
    # Read the L3Vpn with the given id. Sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/L3VPN_&lt;l3vpn-id&gt;?action&#x3D;show_sensitive_data to get the associated   IPSecVpnSession. - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with &lt;l3vpn-id&gt; id unless the associated IPSecVpnSession with L3VPN_&lt;l3vpn-id&gt; id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/sessions/L3VPN_&lt;l3vpn-id&gt;, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L3Vpn, Fixnum, Hash)>] L3Vpn data, response status code and response headers
    def read_l3_vpn_with_sensitive_data_show_sensitive_data_0_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_with_sensitive_data_show_sensitive_data_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_with_sensitive_data_show_sensitive_data_0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_with_sensitive_data_show_sensitive_data_0"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi.read_l3_vpn_with_sensitive_data_show_sensitive_data_0"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}?action=show_sensitive_data'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3Vpn')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PolicyNetworkingNetworkServicesVPNIPSECSessionsTier0GatewaysApi#read_l3_vpn_with_sensitive_data_show_sensitive_data_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
