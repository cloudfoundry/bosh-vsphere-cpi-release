=begin
#NSX-T Manager API

#VMware NSX-T Manager REST API

OpenAPI spec version: 2.5.1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'uri'

module NSXT
  class ManagementPlaneApiVpnStatisticsL2VpnRemoteMacsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get L2VPN session remote mac for logical switch
    # Get L2VPN session remote mac for logical switch.
    # @param session_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :logical_switch_id logical switch identifier
    # @return [L2VPNSessionRemoteMacs]
    def get_l2_vpn_session_remote_macs_for_ls(session_id, opts = {})
      data, _status_code, _headers = get_l2_vpn_session_remote_macs_for_ls_with_http_info(session_id, opts)
      data
    end

    # Get L2VPN session remote mac for logical switch
    # Get L2VPN session remote mac for logical switch.
    # @param session_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :logical_switch_id logical switch identifier
    # @return [Array<(L2VPNSessionRemoteMacs, Fixnum, Hash)>] L2VPNSessionRemoteMacs data, response status code and response headers
    def get_l2_vpn_session_remote_macs_for_ls_with_http_info(session_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ManagementPlaneApiVpnStatisticsL2VpnRemoteMacsApi.get_l2_vpn_session_remote_macs_for_ls ...'
      end
      # verify the required parameter 'session_id' is set
      if @api_client.config.client_side_validation && session_id.nil?
        fail ArgumentError, "Missing the required parameter 'session_id' when calling ManagementPlaneApiVpnStatisticsL2VpnRemoteMacsApi.get_l2_vpn_session_remote_macs_for_ls"
      end
      # resource path
      local_var_path = '/vpn/l2vpn/sessions/{session-id}/remote-mac'.sub('{' + 'session-id' + '}', session_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'logical_switch_id'] = opts[:'logical_switch_id'] if !opts[:'logical_switch_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L2VPNSessionRemoteMacs')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementPlaneApiVpnStatisticsL2VpnRemoteMacsApi#get_l2_vpn_session_remote_macs_for_ls\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
