=begin
#NSX-T Manager API

#VMware NSX-T Manager REST API

OpenAPI spec version: 2.5.1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'uri'

module NSXT
  class ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a Bridge Endpoint Profile
    # Creates a Bridge Endpoint Profile. Profile contains edge cluster id, indexes of the member nodes, fialover mode and high availability mode for a Bridge EndPoint 
    # @param bridge_endpoint_profile 
    # @param [Hash] opts the optional parameters
    # @return [BridgeEndpointProfile]
    def create_bridge_endpoint_profile(bridge_endpoint_profile, opts = {})
      data, _status_code, _headers = create_bridge_endpoint_profile_with_http_info(bridge_endpoint_profile, opts)
      data
    end

    # Create a Bridge Endpoint Profile
    # Creates a Bridge Endpoint Profile. Profile contains edge cluster id, indexes of the member nodes, fialover mode and high availability mode for a Bridge EndPoint 
    # @param bridge_endpoint_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BridgeEndpointProfile, Fixnum, Hash)>] BridgeEndpointProfile data, response status code and response headers
    def create_bridge_endpoint_profile_with_http_info(bridge_endpoint_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.create_bridge_endpoint_profile ...'
      end
      # verify the required parameter 'bridge_endpoint_profile' is set
      if @api_client.config.client_side_validation && bridge_endpoint_profile.nil?
        fail ArgumentError, "Missing the required parameter 'bridge_endpoint_profile' when calling ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.create_bridge_endpoint_profile"
      end
      # resource path
      local_var_path = '/bridge-endpoint-profiles'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bridge_endpoint_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BridgeEndpointProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi#create_bridge_endpoint_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete a Bridge Endpoint Profile
    # Deletes the specified Bridge Endpoint Profile.
    # @param bridgeendpointprofile_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_bridge_endpoint_profile(bridgeendpointprofile_id, opts = {})
      delete_bridge_endpoint_profile_with_http_info(bridgeendpointprofile_id, opts)
      nil
    end

    # Delete a Bridge Endpoint Profile
    # Deletes the specified Bridge Endpoint Profile.
    # @param bridgeendpointprofile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_bridge_endpoint_profile_with_http_info(bridgeendpointprofile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.delete_bridge_endpoint_profile ...'
      end
      # verify the required parameter 'bridgeendpointprofile_id' is set
      if @api_client.config.client_side_validation && bridgeendpointprofile_id.nil?
        fail ArgumentError, "Missing the required parameter 'bridgeendpointprofile_id' when calling ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.delete_bridge_endpoint_profile"
      end
      # resource path
      local_var_path = '/bridge-endpoint-profiles/{bridgeendpointprofile-id}'.sub('{' + 'bridgeendpointprofile-id' + '}', bridgeendpointprofile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi#delete_bridge_endpoint_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Information about a bridge endpoint Profile
    # Returns information about a specified bridge endpoint profile.
    # @param bridgeendpointprofile_id 
    # @param [Hash] opts the optional parameters
    # @return [BridgeEndpointProfile]
    def get_bridge_endpoint_profile(bridgeendpointprofile_id, opts = {})
      data, _status_code, _headers = get_bridge_endpoint_profile_with_http_info(bridgeendpointprofile_id, opts)
      data
    end

    # Get Information about a bridge endpoint Profile
    # Returns information about a specified bridge endpoint profile.
    # @param bridgeendpointprofile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BridgeEndpointProfile, Fixnum, Hash)>] BridgeEndpointProfile data, response status code and response headers
    def get_bridge_endpoint_profile_with_http_info(bridgeendpointprofile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.get_bridge_endpoint_profile ...'
      end
      # verify the required parameter 'bridgeendpointprofile_id' is set
      if @api_client.config.client_side_validation && bridgeendpointprofile_id.nil?
        fail ArgumentError, "Missing the required parameter 'bridgeendpointprofile_id' when calling ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.get_bridge_endpoint_profile"
      end
      # resource path
      local_var_path = '/bridge-endpoint-profiles/{bridgeendpointprofile-id}'.sub('{' + 'bridgeendpointprofile-id' + '}', bridgeendpointprofile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BridgeEndpointProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi#get_bridge_endpoint_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List All Bridge Endpoint Profiles
    # Returns information about all configured bridge endoint profiles 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_cluster_id Edge Cluster Identifier
    # @option opts [String] :failover_mode 
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BridgeEndpointProfileListResult]
    def list_bridge_endpoint_profiles(opts = {})
      data, _status_code, _headers = list_bridge_endpoint_profiles_with_http_info(opts)
      data
    end

    # List All Bridge Endpoint Profiles
    # Returns information about all configured bridge endoint profiles 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_cluster_id Edge Cluster Identifier
    # @option opts [String] :failover_mode 
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BridgeEndpointProfileListResult, Fixnum, Hash)>] BridgeEndpointProfileListResult data, response status code and response headers
    def list_bridge_endpoint_profiles_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.list_bridge_endpoint_profiles ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.list_bridge_endpoint_profiles, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.list_bridge_endpoint_profiles, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/bridge-endpoint-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_cluster_id'] = opts[:'edge_cluster_id'] if !opts[:'edge_cluster_id'].nil?
      query_params[:'failover_mode'] = opts[:'failover_mode'] if !opts[:'failover_mode'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BridgeEndpointProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi#list_bridge_endpoint_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update a Bridge Endpoint Profile
    # Modifies a existing bridge endpoint profile. 
    # @param bridgeendpointprofile_id 
    # @param bridge_endpoint_profile 
    # @param [Hash] opts the optional parameters
    # @return [BridgeEndpointProfile]
    def update_bridge_endpoint_profile(bridgeendpointprofile_id, bridge_endpoint_profile, opts = {})
      data, _status_code, _headers = update_bridge_endpoint_profile_with_http_info(bridgeendpointprofile_id, bridge_endpoint_profile, opts)
      data
    end

    # Update a Bridge Endpoint Profile
    # Modifies a existing bridge endpoint profile. 
    # @param bridgeendpointprofile_id 
    # @param bridge_endpoint_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BridgeEndpointProfile, Fixnum, Hash)>] BridgeEndpointProfile data, response status code and response headers
    def update_bridge_endpoint_profile_with_http_info(bridgeendpointprofile_id, bridge_endpoint_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.update_bridge_endpoint_profile ...'
      end
      # verify the required parameter 'bridgeendpointprofile_id' is set
      if @api_client.config.client_side_validation && bridgeendpointprofile_id.nil?
        fail ArgumentError, "Missing the required parameter 'bridgeendpointprofile_id' when calling ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.update_bridge_endpoint_profile"
      end
      # verify the required parameter 'bridge_endpoint_profile' is set
      if @api_client.config.client_side_validation && bridge_endpoint_profile.nil?
        fail ArgumentError, "Missing the required parameter 'bridge_endpoint_profile' when calling ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi.update_bridge_endpoint_profile"
      end
      # resource path
      local_var_path = '/bridge-endpoint-profiles/{bridgeendpointprofile-id}'.sub('{' + 'bridgeendpointprofile-id' + '}', bridgeendpointprofile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bridge_endpoint_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BridgeEndpointProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementPlaneApiNetworkTransportBridgeEndpointProfilesApi#update_bridge_endpoint_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
