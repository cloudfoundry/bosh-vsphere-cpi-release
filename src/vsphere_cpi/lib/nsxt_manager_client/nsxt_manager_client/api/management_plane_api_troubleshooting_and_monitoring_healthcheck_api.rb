=begin
#NSX-T Manager API

#VMware NSX-T Manager REST API

OpenAPI spec version: 2.5.1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'uri'

module NSXT
  class ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a new manual health check request
    # Create a new manual health check request with essential properties. It's disallowed to create new one until the count of in-progress manual health check is less than 50. A manual health check will be deleted automatically after finished for 24 hours. 
    # @param manual_health_check 
    # @param [Hash] opts the optional parameters
    # @return [ManualHealthCheck]
    def create_manual_health_check(manual_health_check, opts = {})
      data, _status_code, _headers = create_manual_health_check_with_http_info(manual_health_check, opts)
      data
    end

    # Create a new manual health check request
    # Create a new manual health check request with essential properties. It&#39;s disallowed to create new one until the count of in-progress manual health check is less than 50. A manual health check will be deleted automatically after finished for 24 hours. 
    # @param manual_health_check 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ManualHealthCheck, Fixnum, Hash)>] ManualHealthCheck data, response status code and response headers
    def create_manual_health_check_with_http_info(manual_health_check, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi.create_manual_health_check ...'
      end
      # verify the required parameter 'manual_health_check' is set
      if @api_client.config.client_side_validation && manual_health_check.nil?
        fail ArgumentError, "Missing the required parameter 'manual_health_check' when calling ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi.create_manual_health_check"
      end
      # resource path
      local_var_path = '/manual-health-checks'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(manual_health_check)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ManualHealthCheck')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi#create_manual_health_check\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete an existing manual health check
    # Delete an existing manual health check by ID.
    # @param manual_health_check_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_manual_health_check(manual_health_check_id, opts = {})
      delete_manual_health_check_with_http_info(manual_health_check_id, opts)
      nil
    end

    # Delete an existing manual health check
    # Delete an existing manual health check by ID.
    # @param manual_health_check_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_manual_health_check_with_http_info(manual_health_check_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi.delete_manual_health_check ...'
      end
      # verify the required parameter 'manual_health_check_id' is set
      if @api_client.config.client_side_validation && manual_health_check_id.nil?
        fail ArgumentError, "Missing the required parameter 'manual_health_check_id' when calling ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi.delete_manual_health_check"
      end
      # resource path
      local_var_path = '/manual-health-checks/{manual-health-check-id}'.sub('{' + 'manual-health-check-id' + '}', manual_health_check_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi#delete_manual_health_check\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get an existing manual health check
    # Get an existing manual health check by health check ID.
    # @param manual_health_check_id 
    # @param [Hash] opts the optional parameters
    # @return [ManualHealthCheck]
    def get_manual_health_check(manual_health_check_id, opts = {})
      data, _status_code, _headers = get_manual_health_check_with_http_info(manual_health_check_id, opts)
      data
    end

    # Get an existing manual health check
    # Get an existing manual health check by health check ID.
    # @param manual_health_check_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ManualHealthCheck, Fixnum, Hash)>] ManualHealthCheck data, response status code and response headers
    def get_manual_health_check_with_http_info(manual_health_check_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi.get_manual_health_check ...'
      end
      # verify the required parameter 'manual_health_check_id' is set
      if @api_client.config.client_side_validation && manual_health_check_id.nil?
        fail ArgumentError, "Missing the required parameter 'manual_health_check_id' when calling ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi.get_manual_health_check"
      end
      # resource path
      local_var_path = '/manual-health-checks/{manual-health-check-id}'.sub('{' + 'manual-health-check-id' + '}', manual_health_check_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ManualHealthCheck')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi#get_manual_health_check\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List manual health checks
    # Query manual health checks with list parameters. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ManualHealthCheckListResult]
    def list_manual_health_checks(opts = {})
      data, _status_code, _headers = list_manual_health_checks_with_http_info(opts)
      data
    end

    # List manual health checks
    # Query manual health checks with list parameters. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ManualHealthCheckListResult, Fixnum, Hash)>] ManualHealthCheckListResult data, response status code and response headers
    def list_manual_health_checks_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi.list_manual_health_checks ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi.list_manual_health_checks, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi.list_manual_health_checks, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/manual-health-checks'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ManualHealthCheckListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManagementPlaneApiTroubleshootingAndMonitoringHealthcheckApi#list_manual_health_checks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
