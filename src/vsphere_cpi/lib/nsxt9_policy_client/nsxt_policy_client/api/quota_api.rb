=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'uri'

module Nsxt9PolicyClient
  class QuotaApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get quota details
    # Get quota details To create, update, list and delete the Quota, please refer to Constraint APIs with 'constraint_expressions' as 'EntityInstanceCountConstraintExpression'. 
    # @param org_id 
    # @param project_id 
    # @param path_prefix Path prefix for retriving the quota details.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :constraint_path Constraint path to retrive the quota details.
    # @return [QuotaStatsListResult]
    def get_quota_details(org_id, project_id, path_prefix, opts = {})
      data, _status_code, _headers = get_quota_details_with_http_info(org_id, project_id, path_prefix, opts)
      data
    end

    # Get quota details
    # Get quota details To create, update, list and delete the Quota, please refer to Constraint APIs with &#39;constraint_expressions&#39; as &#39;EntityInstanceCountConstraintExpression&#39;. 
    # @param org_id 
    # @param project_id 
    # @param path_prefix Path prefix for retriving the quota details.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :constraint_path Constraint path to retrive the quota details.
    # @return [Array<(QuotaStatsListResult, Fixnum, Hash)>] QuotaStatsListResult data, response status code and response headers
    def get_quota_details_with_http_info(org_id, project_id, path_prefix, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: QuotaApi.get_quota_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling QuotaApi.get_quota_details"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling QuotaApi.get_quota_details"
      end
      # verify the required parameter 'path_prefix' is set
      if @api_client.config.client_side_validation && path_prefix.nil?
        fail ArgumentError, "Missing the required parameter 'path_prefix' when calling QuotaApi.get_quota_details"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/quota-stats'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'path_prefix'] = path_prefix
      query_params[:'constraint_path'] = opts[:'constraint_path'] if !opts[:'constraint_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'QuotaStatsListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: QuotaApi#get_quota_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get quota details
    # Get quota details 
    # @param org_id 
    # @param project_id 
    # @param vpc_id 
    # @param path_prefix Path prefix for retriving the quota details.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :constraint_path Constraint path to retrive the quota details.
    # @return [QuotaStatsListResult]
    def get_vpc_quota_details(org_id, project_id, vpc_id, path_prefix, opts = {})
      data, _status_code, _headers = get_vpc_quota_details_with_http_info(org_id, project_id, vpc_id, path_prefix, opts)
      data
    end

    # Get quota details
    # Get quota details 
    # @param org_id 
    # @param project_id 
    # @param vpc_id 
    # @param path_prefix Path prefix for retriving the quota details.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :constraint_path Constraint path to retrive the quota details.
    # @return [Array<(QuotaStatsListResult, Fixnum, Hash)>] QuotaStatsListResult data, response status code and response headers
    def get_vpc_quota_details_with_http_info(org_id, project_id, vpc_id, path_prefix, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: QuotaApi.get_vpc_quota_details ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling QuotaApi.get_vpc_quota_details"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling QuotaApi.get_vpc_quota_details"
      end
      # verify the required parameter 'vpc_id' is set
      if @api_client.config.client_side_validation && vpc_id.nil?
        fail ArgumentError, "Missing the required parameter 'vpc_id' when calling QuotaApi.get_vpc_quota_details"
      end
      # verify the required parameter 'path_prefix' is set
      if @api_client.config.client_side_validation && path_prefix.nil?
        fail ArgumentError, "Missing the required parameter 'path_prefix' when calling QuotaApi.get_vpc_quota_details"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/vpcs/{vpc-id}/quota-stats'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'vpc-id' + '}', vpc_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'path_prefix'] = path_prefix
      query_params[:'constraint_path'] = opts[:'constraint_path'] if !opts[:'constraint_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'QuotaStatsListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: QuotaApi#get_vpc_quota_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
