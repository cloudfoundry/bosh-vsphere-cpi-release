=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'uri'

module Nsxt9PolicyClient
  class InventoryApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key. The values in the  request will be added or removed from the existing list. 
    # @param policy_custom_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def add_remove_custom_attribute(policy_custom_attributes, action, opts = {})
      add_remove_custom_attribute_with_http_info(policy_custom_attributes, action, opts)
      nil
    end

    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key. The values in the  request will be added or removed from the existing list. 
    # @param policy_custom_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def add_remove_custom_attribute_with_http_info(policy_custom_attributes, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.add_remove_custom_attribute ...'
      end
      # verify the required parameter 'policy_custom_attributes' is set
      if @api_client.config.client_side_validation && policy_custom_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_custom_attributes' when calling InventoryApi.add_remove_custom_attribute"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.add_remove_custom_attribute"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/infra/context-profiles/custom-attributes/default'

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_custom_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#add_remove_custom_attribute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key.  <br> This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default to Adds/Removes custom attribute values from list 
    # @param policy_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def add_remove_custom_attribute_values(policy_attributes, action, opts = {})
      add_remove_custom_attribute_values_with_http_info(policy_attributes, action, opts)
      nil
    end

    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key.  &lt;br&gt; This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default to Adds/Removes custom attribute values from list 
    # @param policy_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def add_remove_custom_attribute_values_with_http_info(policy_attributes, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.add_remove_custom_attribute_values ...'
      end
      # verify the required parameter 'policy_attributes' is set
      if @api_client.config.client_side_validation && policy_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_attributes' when calling InventoryApi.add_remove_custom_attribute_values"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.add_remove_custom_attribute_values"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/infra/context-profiles/custom-attributes'

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#add_remove_custom_attribute_values\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add or Remove external id based members from/to a Group 
    # It will add or remove the specified members having external ID for a given expression of a group. 
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param group_member_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def addor_remove_group_external_id_members(domain_id, group_id, expression_id, group_member_list, action, opts = {})
      addor_remove_group_external_id_members_with_http_info(domain_id, group_id, expression_id, group_member_list, action, opts)
      nil
    end

    # Add or Remove external id based members from/to a Group 
    # It will add or remove the specified members having external ID for a given expression of a group. 
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param group_member_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def addor_remove_group_external_id_members_with_http_info(domain_id, group_id, expression_id, group_member_list, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.addor_remove_group_external_id_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.addor_remove_group_external_id_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.addor_remove_group_external_id_members"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.addor_remove_group_external_id_members"
      end
      # verify the required parameter 'group_member_list' is set
      if @api_client.config.client_side_validation && group_member_list.nil?
        fail ArgumentError, "Missing the required parameter 'group_member_list' when calling InventoryApi.addor_remove_group_external_id_members"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.addor_remove_group_external_id_members"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/external-id-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(group_member_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#addor_remove_group_external_id_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add or Remove IP Addresses from/to a Group 
    # It will add or remove the specified IP Addresses from a given expression of a group. 
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param ip_address_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def addor_remove_group_ip_addresses(domain_id, group_id, expression_id, ip_address_list, action, opts = {})
      addor_remove_group_ip_addresses_with_http_info(domain_id, group_id, expression_id, ip_address_list, action, opts)
      nil
    end

    # Add or Remove IP Addresses from/to a Group 
    # It will add or remove the specified IP Addresses from a given expression of a group. 
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param ip_address_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def addor_remove_group_ip_addresses_with_http_info(domain_id, group_id, expression_id, ip_address_list, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.addor_remove_group_ip_addresses ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.addor_remove_group_ip_addresses"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.addor_remove_group_ip_addresses"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.addor_remove_group_ip_addresses"
      end
      # verify the required parameter 'ip_address_list' is set
      if @api_client.config.client_side_validation && ip_address_list.nil?
        fail ArgumentError, "Missing the required parameter 'ip_address_list' when calling InventoryApi.addor_remove_group_ip_addresses"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.addor_remove_group_ip_addresses"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/ip-address-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ip_address_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#addor_remove_group_ip_addresses\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add or Remove MAC Addresses from/to a Group 
    # It will add or remove the specified MAC Addresses from a given expression of a group. 
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param mac_address_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def addor_remove_group_mac_addresses(domain_id, group_id, expression_id, mac_address_list, action, opts = {})
      addor_remove_group_mac_addresses_with_http_info(domain_id, group_id, expression_id, mac_address_list, action, opts)
      nil
    end

    # Add or Remove MAC Addresses from/to a Group 
    # It will add or remove the specified MAC Addresses from a given expression of a group. 
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param mac_address_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def addor_remove_group_mac_addresses_with_http_info(domain_id, group_id, expression_id, mac_address_list, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.addor_remove_group_mac_addresses ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.addor_remove_group_mac_addresses"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.addor_remove_group_mac_addresses"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.addor_remove_group_mac_addresses"
      end
      # verify the required parameter 'mac_address_list' is set
      if @api_client.config.client_side_validation && mac_address_list.nil?
        fail ArgumentError, "Missing the required parameter 'mac_address_list' when calling InventoryApi.addor_remove_group_mac_addresses"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.addor_remove_group_mac_addresses"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/mac-address-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(mac_address_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#addor_remove_group_mac_addresses\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add or Remove path based members from/to a Group 
    # It will add or remove the specified members having path for a given expression of a group. 
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param group_member_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def addor_remove_group_path_members(domain_id, group_id, expression_id, group_member_list, action, opts = {})
      addor_remove_group_path_members_with_http_info(domain_id, group_id, expression_id, group_member_list, action, opts)
      nil
    end

    # Add or Remove path based members from/to a Group 
    # It will add or remove the specified members having path for a given expression of a group. 
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param group_member_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def addor_remove_group_path_members_with_http_info(domain_id, group_id, expression_id, group_member_list, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.addor_remove_group_path_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.addor_remove_group_path_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.addor_remove_group_path_members"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.addor_remove_group_path_members"
      end
      # verify the required parameter 'group_member_list' is set
      if @api_client.config.client_side_validation && group_member_list.nil?
        fail ArgumentError, "Missing the required parameter 'group_member_list' when calling InventoryApi.addor_remove_group_path_members"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.addor_remove_group_path_members"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/path-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(group_member_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#addor_remove_group_path_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Apply tags on bare metal server
    # Allows an admin to apply multiple tags to a bare metal server. This operation does not store the intent on the policy side. This operation will replace the existing tags on the bare metal server with the ones that have been passed. If the application of tag fails, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g constraints like max tags limit exceeded, etc. 
    # @param bare_metal_server_tag_list 
    # @param [Hash] opts the optional parameters
    # @return [BareMetalServerTagList]
    def apply_tag_on_bare_metal_server(bare_metal_server_tag_list, opts = {})
      data, _status_code, _headers = apply_tag_on_bare_metal_server_with_http_info(bare_metal_server_tag_list, opts)
      data
    end

    # Apply tags on bare metal server
    # Allows an admin to apply multiple tags to a bare metal server. This operation does not store the intent on the policy side. This operation will replace the existing tags on the bare metal server with the ones that have been passed. If the application of tag fails, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g constraints like max tags limit exceeded, etc. 
    # @param bare_metal_server_tag_list 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BareMetalServerTagList, Fixnum, Hash)>] BareMetalServerTagList data, response status code and response headers
    def apply_tag_on_bare_metal_server_with_http_info(bare_metal_server_tag_list, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.apply_tag_on_bare_metal_server ...'
      end
      # verify the required parameter 'bare_metal_server_tag_list' is set
      if @api_client.config.client_side_validation && bare_metal_server_tag_list.nil?
        fail ArgumentError, "Missing the required parameter 'bare_metal_server_tag_list' when calling InventoryApi.apply_tag_on_bare_metal_server"
      end
      # resource path
      local_var_path = '/infra/baremetal-servers/tags'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bare_metal_server_tag_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BareMetalServerTagList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#apply_tag_on_bare_metal_server\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Apply tags on bare metal server interface
    # Allows an admin to apply multiple tags to a bare metal server interface. This operation does not store the intent on the policy side. This operation will replace the existing tags on the bare metal server interface with the ones that have been passed. If the application of tag fails, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g constraints like max tags limit exceeded, etc. 
    # @param bare_metal_server_interface_tag_list 
    # @param [Hash] opts the optional parameters
    # @return [BareMetalServerInterfaceTagList]
    def apply_tag_on_bare_metal_server_interface(bare_metal_server_interface_tag_list, opts = {})
      data, _status_code, _headers = apply_tag_on_bare_metal_server_interface_with_http_info(bare_metal_server_interface_tag_list, opts)
      data
    end

    # Apply tags on bare metal server interface
    # Allows an admin to apply multiple tags to a bare metal server interface. This operation does not store the intent on the policy side. This operation will replace the existing tags on the bare metal server interface with the ones that have been passed. If the application of tag fails, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g constraints like max tags limit exceeded, etc. 
    # @param bare_metal_server_interface_tag_list 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BareMetalServerInterfaceTagList, Fixnum, Hash)>] BareMetalServerInterfaceTagList data, response status code and response headers
    def apply_tag_on_bare_metal_server_interface_with_http_info(bare_metal_server_interface_tag_list, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.apply_tag_on_bare_metal_server_interface ...'
      end
      # verify the required parameter 'bare_metal_server_interface_tag_list' is set
      if @api_client.config.client_side_validation && bare_metal_server_interface_tag_list.nil?
        fail ArgumentError, "Missing the required parameter 'bare_metal_server_interface_tag_list' when calling InventoryApi.apply_tag_on_bare_metal_server_interface"
      end
      # resource path
      local_var_path = '/infra/baremetal-server-interfaces/tags'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bare_metal_server_interface_tag_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BareMetalServerInterfaceTagList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#apply_tag_on_bare_metal_server_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Apply tags on virtual machine
    # Allows an admin to apply multiple tags to a virtual machine. This operation does not store the intent on the policy side. It applies the tag directly on the specified enforcement point. This operation will replace the existing tags on the virtual machine with the ones that have been passed. If the application of tag fails on the enforcement point, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g enforcement point is down, Enforcement point could not apply the tag due to constraints like max tags limit exceeded, etc. NOTE: The \"virtual_machine_id\" field in the payload will be ignored and the virtual machine ID provided in the URL will be honored. 
    # @param virtual_machine_id 
    # @param virtual_machine_tags_update 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [nil]
    def apply_tag_on_virtual_machine(virtual_machine_id, virtual_machine_tags_update, opts = {})
      apply_tag_on_virtual_machine_with_http_info(virtual_machine_id, virtual_machine_tags_update, opts)
      nil
    end

    # Apply tags on virtual machine
    # Allows an admin to apply multiple tags to a virtual machine. This operation does not store the intent on the policy side. It applies the tag directly on the specified enforcement point. This operation will replace the existing tags on the virtual machine with the ones that have been passed. If the application of tag fails on the enforcement point, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g enforcement point is down, Enforcement point could not apply the tag due to constraints like max tags limit exceeded, etc. NOTE: The \&quot;virtual_machine_id\&quot; field in the payload will be ignored and the virtual machine ID provided in the URL will be honored. 
    # @param virtual_machine_id 
    # @param virtual_machine_tags_update 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def apply_tag_on_virtual_machine_with_http_info(virtual_machine_id, virtual_machine_tags_update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.apply_tag_on_virtual_machine ...'
      end
      # verify the required parameter 'virtual_machine_id' is set
      if @api_client.config.client_side_validation && virtual_machine_id.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_machine_id' when calling InventoryApi.apply_tag_on_virtual_machine"
      end
      # verify the required parameter 'virtual_machine_tags_update' is set
      if @api_client.config.client_side_validation && virtual_machine_tags_update.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_machine_tags_update' when calling InventoryApi.apply_tag_on_virtual_machine"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.apply_tag_on_virtual_machine, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.apply_tag_on_virtual_machine, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/realized-state/virtual-machines/{virtual-machine-id}/tags'.sub('{' + 'virtual-machine-id' + '}', virtual_machine_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(virtual_machine_tags_update)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#apply_tag_on_virtual_machine\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update Group under specified Tier-0
    # If a Group with the group-id is not already present, create a new Group under the tier-0-id. Update if exists. The API valiates that Tier-0 is present before creating the Group. 
    # @param tier_0_id 
    # @param group_id 
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [Group]
    def create_or_replace_tier0_group(tier_0_id, group_id, group, opts = {})
      data, _status_code, _headers = create_or_replace_tier0_group_with_http_info(tier_0_id, group_id, group, opts)
      data
    end

    # Create or update Group under specified Tier-0
    # If a Group with the group-id is not already present, create a new Group under the tier-0-id. Update if exists. The API valiates that Tier-0 is present before creating the Group. 
    # @param tier_0_id 
    # @param group_id 
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Group, Fixnum, Hash)>] Group data, response status code and response headers
    def create_or_replace_tier0_group_with_http_info(tier_0_id, group_id, group, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.create_or_replace_tier0_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.create_or_replace_tier0_group"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.create_or_replace_tier0_group"
      end
      # verify the required parameter 'group' is set
      if @api_client.config.client_side_validation && group.nil?
        fail ArgumentError, "Missing the required parameter 'group' when calling InventoryApi.create_or_replace_tier0_group"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/groups/{group-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(group)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Group')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#create_or_replace_tier0_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create L7 Access Profile entry
    # API will create L7 Access Profile entry
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param l7_access_entry 
    # @param [Hash] opts the optional parameters
    # @return [L7AccessEntry]
    def create_or_update_l7_access_entry(l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts = {})
      data, _status_code, _headers = create_or_update_l7_access_entry_with_http_info(l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts)
      data
    end

    # Create L7 Access Profile entry
    # API will create L7 Access Profile entry
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param l7_access_entry 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L7AccessEntry, Fixnum, Hash)>] L7AccessEntry data, response status code and response headers
    def create_or_update_l7_access_entry_with_http_info(l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.create_or_update_l7_access_entry ...'
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.create_or_update_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry_id' is set
      if @api_client.config.client_side_validation && l7_access_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry_id' when calling InventoryApi.create_or_update_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry' is set
      if @api_client.config.client_side_validation && l7_access_entry.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry' when calling InventoryApi.create_or_update_l7_access_entry"
      end
      # resource path
      local_var_path = '/infra/l7-access-profiles/{l7-access-profile-id}/entries/{l7-access-entry-id}'.sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s).sub('{' + 'l7-access-entry-id' + '}', l7_access_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l7_access_entry)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#create_or_update_l7_access_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update L7 Access Profile
    # API will update L7 Access Profile
    # @param l7_access_profile_id 
    # @param l7_access_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [L7AccessProfile]
    def create_or_update_l7_access_profile(l7_access_profile_id, l7_access_profile, opts = {})
      data, _status_code, _headers = create_or_update_l7_access_profile_with_http_info(l7_access_profile_id, l7_access_profile, opts)
      data
    end

    # Update L7 Access Profile
    # API will update L7 Access Profile
    # @param l7_access_profile_id 
    # @param l7_access_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(L7AccessProfile, Fixnum, Hash)>] L7AccessProfile data, response status code and response headers
    def create_or_update_l7_access_profile_with_http_info(l7_access_profile_id, l7_access_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.create_or_update_l7_access_profile ...'
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.create_or_update_l7_access_profile"
      end
      # verify the required parameter 'l7_access_profile' is set
      if @api_client.config.client_side_validation && l7_access_profile.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile' when calling InventoryApi.create_or_update_l7_access_profile"
      end
      # resource path
      local_var_path = '/infra/l7-access-profiles/{l7-access-profile-id}'.sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l7_access_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#create_or_update_l7_access_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update static mime content id
    # API will create/update static mime content id
    # @param static_mime_content_id static mime content id
    # @param static_mime_content 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [StaticMimeContent]
    def create_or_update_policy_static_mime_content(static_mime_content_id, static_mime_content, opts = {})
      data, _status_code, _headers = create_or_update_policy_static_mime_content_with_http_info(static_mime_content_id, static_mime_content, opts)
      data
    end

    # Update static mime content id
    # API will create/update static mime content id
    # @param static_mime_content_id static mime content id
    # @param static_mime_content 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(StaticMimeContent, Fixnum, Hash)>] StaticMimeContent data, response status code and response headers
    def create_or_update_policy_static_mime_content_with_http_info(static_mime_content_id, static_mime_content, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.create_or_update_policy_static_mime_content ...'
      end
      # verify the required parameter 'static_mime_content_id' is set
      if @api_client.config.client_side_validation && static_mime_content_id.nil?
        fail ArgumentError, "Missing the required parameter 'static_mime_content_id' when calling InventoryApi.create_or_update_policy_static_mime_content"
      end
      # verify the required parameter 'static_mime_content' is set
      if @api_client.config.client_side_validation && static_mime_content.nil?
        fail ArgumentError, "Missing the required parameter 'static_mime_content' when calling InventoryApi.create_or_update_policy_static_mime_content"
      end
      # resource path
      local_var_path = '/infra/static-mime-contents/{static-mime-content-id}'.sub('{' + 'static-mime-content-id' + '}', static_mime_content_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_mime_content)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticMimeContent')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#create_or_update_policy_static_mime_content\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Group
    # Delete the group with group_id under domain domain_id. The force query parameter supported on the API is deprecated. Usage of the force query parameter does not alter the behaviour of the API. The API just ignores the force parameter. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :fail_if_subtree_exists Do not delete if the group subtree has any entities (default to false)
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere  (default to false)
    # @return [nil]
    def delete_group(domain_id, group_id, opts = {})
      delete_group_with_http_info(domain_id, group_id, opts)
      nil
    end

    # Delete Group
    # Delete the group with group_id under domain domain_id. The force query parameter supported on the API is deprecated. Usage of the force query parameter does not alter the behaviour of the API. The API just ignores the force parameter. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :fail_if_subtree_exists Do not delete if the group subtree has any entities
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere 
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_group_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_group ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.delete_group"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.delete_group"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'fail_if_subtree_exists'] = opts[:'fail_if_subtree_exists'] if !opts[:'fail_if_subtree_exists'].nil?
      query_params[:'force'] = opts[:'force'] if !opts[:'force'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Group External ID Expression
    # Delete Group External ID Expression
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id ExternalIDExpression ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_group_external_id_expression(domain_id, group_id, expression_id, opts = {})
      delete_group_external_id_expression_with_http_info(domain_id, group_id, expression_id, opts)
      nil
    end

    # Delete Group External ID Expression
    # Delete Group External ID Expression
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id ExternalIDExpression ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_group_external_id_expression_with_http_info(domain_id, group_id, expression_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_group_external_id_expression ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.delete_group_external_id_expression"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.delete_group_external_id_expression"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.delete_group_external_id_expression"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/external-id-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_group_external_id_expression\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Group IPAddressExpression
    # Delete Group IPAddressExpression
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id IPAddressExpression ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_group_ip_address_expression(domain_id, group_id, expression_id, opts = {})
      delete_group_ip_address_expression_with_http_info(domain_id, group_id, expression_id, opts)
      nil
    end

    # Delete Group IPAddressExpression
    # Delete Group IPAddressExpression
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id IPAddressExpression ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_group_ip_address_expression_with_http_info(domain_id, group_id, expression_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_group_ip_address_expression ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.delete_group_ip_address_expression"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.delete_group_ip_address_expression"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.delete_group_ip_address_expression"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/ip-address-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_group_ip_address_expression\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Group MACAddressExpression
    # Delete Group MACAddressExpression
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id MACAddressExpression ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_group_mac_address_expression(domain_id, group_id, expression_id, opts = {})
      delete_group_mac_address_expression_with_http_info(domain_id, group_id, expression_id, opts)
      nil
    end

    # Delete Group MACAddressExpression
    # Delete Group MACAddressExpression
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id MACAddressExpression ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_group_mac_address_expression_with_http_info(domain_id, group_id, expression_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_group_mac_address_expression ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.delete_group_mac_address_expression"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.delete_group_mac_address_expression"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.delete_group_mac_address_expression"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/mac-address-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_group_mac_address_expression\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Group Path Expression
    # Delete Group Path Expression
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id PathExpression ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_group_path_expression(domain_id, group_id, expression_id, opts = {})
      delete_group_path_expression_with_http_info(domain_id, group_id, expression_id, opts)
      nil
    end

    # Delete Group Path Expression
    # Delete Group Path Expression
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id PathExpression ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_group_path_expression_with_http_info(domain_id, group_id, expression_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_group_path_expression ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.delete_group_path_expression"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.delete_group_path_expression"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.delete_group_path_expression"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/path-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_group_path_expression\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete L7 Access Profile entry
    # API will delete L7 Access Profile entry
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def delete_l7_access_entry(l7_access_profile_id, l7_access_entry_id, opts = {})
      delete_l7_access_entry_with_http_info(l7_access_profile_id, l7_access_entry_id, opts)
      nil
    end

    # Delete L7 Access Profile entry
    # API will delete L7 Access Profile entry
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_l7_access_entry_with_http_info(l7_access_profile_id, l7_access_entry_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_l7_access_entry ...'
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.delete_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry_id' is set
      if @api_client.config.client_side_validation && l7_access_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry_id' when calling InventoryApi.delete_l7_access_entry"
      end
      # resource path
      local_var_path = '/infra/l7-access-profiles/{l7-access-profile-id}/entries/{l7-access-entry-id}'.sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s).sub('{' + 'l7-access-entry-id' + '}', l7_access_entry_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_l7_access_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete L7 Access Profile
    # API will delete L7 Access Profile
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def delete_l7_access_profile(l7_access_profile_id, opts = {})
      delete_l7_access_profile_with_http_info(l7_access_profile_id, opts)
      nil
    end

    # Delete L7 Access Profile
    # API will delete L7 Access Profile
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_l7_access_profile_with_http_info(l7_access_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_l7_access_profile ...'
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.delete_l7_access_profile"
      end
      # resource path
      local_var_path = '/infra/l7-access-profiles/{l7-access-profile-id}'.sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_l7_access_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Policy Context Profile
    # Deletes the specified Policy Context Profile. If the Policy Context Profile is consumed in a firewall rule, it won't get deleted. 
    # @param context_profile_id Policy Context Profile Id
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere  (default to false)
    # @option opts [BOOLEAN] :override Delete the locally overridden global object (default to false)
    # @return [nil]
    def delete_policy_context_profile(context_profile_id, opts = {})
      delete_policy_context_profile_with_http_info(context_profile_id, opts)
      nil
    end

    # Delete Policy Context Profile
    # Deletes the specified Policy Context Profile. If the Policy Context Profile is consumed in a firewall rule, it won&#39;t get deleted. 
    # @param context_profile_id Policy Context Profile Id
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere 
    # @option opts [BOOLEAN] :override Delete the locally overridden global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_context_profile_with_http_info(context_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.delete_policy_context_profile"
      end
      # resource path
      local_var_path = '/infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'force'] = opts[:'force'] if !opts[:'force'].nil?
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete static Mime content
    # API will delete static mime content
    # @param static_mime_content_id Static mime content id
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def delete_policy_static_mime_content(static_mime_content_id, opts = {})
      delete_policy_static_mime_content_with_http_info(static_mime_content_id, opts)
      nil
    end

    # Delete static Mime content
    # API will delete static mime content
    # @param static_mime_content_id Static mime content id
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_static_mime_content_with_http_info(static_mime_content_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_policy_static_mime_content ...'
      end
      # verify the required parameter 'static_mime_content_id' is set
      if @api_client.config.client_side_validation && static_mime_content_id.nil?
        fail ArgumentError, "Missing the required parameter 'static_mime_content_id' when calling InventoryApi.delete_policy_static_mime_content"
      end
      # resource path
      local_var_path = '/infra/static-mime-contents/{static-mime-content-id}'.sub('{' + 'static-mime-content-id' + '}', static_mime_content_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_policy_static_mime_content\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Service entry
    # Delete Service entry
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_service_entry(service_id, service_entry_id, opts = {})
      delete_service_entry_with_http_info(service_id, service_entry_id, opts)
      nil
    end

    # Delete Service entry
    # Delete Service entry
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_service_entry_with_http_info(service_id, service_entry_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_service_entry ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.delete_service_entry"
      end
      # verify the required parameter 'service_entry_id' is set
      if @api_client.config.client_side_validation && service_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry_id' when calling InventoryApi.delete_service_entry"
      end
      # resource path
      local_var_path = '/infra/services/{service-id}/service-entries/{service-entry-id}'.sub('{' + 'service-id' + '}', service_id.to_s).sub('{' + 'service-entry-id' + '}', service_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_service_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Service
    # Delete Service
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_service_for_tenant(service_id, opts = {})
      delete_service_for_tenant_with_http_info(service_id, opts)
      nil
    end

    # Delete Service
    # Delete Service
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_service_for_tenant_with_http_info(service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_service_for_tenant ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.delete_service_for_tenant"
      end
      # resource path
      local_var_path = '/infra/services/{service-id}'.sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_service_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Deletes Group under Tier-0
    # Delete the Group under Tier-0. 
    # @param tier_0_id 
    # @param group_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tier0_group(tier_0_id, group_id, opts = {})
      delete_tier0_group_with_http_info(tier_0_id, group_id, opts)
      nil
    end

    # Deletes Group under Tier-0
    # Delete the Group under Tier-0. 
    # @param tier_0_id 
    # @param group_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tier0_group_with_http_info(tier_0_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.delete_tier0_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.delete_tier0_group"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.delete_tier0_group"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/groups/{group-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#delete_tier0_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieves custom attribute values for given attribute key
    # This API lists all the custom attribute values defined in the system for the attribute_key mentioned as part of the url. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom (default to SYSTEM)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def get_custom_attribute(opts = {})
      data, _status_code, _headers = get_custom_attribute_with_http_info(opts)
      data
    end

    # Retrieves custom attribute values for given attribute key
    # This API lists all the custom attribute values defined in the system for the attribute_key mentioned as part of the url. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def get_custom_attribute_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_custom_attribute ...'
      end
      if @api_client.config.client_side_validation && opts[:'attribute_source'] && !['ALL', 'CUSTOM', 'SYSTEM'].include?(opts[:'attribute_source'])
        fail ArgumentError, 'invalid value for "attribute_source", must be one of ALL, CUSTOM, SYSTEM'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_custom_attribute, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_custom_attribute, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/context-profiles/custom-attributes/default'

      # query parameters
      query_params = {}
      query_params[:'attribute_key'] = opts[:'attribute_key'] if !opts[:'attribute_key'].nil?
      query_params[:'attribute_source'] = opts[:'attribute_source'] if !opts[:'attribute_source'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_custom_attribute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get antrea egresses that belong to this Group
    # Get antrea egresses that belong to this Group. This API is applicable for Groups containing AntreaEgress member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupAntreaEgressListResult]
    def get_group_antrea_egress_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_antrea_egress_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get antrea egresses that belong to this Group
    # Get antrea egresses that belong to this Group. This API is applicable for Groups containing AntreaEgress member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupAntreaEgressListResult, Fixnum, Hash)>] PolicyGroupAntreaEgressListResult data, response status code and response headers
    def get_group_antrea_egress_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_antrea_egress_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_antrea_egress_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_antrea_egress_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_antrea_egress_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_antrea_egress_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/antrea-egresses'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cluster_id'] = opts[:'cluster_id'] if !opts[:'cluster_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupAntreaEgressListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_antrea_egress_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get antrea ippools that belong to this Group
    # Get antrea ippools that belong to this Group. This API is applicable for Groups containing AntreaIPPool member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupAntreaIPPoolListResult]
    def get_group_antrea_ip_pool_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_antrea_ip_pool_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get antrea ippools that belong to this Group
    # Get antrea ippools that belong to this Group. This API is applicable for Groups containing AntreaIPPool member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupAntreaIPPoolListResult, Fixnum, Hash)>] PolicyGroupAntreaIPPoolListResult data, response status code and response headers
    def get_group_antrea_ip_pool_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_antrea_ip_pool_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_antrea_ip_pool_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_antrea_ip_pool_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_antrea_ip_pool_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_antrea_ip_pool_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/antrea-ip-pools'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cluster_id'] = opts[:'cluster_id'] if !opts[:'cluster_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupAntreaIPPoolListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_antrea_ip_pool_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get associated kubernetes clusters for given group
    # Get list of clusters associated to this Group. This API is applicable for Groups containing kubernetes resources. For Groups containing other member types an empty list is returned. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupAssociatedKubernetesClusterListResult]
    def get_group_associated_kubernetes_clusters(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_associated_kubernetes_clusters_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get associated kubernetes clusters for given group
    # Get list of clusters associated to this Group. This API is applicable for Groups containing kubernetes resources. For Groups containing other member types an empty list is returned. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupAssociatedKubernetesClusterListResult, Fixnum, Hash)>] PolicyGroupAssociatedKubernetesClusterListResult data, response status code and response headers
    def get_group_associated_kubernetes_clusters_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_associated_kubernetes_clusters ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_associated_kubernetes_clusters"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_associated_kubernetes_clusters"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_associated_kubernetes_clusters, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_associated_kubernetes_clusters, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/associated-kubernetes-clusters'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupAssociatedKubernetesClusterListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_associated_kubernetes_clusters\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Effective Bare Metal Servers(BMS) that belong to this group.
    # Returns Effective Bare metal servers(BMS) that belong to this group. This API is applicable only for Groups containing BMS member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BareMetalServerListResult]
    def get_group_bms_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_bms_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Effective Bare Metal Servers(BMS) that belong to this group.
    # Returns Effective Bare metal servers(BMS) that belong to this group. This API is applicable only for Groups containing BMS member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BareMetalServerListResult, Fixnum, Hash)>] BareMetalServerListResult data, response status code and response headers
    def get_group_bms_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_bms_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_bms_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_bms_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_bms_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_bms_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/bms'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BareMetalServerListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_bms_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Effective Bare Metal Server Interfaces(BMSI) that belong to this group.
    # Returns Effective Bare metal server interfaces (BMSI) that belong to this group. This API is applicable only for Groups containing BMSI member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BareMetalServerInterfaceListResult]
    def get_group_bmsi_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_bmsi_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Effective Bare Metal Server Interfaces(BMSI) that belong to this group.
    # Returns Effective Bare metal server interfaces (BMSI) that belong to this group. This API is applicable only for Groups containing BMSI member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BareMetalServerInterfaceListResult, Fixnum, Hash)>] BareMetalServerInterfaceListResult data, response status code and response headers
    def get_group_bmsi_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_bmsi_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_bmsi_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_bmsi_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_bmsi_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_bmsi_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/bmsi'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BareMetalServerInterfaceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_bmsi_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Effective Cloud Native Service Instances that belong to this group.
    # Returns Effective Cloud Native Service Instances that belong to this group. This API is applicable only for Groups containing CloudNativeServiceInstance member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def get_group_cloud_native_service_instances(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_cloud_native_service_instances_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Effective Cloud Native Service Instances that belong to this group.
    # Returns Effective Cloud Native Service Instances that belong to this group. This API is applicable only for Groups containing CloudNativeServiceInstance member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def get_group_cloud_native_service_instances_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_cloud_native_service_instances ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_cloud_native_service_instances"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_cloud_native_service_instances"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_cloud_native_service_instances, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_cloud_native_service_instances, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/cloud-native-service-instances'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_cloud_native_service_instances\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get discovered ports that belong to this Group
    # Get discovered ports that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def get_group_discovered_port_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_discovered_port_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get discovered ports that belong to this Group
    # Get discovered ports that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def get_group_discovered_port_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_discovered_port_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_discovered_port_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_discovered_port_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_discovered_port_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_discovered_port_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/dvports'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_discovered_port_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Discovered Port Groups that belong to this Group
    # Get Discovered Port Groups that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def get_group_dvpg_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_dvpg_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Discovered Port Groups that belong to this Group
    # Get Discovered Port Groups that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def get_group_dvpg_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_dvpg_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_dvpg_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_dvpg_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_dvpg_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_dvpg_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/dvpg'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_dvpg_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Effective Identity Groups that belong to this group.
    # Returns Effective Identiy Groups that belong to this group. This API is applicable only for Groups containing IdentityGroup member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def get_group_identity_groups(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_identity_groups_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Effective Identity Groups that belong to this group.
    # Returns Effective Identiy Groups that belong to this group. This API is applicable only for Groups containing IdentityGroup member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def get_group_identity_groups_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_identity_groups ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_identity_groups"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_identity_groups"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_identity_groups, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_identity_groups, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/identity-groups'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_identity_groups\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Effective IPGroups that belong to this group.
    # Returns effective IPGroups that belong to this group. This API is applicable only for Groups containing IPSet member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def get_group_ip_address_group_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_ip_address_group_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Effective IPGroups that belong to this group.
    # Returns effective IPGroups that belong to this group. This API is applicable only for Groups containing IPSet member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def get_group_ip_address_group_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_ip_address_group_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_ip_address_group_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_ip_address_group_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_ip_address_group_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_ip_address_group_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/ip-groups'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_ip_address_group_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IP addresses that belong to this Group
    # Get IP addresses that belong to this Group. This API is applicable for Groups containing either VirtualMachine, VIF, Segment ,Segment Port or IP Address member type.For Groups containing other member types,an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupIPMembersListResult]
    def get_group_ip_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_ip_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get IP addresses that belong to this Group
    # Get IP addresses that belong to this Group. This API is applicable for Groups containing either VirtualMachine, VIF, Segment ,Segment Port or IP Address member type.For Groups containing other member types,an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupIPMembersListResult, Fixnum, Hash)>] PolicyGroupIPMembersListResult data, response status code and response headers
    def get_group_ip_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_ip_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_ip_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_ip_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_ip_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_ip_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/ip-addresses'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupIPMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_ip_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get kubernetes gateways that belong to this Group
    # Get kubernetes gateways that belong to this Group. This API is applicable for Groups containing KubernetesGateway member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupKubernetesGatewayListResult]
    def get_group_kubernetes_gateway_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_kubernetes_gateway_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get kubernetes gateways that belong to this Group
    # Get kubernetes gateways that belong to this Group. This API is applicable for Groups containing KubernetesGateway member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupKubernetesGatewayListResult, Fixnum, Hash)>] PolicyGroupKubernetesGatewayListResult data, response status code and response headers
    def get_group_kubernetes_gateway_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_kubernetes_gateway_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_kubernetes_gateway_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_kubernetes_gateway_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_kubernetes_gateway_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_kubernetes_gateway_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/kubernetes-gateways'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cluster_id'] = opts[:'cluster_id'] if !opts[:'cluster_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupKubernetesGatewayListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_kubernetes_gateway_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get kubernetes ingress policies that belong to this Group
    # Get kubernetes ingress policies that belong to this Group. This API is applicable for Groups containing KubernetesIngress member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupKubernetesIngressListResult]
    def get_group_kubernetes_ingress_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_kubernetes_ingress_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get kubernetes ingress policies that belong to this Group
    # Get kubernetes ingress policies that belong to this Group. This API is applicable for Groups containing KubernetesIngress member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupKubernetesIngressListResult, Fixnum, Hash)>] PolicyGroupKubernetesIngressListResult data, response status code and response headers
    def get_group_kubernetes_ingress_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_kubernetes_ingress_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_kubernetes_ingress_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_kubernetes_ingress_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_kubernetes_ingress_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_kubernetes_ingress_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/kubernetes-ingresses'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cluster_id'] = opts[:'cluster_id'] if !opts[:'cluster_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupKubernetesIngressListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_kubernetes_ingress_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get kubernetes nodes that belong to this Group
    # Get kubernetes nodes that belong to this Group. This API is applicable for Groups containing KubernetesNode member type with key as IP_ADDRESSES. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupKubernetesNodeListResult]
    def get_group_kubernetes_node_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_kubernetes_node_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get kubernetes nodes that belong to this Group
    # Get kubernetes nodes that belong to this Group. This API is applicable for Groups containing KubernetesNode member type with key as IP_ADDRESSES. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupKubernetesNodeListResult, Fixnum, Hash)>] PolicyGroupKubernetesNodeListResult data, response status code and response headers
    def get_group_kubernetes_node_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_kubernetes_node_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_kubernetes_node_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_kubernetes_node_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_kubernetes_node_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_kubernetes_node_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/kubernetes-node-ips'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cluster_id'] = opts[:'cluster_id'] if !opts[:'cluster_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupKubernetesNodeListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_kubernetes_node_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get kubernetes services that belong to this Group
    # Get kubernetes services that belong to this Group. This API is applicable for Groups containing KubernetesService member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupKubernetesServiceListResult]
    def get_group_kubernetes_service_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_kubernetes_service_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get kubernetes services that belong to this Group
    # Get kubernetes services that belong to this Group. This API is applicable for Groups containing KubernetesService member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupKubernetesServiceListResult, Fixnum, Hash)>] PolicyGroupKubernetesServiceListResult data, response status code and response headers
    def get_group_kubernetes_service_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_kubernetes_service_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_kubernetes_service_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_kubernetes_service_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_kubernetes_service_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_kubernetes_service_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/kubernetes-services'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cluster_id'] = opts[:'cluster_id'] if !opts[:'cluster_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupKubernetesServiceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_kubernetes_service_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get logical ports that belong to this Group
    # Get logical ports that belong to this Group This API is applicable for Groups containing either VirtualMachine, VIF, Segment or Segment Port member type.For Groups containing other member types,an empty list is returned.  <br> This rest routine is deprecated. Use /infra/domains/&lt;domain-id&gt;/groups/&lt;group-id&gt;/members/segment-ports instead for effective segment-port members as LogicalPort  is not a supported member type . 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def get_group_lp_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_lp_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get logical ports that belong to this Group
    # Get logical ports that belong to this Group This API is applicable for Groups containing either VirtualMachine, VIF, Segment or Segment Port member type.For Groups containing other member types,an empty list is returned.  &lt;br&gt; This rest routine is deprecated. Use /infra/domains/&amp;lt;domain-id&amp;gt;/groups/&amp;lt;group-id&amp;gt;/members/segment-ports instead for effective segment-port members as LogicalPort  is not a supported member type . 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def get_group_lp_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_lp_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_lp_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_lp_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_lp_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_lp_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/logical-ports'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_lp_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get logical switches that belong to this Group
    # Get logical switches that belong to this Group. This API is applicable for Groups containing Segment member type. For Groups containing other member types, an empty list is returned.  <br> This rest routine is deprecated. Use /infra/domains/&lt;domain-id&gt;/groups/&lt;group-id&gt;/members/segments instead for effective segment members as LogicalSwitch  is not a supported member type. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def get_group_ls_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_ls_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get logical switches that belong to this Group
    # Get logical switches that belong to this Group. This API is applicable for Groups containing Segment member type. For Groups containing other member types, an empty list is returned.  &lt;br&gt; This rest routine is deprecated. Use /infra/domains/&amp;lt;domain-id&amp;gt;/groups/&amp;lt;group-id&amp;gt;/members/segments instead for effective segment members as LogicalSwitch  is not a supported member type. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def get_group_ls_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_ls_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_ls_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_ls_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_ls_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_ls_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/logical-switches'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_ls_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get kubernetes node pod cidrs that belong to this Group
    # Get kubernetes node pod cidrs that belong to this Group. This API is applicable for Groups containing KubernetesNode member type with key as POD_CIDRS. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupPodCidrListResult]
    def get_group_pod_cidr_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_pod_cidr_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get kubernetes node pod cidrs that belong to this Group
    # Get kubernetes node pod cidrs that belong to this Group. This API is applicable for Groups containing KubernetesNode member type with key as POD_CIDRS. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupPodCidrListResult, Fixnum, Hash)>] PolicyGroupPodCidrListResult data, response status code and response headers
    def get_group_pod_cidr_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_pod_cidr_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_pod_cidr_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_pod_cidr_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_pod_cidr_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_pod_cidr_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/kubernetes-node-pod-cidrs'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cluster_id'] = opts[:'cluster_id'] if !opts[:'cluster_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupPodCidrListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_pod_cidr_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get pods that belong to this Group
    # Get pods that belong to this Group. This API is applicable for Groups containing either Pod, Cluster, Namespace, Service member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContainerGroupMembersListResult]
    def get_group_pod_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_pod_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get pods that belong to this Group
    # Get pods that belong to this Group. This API is applicable for Groups containing either Pod, Cluster, Namespace, Service member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContainerGroupMembersListResult, Fixnum, Hash)>] PolicyContainerGroupMembersListResult data, response status code and response headers
    def get_group_pod_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_pod_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_pod_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_pod_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_pod_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_pod_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/pods'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cluster_id'] = opts[:'cluster_id'] if !opts[:'cluster_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContainerGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_pod_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get segments that belong to this Group
    # Get segments that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def get_group_segment_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_segment_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get segments that belong to this Group
    # Get segments that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def get_group_segment_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_segment_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_segment_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_segment_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_segment_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_segment_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/segments'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_segment_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get segment ports that belong to this Group
    # Get segment ports that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def get_group_segment_port_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_segment_port_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get segment ports that belong to this Group
    # Get segment ports that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def get_group_segment_port_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_segment_port_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_segment_port_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_segment_port_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_segment_port_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_segment_port_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/segment-ports'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_segment_port_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tags used to define conditions inside a Group
    # Get tags used to define conditions inside a Group. Also includes tags inside nested groups. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @return [GroupTagsList]
    def get_group_tags(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_tags_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get tags used to define conditions inside a Group
    # Get tags used to define conditions inside a Group. Also includes tags inside nested groups. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(GroupTagsList, Fixnum, Hash)>] GroupTagsList data, response status code and response headers
    def get_group_tags_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_tags ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_tags"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_tags"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/tags'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupTagsList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_tags\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get effective transport node members that belong to this group
    # Get effective transport node members that belong to this Group. This API is applicable only for Groups containing TransportNode member type. For Groups containing other member types,an empty list is returned. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def get_group_transport_node_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_transport_node_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get effective transport node members that belong to this group
    # Get effective transport node members that belong to this Group. This API is applicable only for Groups containing TransportNode member type. For Groups containing other member types,an empty list is returned. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def get_group_transport_node_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_transport_node_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_transport_node_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_transport_node_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_transport_node_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_transport_node_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/transport-nodes'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_transport_node_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Virtual Network Interface instances that belong to this Group
    # Get Virtual Network Interface instances that belong to this Group. This API is applicable for Groups containing VirtualNetworkInterface and VirtualMachine member types. For Groups containing other member types,an empty list is returned.target_id in response is external_id of VirtualNetworkInterface or VirtualMachine. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [VirtualNetworkInterfaceListResult]
    def get_group_vif_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_vif_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Virtual Network Interface instances that belong to this Group
    # Get Virtual Network Interface instances that belong to this Group. This API is applicable for Groups containing VirtualNetworkInterface and VirtualMachine member types. For Groups containing other member types,an empty list is returned.target_id in response is external_id of VirtualNetworkInterface or VirtualMachine. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(VirtualNetworkInterfaceListResult, Fixnum, Hash)>] VirtualNetworkInterfaceListResult data, response status code and response headers
    def get_group_vif_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_vif_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_vif_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_vif_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_vif_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_vif_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/vifs'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualNetworkInterfaceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_vif_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Virtual machines that belong to this Group
    # Get Virtual machines that belong to this Group. This API is applicable for Groups containing VirtualMachine,member type. For Groups containing other member types,an empty list is returned. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RealizedVirtualMachineListResult]
    def get_group_vm_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_vm_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Virtual machines that belong to this Group
    # Get Virtual machines that belong to this Group. This API is applicable for Groups containing VirtualMachine,member type. For Groups containing other member types,an empty list is returned. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RealizedVirtualMachineListResult, Fixnum, Hash)>] RealizedVirtualMachineListResult data, response status code and response headers
    def get_group_vm_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_vm_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_vm_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_vm_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_vm_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_vm_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/members/virtual-machines'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RealizedVirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_vm_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get effective VMs for the Group
    # Get the effective VM membership for the Group. This API also gives some VM details such as VM name, IDs and the current state of the VMs. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RealizedVirtualMachineListResult]
    def get_group_vm_statistics(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_group_vm_statistics_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get effective VMs for the Group
    # Get the effective VM membership for the Group. This API also gives some VM details such as VM name, IDs and the current state of the VMs. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RealizedVirtualMachineListResult, Fixnum, Hash)>] RealizedVirtualMachineListResult data, response status code and response headers
    def get_group_vm_statistics_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_group_vm_statistics ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_group_vm_statistics"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_group_vm_statistics"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_vm_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_group_vm_statistics, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/statistics/virtual-machines'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RealizedVirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_group_vm_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given bare metal server (BMS) is a member
    # Get policy groups for which the given bare metal server (BMS) is a member. 
    # @param bms_external_id BMS external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def get_groups_for_bms(bms_external_id, opts = {})
      data, _status_code, _headers = get_groups_for_bms_with_http_info(bms_external_id, opts)
      data
    end

    # Get groups for which the given bare metal server (BMS) is a member
    # Get policy groups for which the given bare metal server (BMS) is a member. 
    # @param bms_external_id BMS external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def get_groups_for_bms_with_http_info(bms_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_groups_for_bms ...'
      end
      # verify the required parameter 'bms_external_id' is set
      if @api_client.config.client_side_validation && bms_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'bms_external_id' when calling InventoryApi.get_groups_for_bms"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_bms, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_bms, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/bms-group-associations'

      # query parameters
      query_params = {}
      query_params[:'bms_external_id'] = bms_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_groups_for_bms\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given bare metal server interface (BMSI) is a member
    # Get policy groups for which the given bare metal server interface (BMSI) is a member. 
    # @param bmsi_external_id BMSI external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def get_groups_for_bmsi(bmsi_external_id, opts = {})
      data, _status_code, _headers = get_groups_for_bmsi_with_http_info(bmsi_external_id, opts)
      data
    end

    # Get groups for which the given bare metal server interface (BMSI) is a member
    # Get policy groups for which the given bare metal server interface (BMSI) is a member. 
    # @param bmsi_external_id BMSI external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def get_groups_for_bmsi_with_http_info(bmsi_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_groups_for_bmsi ...'
      end
      # verify the required parameter 'bmsi_external_id' is set
      if @api_client.config.client_side_validation && bmsi_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'bmsi_external_id' when calling InventoryApi.get_groups_for_bmsi"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_bmsi, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_bmsi, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/bmsi-group-associations'

      # query parameters
      query_params = {}
      query_params[:'bmsi_external_id'] = bmsi_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_groups_for_bmsi\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given Cloud Native Service Instance is a member
    # Get policy groups for which the given Cloud Native Service Instance is a member. 
    # @param cns_external_id Cloud Native Service external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def get_groups_for_cloud_native_service_instance(cns_external_id, opts = {})
      data, _status_code, _headers = get_groups_for_cloud_native_service_instance_with_http_info(cns_external_id, opts)
      data
    end

    # Get groups for which the given Cloud Native Service Instance is a member
    # Get policy groups for which the given Cloud Native Service Instance is a member. 
    # @param cns_external_id Cloud Native Service external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def get_groups_for_cloud_native_service_instance_with_http_info(cns_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_groups_for_cloud_native_service_instance ...'
      end
      # verify the required parameter 'cns_external_id' is set
      if @api_client.config.client_side_validation && cns_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'cns_external_id' when calling InventoryApi.get_groups_for_cloud_native_service_instance"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_cloud_native_service_instance, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_cloud_native_service_instance, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/cloud-native-service-group-associations'

      # query parameters
      query_params = {}
      query_params[:'cns_external_id'] = cns_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_groups_for_cloud_native_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given pod is a member
    # Get policy groups for which the given pod is a member. 
    # @param pod_id ContainerApplicationInstance
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def get_groups_for_container_application_instance(pod_id, opts = {})
      data, _status_code, _headers = get_groups_for_container_application_instance_with_http_info(pod_id, opts)
      data
    end

    # Get groups for which the given pod is a member
    # Get policy groups for which the given pod is a member. 
    # @param pod_id ContainerApplicationInstance
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def get_groups_for_container_application_instance_with_http_info(pod_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_groups_for_container_application_instance ...'
      end
      # verify the required parameter 'pod_id' is set
      if @api_client.config.client_side_validation && pod_id.nil?
        fail ArgumentError, "Missing the required parameter 'pod_id' when calling InventoryApi.get_groups_for_container_application_instance"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_container_application_instance, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_container_application_instance, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/pod-group-associations'

      # query parameters
      query_params = {}
      query_params[:'pod_id'] = pod_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_groups_for_container_application_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given Identity Group is a member
    # Get policy groups for which the given Identity Group is a member. 
    # @param identity_group_external_id Identity Group external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def get_groups_for_identity_group(identity_group_external_id, opts = {})
      data, _status_code, _headers = get_groups_for_identity_group_with_http_info(identity_group_external_id, opts)
      data
    end

    # Get groups for which the given Identity Group is a member
    # Get policy groups for which the given Identity Group is a member. 
    # @param identity_group_external_id Identity Group external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def get_groups_for_identity_group_with_http_info(identity_group_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_groups_for_identity_group ...'
      end
      # verify the required parameter 'identity_group_external_id' is set
      if @api_client.config.client_side_validation && identity_group_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'identity_group_external_id' when calling InventoryApi.get_groups_for_identity_group"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_identity_group, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_identity_group, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/identity-group-associations'

      # query parameters
      query_params = {}
      query_params[:'identity_group_external_id'] = identity_group_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_groups_for_identity_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given IP address is a member
    # Get policy groups for which the given IP address is a member. 
    # @param ip_address IPAddress
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def get_groups_for_ip_address(ip_address, opts = {})
      data, _status_code, _headers = get_groups_for_ip_address_with_http_info(ip_address, opts)
      data
    end

    # Get groups for which the given IP address is a member
    # Get policy groups for which the given IP address is a member. 
    # @param ip_address IPAddress
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def get_groups_for_ip_address_with_http_info(ip_address, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_groups_for_ip_address ...'
      end
      # verify the required parameter 'ip_address' is set
      if @api_client.config.client_side_validation && ip_address.nil?
        fail ArgumentError, "Missing the required parameter 'ip_address' when calling InventoryApi.get_groups_for_ip_address"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_ip_address, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_ip_address, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/ip-address-group-associations'

      # query parameters
      query_params = {}
      query_params[:'ip_address'] = ip_address
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_groups_for_ip_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given object is a member
    # Get policy groups for which the given object is a member. In Federation environment, if the given object is a global entity (eg: global segment) and if the entity is not stretched to the site specified in the enforcement_point_path parameter,then the following is returned:- 1)If the entity is a member of any global group and that group is stretched   to the enforcement_point_path site,then the API returns an empty list. 2)If the entity is not a member of any global group,this API returns   an 'invalid path' error message. 3)If both the entity and its corresponding groups are stretched to the   enforcement_point_path site , then the API returns the groups list. 
    # @param intent_path String path of the intent object
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def get_groups_for_object(intent_path, opts = {})
      data, _status_code, _headers = get_groups_for_object_with_http_info(intent_path, opts)
      data
    end

    # Get groups for which the given object is a member
    # Get policy groups for which the given object is a member. In Federation environment, if the given object is a global entity (eg: global segment) and if the entity is not stretched to the site specified in the enforcement_point_path parameter,then the following is returned:- 1)If the entity is a member of any global group and that group is stretched   to the enforcement_point_path site,then the API returns an empty list. 2)If the entity is not a member of any global group,this API returns   an &#39;invalid path&#39; error message. 3)If both the entity and its corresponding groups are stretched to the   enforcement_point_path site , then the API returns the groups list. 
    # @param intent_path String path of the intent object
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def get_groups_for_object_with_http_info(intent_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_groups_for_object ...'
      end
      # verify the required parameter 'intent_path' is set
      if @api_client.config.client_side_validation && intent_path.nil?
        fail ArgumentError, "Missing the required parameter 'intent_path' when calling InventoryApi.get_groups_for_object"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_object, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_object, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/group-associations'

      # query parameters
      query_params = {}
      query_params[:'intent_path'] = intent_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_groups_for_object\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given VIF is a member
    # Get policy groups for which the given VIF is a member. 
    # @param vif_external_id Virtual network interface external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def get_groups_for_vif(vif_external_id, opts = {})
      data, _status_code, _headers = get_groups_for_vif_with_http_info(vif_external_id, opts)
      data
    end

    # Get groups for which the given VIF is a member
    # Get policy groups for which the given VIF is a member. 
    # @param vif_external_id Virtual network interface external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def get_groups_for_vif_with_http_info(vif_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_groups_for_vif ...'
      end
      # verify the required parameter 'vif_external_id' is set
      if @api_client.config.client_side_validation && vif_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'vif_external_id' when calling InventoryApi.get_groups_for_vif"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_vif, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_vif, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/virtual-network-interface-group-associations'

      # query parameters
      query_params = {}
      query_params[:'vif_external_id'] = vif_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_groups_for_vif\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given VM is a member
    # Get policy groups for which the given VM is a member. 
    # @param vm_external_id Virtual machine external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def get_groups_for_vm(vm_external_id, opts = {})
      data, _status_code, _headers = get_groups_for_vm_with_http_info(vm_external_id, opts)
      data
    end

    # Get groups for which the given VM is a member
    # Get policy groups for which the given VM is a member. 
    # @param vm_external_id Virtual machine external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def get_groups_for_vm_with_http_info(vm_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_groups_for_vm ...'
      end
      # verify the required parameter 'vm_external_id' is set
      if @api_client.config.client_side_validation && vm_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'vm_external_id' when calling InventoryApi.get_groups_for_vm"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_vm, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_groups_for_vm, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/virtual-machine-group-associations'

      # query parameters
      query_params = {}
      query_params[:'vm_external_id'] = vm_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_groups_for_vm\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get L7 Access Profile
    # API will get L7 Access Profile
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [L7AccessProfile]
    def get_l7_access_profile(l7_access_profile_id, opts = {})
      data, _status_code, _headers = get_l7_access_profile_with_http_info(l7_access_profile_id, opts)
      data
    end

    # Get L7 Access Profile
    # API will get L7 Access Profile
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L7AccessProfile, Fixnum, Hash)>] L7AccessProfile data, response status code and response headers
    def get_l7_access_profile_with_http_info(l7_access_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_l7_access_profile ...'
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.get_l7_access_profile"
      end
      # resource path
      local_var_path = '/infra/l7-access-profiles/{l7-access-profile-id}'.sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_l7_access_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get member types for a given Group
    # It retrieves member types for a given group. In case of nested groups, it calculates member types of child groups as well. Considers member type for members added via static members and dynamic membership criteria. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [GroupMemberTypeListResult]
    def get_member_types_for_group(domain_id, group_id, opts = {})
      data, _status_code, _headers = get_member_types_for_group_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get member types for a given Group
    # It retrieves member types for a given group. In case of nested groups, it calculates member types of child groups as well. Considers member type for members added via static members and dynamic membership criteria. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(GroupMemberTypeListResult, Fixnum, Hash)>] GroupMemberTypeListResult data, response status code and response headers
    def get_member_types_for_group_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_member_types_for_group ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.get_member_types_for_group"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_member_types_for_group"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/member-types'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupMemberTypeListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_member_types_for_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get PolicyContextProfile
    # Get a single PolicyContextProfile by id 
    # @param context_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [PolicyContextProfile]
    def get_policy_context_profile(context_profile_id, opts = {})
      data, _status_code, _headers = get_policy_context_profile_with_http_info(context_profile_id, opts)
      data
    end

    # Get PolicyContextProfile
    # Get a single PolicyContextProfile by id 
    # @param context_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyContextProfile, Fixnum, Hash)>] PolicyContextProfile data, response status code and response headers
    def get_policy_context_profile_with_http_info(context_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.get_policy_context_profile"
      end
      # resource path
      local_var_path = '/infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Static Mime content
    # API will get static mime content
    # @param static_mime_content_id Static mime content id
    # @param [Hash] opts the optional parameters
    # @return [StaticMimeContent]
    def get_policy_static_mime_content(static_mime_content_id, opts = {})
      data, _status_code, _headers = get_policy_static_mime_content_with_http_info(static_mime_content_id, opts)
      data
    end

    # Get Static Mime content
    # API will get static mime content
    # @param static_mime_content_id Static mime content id
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticMimeContent, Fixnum, Hash)>] StaticMimeContent data, response status code and response headers
    def get_policy_static_mime_content_with_http_info(static_mime_content_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_policy_static_mime_content ...'
      end
      # verify the required parameter 'static_mime_content_id' is set
      if @api_client.config.client_side_validation && static_mime_content_id.nil?
        fail ArgumentError, "Missing the required parameter 'static_mime_content_id' when calling InventoryApi.get_policy_static_mime_content"
      end
      # resource path
      local_var_path = '/infra/static-mime-contents/{static-mime-content-id}'.sub('{' + 'static-mime-content-id' + '}', static_mime_content_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticMimeContent')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_policy_static_mime_content\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IP addresses that belong to this Tier-0 Group
    # Get IP addresses that belong to this Tier-0 Group. This API is applicable for Groups containing either VirtualMachine, VIF, Segment ,Segment Port or IP Address member type.For Groups containing other member types,an empty list is returned 
    # @param tier_0_id Tier-0 id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupIPMembersListResult]
    def get_provider_group_ip_members(tier_0_id, group_id, opts = {})
      data, _status_code, _headers = get_provider_group_ip_members_with_http_info(tier_0_id, group_id, opts)
      data
    end

    # Get IP addresses that belong to this Tier-0 Group
    # Get IP addresses that belong to this Tier-0 Group. This API is applicable for Groups containing either VirtualMachine, VIF, Segment ,Segment Port or IP Address member type.For Groups containing other member types,an empty list is returned 
    # @param tier_0_id Tier-0 id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupIPMembersListResult, Fixnum, Hash)>] PolicyGroupIPMembersListResult data, response status code and response headers
    def get_provider_group_ip_members_with_http_info(tier_0_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_provider_group_ip_members ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.get_provider_group_ip_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_provider_group_ip_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_provider_group_ip_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_provider_group_ip_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/groups/{group-id}/members/ip-addresses'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupIPMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_provider_group_ip_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Virtual machines that belong to this Tier-0 Group
    # Get Virtual machines that belong to this Tier-0 Group. This API is applicable for Groups containing VirtualMachine member type. For Groups containing other member types,an empty list is returned. 
    # @param tier_0_id Tier-0 id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RealizedVirtualMachineListResult]
    def get_provider_group_vm_members(tier_0_id, group_id, opts = {})
      data, _status_code, _headers = get_provider_group_vm_members_with_http_info(tier_0_id, group_id, opts)
      data
    end

    # Get Virtual machines that belong to this Tier-0 Group
    # Get Virtual machines that belong to this Tier-0 Group. This API is applicable for Groups containing VirtualMachine member type. For Groups containing other member types,an empty list is returned. 
    # @param tier_0_id Tier-0 id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RealizedVirtualMachineListResult, Fixnum, Hash)>] RealizedVirtualMachineListResult data, response status code and response headers
    def get_provider_group_vm_members_with_http_info(tier_0_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_provider_group_vm_members ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.get_provider_group_vm_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.get_provider_group_vm_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_provider_group_vm_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_provider_group_vm_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/groups/{group-id}/members/virtual-machines'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RealizedVirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_provider_group_vm_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get details of tag bulk operation request
    # Get details of tag bulk operation request with which tag is applied or removed on virtual machines. 
    # @param operation_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TagBulkOperation]
    def get_tag_bulk_operation(operation_id, opts = {})
      data, _status_code, _headers = get_tag_bulk_operation_with_http_info(operation_id, opts)
      data
    end

    # Get details of tag bulk operation request
    # Get details of tag bulk operation request with which tag is applied or removed on virtual machines. 
    # @param operation_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TagBulkOperation, Fixnum, Hash)>] TagBulkOperation data, response status code and response headers
    def get_tag_bulk_operation_with_http_info(operation_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_tag_bulk_operation ...'
      end
      # verify the required parameter 'operation_id' is set
      if @api_client.config.client_side_validation && operation_id.nil?
        fail ArgumentError, "Missing the required parameter 'operation_id' when calling InventoryApi.get_tag_bulk_operation"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_tag_bulk_operation, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_tag_bulk_operation, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tags/tag-operations/{operation-id}'.sub('{' + 'operation-id' + '}', operation_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TagBulkOperation')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_tag_bulk_operation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get status of tag bulk operation
    # Get status of tag bulk operation with details of tag operation on each virtual machine. 
    # @param operation_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TagBulkOperationStatus]
    def get_tag_bulk_operation_status(operation_id, opts = {})
      data, _status_code, _headers = get_tag_bulk_operation_status_with_http_info(operation_id, opts)
      data
    end

    # Get status of tag bulk operation
    # Get status of tag bulk operation with details of tag operation on each virtual machine. 
    # @param operation_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TagBulkOperationStatus, Fixnum, Hash)>] TagBulkOperationStatus data, response status code and response headers
    def get_tag_bulk_operation_status_with_http_info(operation_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_tag_bulk_operation_status ...'
      end
      # verify the required parameter 'operation_id' is set
      if @api_client.config.client_side_validation && operation_id.nil?
        fail ArgumentError, "Missing the required parameter 'operation_id' when calling InventoryApi.get_tag_bulk_operation_status"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_tag_bulk_operation_status, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.get_tag_bulk_operation_status, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tags/tag-operations/{operation-id}/status'.sub('{' + 'operation-id' + '}', operation_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TagBulkOperationStatus')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_tag_bulk_operation_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key. The values in the  request will be added or removed from the existing list. 
    # @param policy_custom_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def global_infra_add_remove_custom_attribute(policy_custom_attributes, action, opts = {})
      global_infra_add_remove_custom_attribute_with_http_info(policy_custom_attributes, action, opts)
      nil
    end

    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key. The values in the  request will be added or removed from the existing list. 
    # @param policy_custom_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_add_remove_custom_attribute_with_http_info(policy_custom_attributes, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_add_remove_custom_attribute ...'
      end
      # verify the required parameter 'policy_custom_attributes' is set
      if @api_client.config.client_side_validation && policy_custom_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_custom_attributes' when calling InventoryApi.global_infra_add_remove_custom_attribute"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.global_infra_add_remove_custom_attribute"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/global-infra/context-profiles/custom-attributes/default'

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_custom_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_add_remove_custom_attribute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key.  <br> This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default to Adds/Removes custom attribute values from list 
    # @param policy_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def global_infra_add_remove_custom_attribute_values(policy_attributes, action, opts = {})
      global_infra_add_remove_custom_attribute_values_with_http_info(policy_attributes, action, opts)
      nil
    end

    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key.  &lt;br&gt; This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default to Adds/Removes custom attribute values from list 
    # @param policy_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_add_remove_custom_attribute_values_with_http_info(policy_attributes, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_add_remove_custom_attribute_values ...'
      end
      # verify the required parameter 'policy_attributes' is set
      if @api_client.config.client_side_validation && policy_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_attributes' when calling InventoryApi.global_infra_add_remove_custom_attribute_values"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.global_infra_add_remove_custom_attribute_values"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/global-infra/context-profiles/custom-attributes'

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_add_remove_custom_attribute_values\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Policy Context Profile
    # Deletes the specified Policy Context Profile. If the Policy Context Profile is consumed in a firewall rule, it won't get deleted. 
    # @param context_profile_id Policy Context Profile Id
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere  (default to false)
    # @option opts [BOOLEAN] :override Delete the locally overridden global object (default to false)
    # @return [nil]
    def global_infra_delete_policy_context_profile(context_profile_id, opts = {})
      global_infra_delete_policy_context_profile_with_http_info(context_profile_id, opts)
      nil
    end

    # Delete Policy Context Profile
    # Deletes the specified Policy Context Profile. If the Policy Context Profile is consumed in a firewall rule, it won&#39;t get deleted. 
    # @param context_profile_id Policy Context Profile Id
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere 
    # @option opts [BOOLEAN] :override Delete the locally overridden global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_delete_policy_context_profile_with_http_info(context_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_delete_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.global_infra_delete_policy_context_profile"
      end
      # resource path
      local_var_path = '/global-infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'force'] = opts[:'force'] if !opts[:'force'].nil?
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_delete_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get consolidated effective IPAddress translated from this group across site
    # Returns the consolidated effective IP address members of the specified Group. This is applicable in the case of a federated environment. The response includes a site-wise list of static and dynamically translated effective IP address members. If the group evaluation on a site is empty, the response will contain the site-id with empty list. If a group is a reference group on a site, then its consolidated effective IP response will contain the effective IPs from other sites, and the response will contain an empty list of IPs for the sites where is it a reference group.  This API is applicable only for Global Groups that contain (either directly or via nesting) VirtualMachine, VIF, Segment, SegmentPort, or IPSet member types. Please use the cursor value in the response to fetch the next page. If there is no cursor value in the response, it indicates that it is the last page of results for the query. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :ip_filter IP address, range, or subnet
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :site_id UUID of the site from which the effective IP addresses are to be fetched 
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ConsolidatedEffectiveIPAddressMemberListResult]
    def global_infra_get_consolidated_effective_ip_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_consolidated_effective_ip_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get consolidated effective IPAddress translated from this group across site
    # Returns the consolidated effective IP address members of the specified Group. This is applicable in the case of a federated environment. The response includes a site-wise list of static and dynamically translated effective IP address members. If the group evaluation on a site is empty, the response will contain the site-id with empty list. If a group is a reference group on a site, then its consolidated effective IP response will contain the effective IPs from other sites, and the response will contain an empty list of IPs for the sites where is it a reference group.  This API is applicable only for Global Groups that contain (either directly or via nesting) VirtualMachine, VIF, Segment, SegmentPort, or IPSet member types. Please use the cursor value in the response to fetch the next page. If there is no cursor value in the response, it indicates that it is the last page of results for the query. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :ip_filter IP address, range, or subnet
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :site_id UUID of the site from which the effective IP addresses are to be fetched 
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ConsolidatedEffectiveIPAddressMemberListResult, Fixnum, Hash)>] ConsolidatedEffectiveIPAddressMemberListResult data, response status code and response headers
    def global_infra_get_consolidated_effective_ip_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_consolidated_effective_ip_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_consolidated_effective_ip_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_consolidated_effective_ip_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_consolidated_effective_ip_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_consolidated_effective_ip_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/consolidated-effective-ip-addresses'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'ip_filter'] = opts[:'ip_filter'] if !opts[:'ip_filter'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'site_id'] = opts[:'site_id'] if !opts[:'site_id'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ConsolidatedEffectiveIPAddressMemberListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_consolidated_effective_ip_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieves custom attribute values for given attribute key
    # This API lists all the custom attribute values defined in the system for the attribute_key mentioned as part of the url. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom (default to SYSTEM)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def global_infra_get_custom_attribute(opts = {})
      data, _status_code, _headers = global_infra_get_custom_attribute_with_http_info(opts)
      data
    end

    # Retrieves custom attribute values for given attribute key
    # This API lists all the custom attribute values defined in the system for the attribute_key mentioned as part of the url. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def global_infra_get_custom_attribute_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_custom_attribute ...'
      end
      if @api_client.config.client_side_validation && opts[:'attribute_source'] && !['ALL', 'CUSTOM', 'SYSTEM'].include?(opts[:'attribute_source'])
        fail ArgumentError, 'invalid value for "attribute_source", must be one of ALL, CUSTOM, SYSTEM'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_custom_attribute, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_custom_attribute, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/context-profiles/custom-attributes/default'

      # query parameters
      query_params = {}
      query_params[:'attribute_key'] = opts[:'attribute_key'] if !opts[:'attribute_key'].nil?
      query_params[:'attribute_source'] = opts[:'attribute_source'] if !opts[:'attribute_source'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_custom_attribute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Effective Bare Metal Servers(BMS) that belong to this group.
    # Returns Effective Bare metal servers(BMS) that belong to this group. This API is applicable only for Groups containing BMS member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BareMetalServerListResult]
    def global_infra_get_group_bms_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_bms_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Effective Bare Metal Servers(BMS) that belong to this group.
    # Returns Effective Bare metal servers(BMS) that belong to this group. This API is applicable only for Groups containing BMS member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BareMetalServerListResult, Fixnum, Hash)>] BareMetalServerListResult data, response status code and response headers
    def global_infra_get_group_bms_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_bms_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_bms_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_bms_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_bms_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_bms_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/bms'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BareMetalServerListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_bms_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Effective Bare Metal Server Interfaces(BMSI) that belong to this group.
    # Returns Effective Bare metal server interfaces (BMSI) that belong to this group. This API is applicable only for Groups containing BMSI member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BareMetalServerInterfaceListResult]
    def global_infra_get_group_bmsi_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_bmsi_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Effective Bare Metal Server Interfaces(BMSI) that belong to this group.
    # Returns Effective Bare metal server interfaces (BMSI) that belong to this group. This API is applicable only for Groups containing BMSI member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BareMetalServerInterfaceListResult, Fixnum, Hash)>] BareMetalServerInterfaceListResult data, response status code and response headers
    def global_infra_get_group_bmsi_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_bmsi_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_bmsi_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_bmsi_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_bmsi_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_bmsi_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/bmsi'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BareMetalServerInterfaceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_bmsi_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Effective Cloud Native Service Instances that belong to this group.
    # Returns Effective Cloud Native Service Instances that belong to this group. This API is applicable only for Groups containing CloudNativeServiceInstance member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def global_infra_get_group_cloud_native_service_instances(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_cloud_native_service_instances_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Effective Cloud Native Service Instances that belong to this group.
    # Returns Effective Cloud Native Service Instances that belong to this group. This API is applicable only for Groups containing CloudNativeServiceInstance member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def global_infra_get_group_cloud_native_service_instances_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_cloud_native_service_instances ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_cloud_native_service_instances"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_cloud_native_service_instances"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_cloud_native_service_instances, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_cloud_native_service_instances, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/cloud-native-service-instances'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_cloud_native_service_instances\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get discovered ports that belong to this Group
    # Get discovered ports that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def global_infra_get_group_discovered_port_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_discovered_port_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get discovered ports that belong to this Group
    # Get discovered ports that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def global_infra_get_group_discovered_port_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_discovered_port_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_discovered_port_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_discovered_port_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_discovered_port_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_discovered_port_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/dvports'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_discovered_port_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Discovered Port Groups that belong to this Group
    # Get Discovered Port Groups that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def global_infra_get_group_dvpg_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_dvpg_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Discovered Port Groups that belong to this Group
    # Get Discovered Port Groups that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def global_infra_get_group_dvpg_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_dvpg_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_dvpg_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_dvpg_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_dvpg_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_dvpg_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/dvpg'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_dvpg_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Effective IPGroups that belong to this group.
    # Returns effective IPGroups that belong to this group. This API is applicable only for Groups containing IPSet member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def global_infra_get_group_ip_address_group_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_ip_address_group_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Effective IPGroups that belong to this group.
    # Returns effective IPGroups that belong to this group. This API is applicable only for Groups containing IPSet member type. For Groups containing other member types,it returns an empty list. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def global_infra_get_group_ip_address_group_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_ip_address_group_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_ip_address_group_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_ip_address_group_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_ip_address_group_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_ip_address_group_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/ip-groups'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_ip_address_group_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IP addresses that belong to this Group
    # Get IP addresses that belong to this Group. This API is applicable for Groups containing either VirtualMachine, VIF, Segment ,Segment Port or IP Address member type.For Groups containing other member types,an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupIPMembersListResult]
    def global_infra_get_group_ip_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_ip_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get IP addresses that belong to this Group
    # Get IP addresses that belong to this Group. This API is applicable for Groups containing either VirtualMachine, VIF, Segment ,Segment Port or IP Address member type.For Groups containing other member types,an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupIPMembersListResult, Fixnum, Hash)>] PolicyGroupIPMembersListResult data, response status code and response headers
    def global_infra_get_group_ip_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_ip_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_ip_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_ip_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_ip_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_ip_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/ip-addresses'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupIPMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_ip_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get logical ports that belong to this Group
    # Get logical ports that belong to this Group This API is applicable for Groups containing either VirtualMachine, VIF, Segment or Segment Port member type.For Groups containing other member types,an empty list is returned.  <br> This rest routine is deprecated. Use /infra/domains/&lt;domain-id&gt;/groups/&lt;group-id&gt;/members/segment-ports instead for effective segment-port members as LogicalPort  is not a supported member type . 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def global_infra_get_group_lp_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_lp_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get logical ports that belong to this Group
    # Get logical ports that belong to this Group This API is applicable for Groups containing either VirtualMachine, VIF, Segment or Segment Port member type.For Groups containing other member types,an empty list is returned.  &lt;br&gt; This rest routine is deprecated. Use /infra/domains/&amp;lt;domain-id&amp;gt;/groups/&amp;lt;group-id&amp;gt;/members/segment-ports instead for effective segment-port members as LogicalPort  is not a supported member type . 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def global_infra_get_group_lp_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_lp_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_lp_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_lp_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_lp_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_lp_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/logical-ports'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_lp_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get logical switches that belong to this Group
    # Get logical switches that belong to this Group. This API is applicable for Groups containing Segment member type. For Groups containing other member types, an empty list is returned.  <br> This rest routine is deprecated. Use /infra/domains/&lt;domain-id&gt;/groups/&lt;group-id&gt;/members/segments instead for effective segment members as LogicalSwitch  is not a supported member type. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def global_infra_get_group_ls_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_ls_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get logical switches that belong to this Group
    # Get logical switches that belong to this Group. This API is applicable for Groups containing Segment member type. For Groups containing other member types, an empty list is returned.  &lt;br&gt; This rest routine is deprecated. Use /infra/domains/&amp;lt;domain-id&amp;gt;/groups/&amp;lt;group-id&amp;gt;/members/segments instead for effective segment members as LogicalSwitch  is not a supported member type. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def global_infra_get_group_ls_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_ls_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_ls_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_ls_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_ls_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_ls_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/logical-switches'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_ls_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get pods that belong to this Group
    # Get pods that belong to this Group. This API is applicable for Groups containing either Pod, Cluster, Namespace, Service member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContainerGroupMembersListResult]
    def global_infra_get_group_pod_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_pod_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get pods that belong to this Group
    # Get pods that belong to this Group. This API is applicable for Groups containing either Pod, Cluster, Namespace, Service member type. For Groups containing other member types an empty list is returned 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContainerGroupMembersListResult, Fixnum, Hash)>] PolicyContainerGroupMembersListResult data, response status code and response headers
    def global_infra_get_group_pod_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_pod_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_pod_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_pod_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_pod_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_pod_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/pods'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cluster_id'] = opts[:'cluster_id'] if !opts[:'cluster_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContainerGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_pod_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get segments that belong to this Group
    # Get segments that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def global_infra_get_group_segment_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_segment_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get segments that belong to this Group
    # Get segments that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def global_infra_get_group_segment_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_segment_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_segment_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_segment_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_segment_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_segment_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/segments'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_segment_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get segment ports that belong to this Group
    # Get segment ports that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def global_infra_get_group_segment_port_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_segment_port_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get segment ports that belong to this Group
    # Get segment ports that belong to this Group 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def global_infra_get_group_segment_port_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_segment_port_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_segment_port_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_segment_port_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_segment_port_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_segment_port_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/segment-ports'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_segment_port_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tags used to define conditions inside a Group
    # Get tags used to define conditions inside a Group. Also includes tags inside nested groups. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @return [GroupTagsList]
    def global_infra_get_group_tags(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_tags_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get tags used to define conditions inside a Group
    # Get tags used to define conditions inside a Group. Also includes tags inside nested groups. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(GroupTagsList, Fixnum, Hash)>] GroupTagsList data, response status code and response headers
    def global_infra_get_group_tags_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_tags ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_tags"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_tags"
      end
      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/tags'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupTagsList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_tags\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Virtual Network Interface instances that belong to this Group
    # Get Virtual Network Interface instances that belong to this Group. This API is applicable for Groups containing VirtualNetworkInterface and VirtualMachine member types. For Groups containing other member types,an empty list is returned.target_id in response is external_id of VirtualNetworkInterface or VirtualMachine. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [VirtualNetworkInterfaceListResult]
    def global_infra_get_group_vif_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_vif_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Virtual Network Interface instances that belong to this Group
    # Get Virtual Network Interface instances that belong to this Group. This API is applicable for Groups containing VirtualNetworkInterface and VirtualMachine member types. For Groups containing other member types,an empty list is returned.target_id in response is external_id of VirtualNetworkInterface or VirtualMachine. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(VirtualNetworkInterfaceListResult, Fixnum, Hash)>] VirtualNetworkInterfaceListResult data, response status code and response headers
    def global_infra_get_group_vif_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_vif_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_vif_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_vif_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_vif_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_vif_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/vifs'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualNetworkInterfaceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_vif_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Virtual machines that belong to this Group
    # Get Virtual machines that belong to this Group. This API is applicable for Groups containing VirtualMachine,member type. For Groups containing other member types,an empty list is returned. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RealizedVirtualMachineListResult]
    def global_infra_get_group_vm_members(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_group_vm_members_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get Virtual machines that belong to this Group
    # Get Virtual machines that belong to this Group. This API is applicable for Groups containing VirtualMachine,member type. For Groups containing other member types,an empty list is returned. 
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RealizedVirtualMachineListResult, Fixnum, Hash)>] RealizedVirtualMachineListResult data, response status code and response headers
    def global_infra_get_group_vm_members_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_group_vm_members ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_group_vm_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_group_vm_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_vm_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_group_vm_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/members/virtual-machines'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RealizedVirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_group_vm_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given bare metal server (BMS) is a member
    # Get policy groups for which the given bare metal server (BMS) is a member. 
    # @param bms_external_id BMS external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def global_infra_get_groups_for_bms(bms_external_id, opts = {})
      data, _status_code, _headers = global_infra_get_groups_for_bms_with_http_info(bms_external_id, opts)
      data
    end

    # Get groups for which the given bare metal server (BMS) is a member
    # Get policy groups for which the given bare metal server (BMS) is a member. 
    # @param bms_external_id BMS external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def global_infra_get_groups_for_bms_with_http_info(bms_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_groups_for_bms ...'
      end
      # verify the required parameter 'bms_external_id' is set
      if @api_client.config.client_side_validation && bms_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'bms_external_id' when calling InventoryApi.global_infra_get_groups_for_bms"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_bms, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_bms, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/bms-group-associations'

      # query parameters
      query_params = {}
      query_params[:'bms_external_id'] = bms_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_groups_for_bms\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given bare metal server interface (BMSI) is a member
    # Get policy groups for which the given bare metal server interface (BMSI) is a member. 
    # @param bmsi_external_id BMSI external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def global_infra_get_groups_for_bmsi(bmsi_external_id, opts = {})
      data, _status_code, _headers = global_infra_get_groups_for_bmsi_with_http_info(bmsi_external_id, opts)
      data
    end

    # Get groups for which the given bare metal server interface (BMSI) is a member
    # Get policy groups for which the given bare metal server interface (BMSI) is a member. 
    # @param bmsi_external_id BMSI external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def global_infra_get_groups_for_bmsi_with_http_info(bmsi_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_groups_for_bmsi ...'
      end
      # verify the required parameter 'bmsi_external_id' is set
      if @api_client.config.client_side_validation && bmsi_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'bmsi_external_id' when calling InventoryApi.global_infra_get_groups_for_bmsi"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_bmsi, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_bmsi, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/bmsi-group-associations'

      # query parameters
      query_params = {}
      query_params[:'bmsi_external_id'] = bmsi_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_groups_for_bmsi\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given Cloud Native Service Instance is a member
    # Get policy groups for which the given Cloud Native Service Instance is a member. 
    # @param cns_external_id Cloud Native Service external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def global_infra_get_groups_for_cloud_native_service_instance(cns_external_id, opts = {})
      data, _status_code, _headers = global_infra_get_groups_for_cloud_native_service_instance_with_http_info(cns_external_id, opts)
      data
    end

    # Get groups for which the given Cloud Native Service Instance is a member
    # Get policy groups for which the given Cloud Native Service Instance is a member. 
    # @param cns_external_id Cloud Native Service external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def global_infra_get_groups_for_cloud_native_service_instance_with_http_info(cns_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_groups_for_cloud_native_service_instance ...'
      end
      # verify the required parameter 'cns_external_id' is set
      if @api_client.config.client_side_validation && cns_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'cns_external_id' when calling InventoryApi.global_infra_get_groups_for_cloud_native_service_instance"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_cloud_native_service_instance, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_cloud_native_service_instance, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/cloud-native-service-group-associations'

      # query parameters
      query_params = {}
      query_params[:'cns_external_id'] = cns_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_groups_for_cloud_native_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given pod is a member
    # Get policy groups for which the given pod is a member. 
    # @param pod_id ContainerApplicationInstance
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def global_infra_get_groups_for_container_application_instance(pod_id, opts = {})
      data, _status_code, _headers = global_infra_get_groups_for_container_application_instance_with_http_info(pod_id, opts)
      data
    end

    # Get groups for which the given pod is a member
    # Get policy groups for which the given pod is a member. 
    # @param pod_id ContainerApplicationInstance
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def global_infra_get_groups_for_container_application_instance_with_http_info(pod_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_groups_for_container_application_instance ...'
      end
      # verify the required parameter 'pod_id' is set
      if @api_client.config.client_side_validation && pod_id.nil?
        fail ArgumentError, "Missing the required parameter 'pod_id' when calling InventoryApi.global_infra_get_groups_for_container_application_instance"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_container_application_instance, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_container_application_instance, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/pod-group-associations'

      # query parameters
      query_params = {}
      query_params[:'pod_id'] = pod_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_groups_for_container_application_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given IP address is a member
    # Get policy groups for which the given IP address is a member. 
    # @param ip_address IPAddress
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def global_infra_get_groups_for_ip_address(ip_address, opts = {})
      data, _status_code, _headers = global_infra_get_groups_for_ip_address_with_http_info(ip_address, opts)
      data
    end

    # Get groups for which the given IP address is a member
    # Get policy groups for which the given IP address is a member. 
    # @param ip_address IPAddress
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def global_infra_get_groups_for_ip_address_with_http_info(ip_address, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_groups_for_ip_address ...'
      end
      # verify the required parameter 'ip_address' is set
      if @api_client.config.client_side_validation && ip_address.nil?
        fail ArgumentError, "Missing the required parameter 'ip_address' when calling InventoryApi.global_infra_get_groups_for_ip_address"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_ip_address, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_ip_address, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/ip-address-group-associations'

      # query parameters
      query_params = {}
      query_params[:'ip_address'] = ip_address
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_groups_for_ip_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given object is a member
    # Get policy groups for which the given object is a member. In Federation environment, if the given object is a global entity (eg: global segment) and if the entity is not stretched to the site specified in the enforcement_point_path parameter,then the following is returned:- 1)If the entity is a member of any global group and that group is stretched   to the enforcement_point_path site,then the API returns an empty list. 2)If the entity is not a member of any global group,this API returns   an 'invalid path' error message. 3)If both the entity and its corresponding groups are stretched to the   enforcement_point_path site , then the API returns the groups list. 
    # @param intent_path String path of the intent object
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def global_infra_get_groups_for_object(intent_path, opts = {})
      data, _status_code, _headers = global_infra_get_groups_for_object_with_http_info(intent_path, opts)
      data
    end

    # Get groups for which the given object is a member
    # Get policy groups for which the given object is a member. In Federation environment, if the given object is a global entity (eg: global segment) and if the entity is not stretched to the site specified in the enforcement_point_path parameter,then the following is returned:- 1)If the entity is a member of any global group and that group is stretched   to the enforcement_point_path site,then the API returns an empty list. 2)If the entity is not a member of any global group,this API returns   an &#39;invalid path&#39; error message. 3)If both the entity and its corresponding groups are stretched to the   enforcement_point_path site , then the API returns the groups list. 
    # @param intent_path String path of the intent object
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def global_infra_get_groups_for_object_with_http_info(intent_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_groups_for_object ...'
      end
      # verify the required parameter 'intent_path' is set
      if @api_client.config.client_side_validation && intent_path.nil?
        fail ArgumentError, "Missing the required parameter 'intent_path' when calling InventoryApi.global_infra_get_groups_for_object"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_object, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_object, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/group-associations'

      # query parameters
      query_params = {}
      query_params[:'intent_path'] = intent_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_groups_for_object\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given VIF is a member
    # Get policy groups for which the given VIF is a member. 
    # @param vif_external_id Virtual network interface external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def global_infra_get_groups_for_vif(vif_external_id, opts = {})
      data, _status_code, _headers = global_infra_get_groups_for_vif_with_http_info(vif_external_id, opts)
      data
    end

    # Get groups for which the given VIF is a member
    # Get policy groups for which the given VIF is a member. 
    # @param vif_external_id Virtual network interface external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def global_infra_get_groups_for_vif_with_http_info(vif_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_groups_for_vif ...'
      end
      # verify the required parameter 'vif_external_id' is set
      if @api_client.config.client_side_validation && vif_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'vif_external_id' when calling InventoryApi.global_infra_get_groups_for_vif"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_vif, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_vif, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/virtual-network-interface-group-associations'

      # query parameters
      query_params = {}
      query_params[:'vif_external_id'] = vif_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_groups_for_vif\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given VM is a member
    # Get policy groups for which the given VM is a member. 
    # @param vm_external_id Virtual machine external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def global_infra_get_groups_for_vm(vm_external_id, opts = {})
      data, _status_code, _headers = global_infra_get_groups_for_vm_with_http_info(vm_external_id, opts)
      data
    end

    # Get groups for which the given VM is a member
    # Get policy groups for which the given VM is a member. 
    # @param vm_external_id Virtual machine external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def global_infra_get_groups_for_vm_with_http_info(vm_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_groups_for_vm ...'
      end
      # verify the required parameter 'vm_external_id' is set
      if @api_client.config.client_side_validation && vm_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'vm_external_id' when calling InventoryApi.global_infra_get_groups_for_vm"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_vm, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_groups_for_vm, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/virtual-machine-group-associations'

      # query parameters
      query_params = {}
      query_params[:'vm_external_id'] = vm_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_groups_for_vm\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get member types for a given Group
    # It retrieves member types for a given group. In case of nested groups, it calculates member types of child groups as well. Considers member type for members added via static members and dynamic membership criteria. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [GroupMemberTypeListResult]
    def global_infra_get_member_types_for_group(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_member_types_for_group_with_http_info(domain_id, group_id, opts)
      data
    end

    # Get member types for a given Group
    # It retrieves member types for a given group. In case of nested groups, it calculates member types of child groups as well. Considers member type for members added via static members and dynamic membership criteria. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(GroupMemberTypeListResult, Fixnum, Hash)>] GroupMemberTypeListResult data, response status code and response headers
    def global_infra_get_member_types_for_group_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_member_types_for_group ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_get_member_types_for_group"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_member_types_for_group"
      end
      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}/member-types'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupMemberTypeListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_member_types_for_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get PolicyContextProfile
    # Get a single PolicyContextProfile by id 
    # @param context_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [PolicyContextProfile]
    def global_infra_get_policy_context_profile(context_profile_id, opts = {})
      data, _status_code, _headers = global_infra_get_policy_context_profile_with_http_info(context_profile_id, opts)
      data
    end

    # Get PolicyContextProfile
    # Get a single PolicyContextProfile by id 
    # @param context_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyContextProfile, Fixnum, Hash)>] PolicyContextProfile data, response status code and response headers
    def global_infra_get_policy_context_profile_with_http_info(context_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.global_infra_get_policy_context_profile"
      end
      # resource path
      local_var_path = '/global-infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IP addresses that belong to this Tier-0 Group
    # Get IP addresses that belong to this Tier-0 Group. This API is applicable for Groups containing either VirtualMachine, VIF, Segment ,Segment Port or IP Address member type.For Groups containing other member types,an empty list is returned 
    # @param tier_0_id Tier-0 id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupIPMembersListResult]
    def global_infra_get_provider_group_ip_members(tier_0_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_provider_group_ip_members_with_http_info(tier_0_id, group_id, opts)
      data
    end

    # Get IP addresses that belong to this Tier-0 Group
    # Get IP addresses that belong to this Tier-0 Group. This API is applicable for Groups containing either VirtualMachine, VIF, Segment ,Segment Port or IP Address member type.For Groups containing other member types,an empty list is returned 
    # @param tier_0_id Tier-0 id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupIPMembersListResult, Fixnum, Hash)>] PolicyGroupIPMembersListResult data, response status code and response headers
    def global_infra_get_provider_group_ip_members_with_http_info(tier_0_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_provider_group_ip_members ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.global_infra_get_provider_group_ip_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_provider_group_ip_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_provider_group_ip_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_provider_group_ip_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/groups/{group-id}/members/ip-addresses'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupIPMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_provider_group_ip_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Virtual machines that belong to this Tier-0 Group
    # Get Virtual machines that belong to this Tier-0 Group. This API is applicable for Groups containing VirtualMachine member type. For Groups containing other member types,an empty list is returned. 
    # @param tier_0_id Tier-0 id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RealizedVirtualMachineListResult]
    def global_infra_get_provider_group_vm_members(tier_0_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_get_provider_group_vm_members_with_http_info(tier_0_id, group_id, opts)
      data
    end

    # Get Virtual machines that belong to this Tier-0 Group
    # Get Virtual machines that belong to this Tier-0 Group. This API is applicable for Groups containing VirtualMachine member type. For Groups containing other member types,an empty list is returned. 
    # @param tier_0_id Tier-0 id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RealizedVirtualMachineListResult, Fixnum, Hash)>] RealizedVirtualMachineListResult data, response status code and response headers
    def global_infra_get_provider_group_vm_members_with_http_info(tier_0_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_provider_group_vm_members ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.global_infra_get_provider_group_vm_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_get_provider_group_vm_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_provider_group_vm_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_get_provider_group_vm_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/groups/{group-id}/members/virtual-machines'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RealizedVirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_provider_group_vm_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get the VM tag replication policy specified by id
    # Get the VM tag replication policy specified by id. 
    # @param id ID of VM tag replication policy
    # @param [Hash] opts the optional parameters
    # @return [VMTagReplicationPolicy]
    def global_infra_get_vm_tag_replication_policy(id, opts = {})
      data, _status_code, _headers = global_infra_get_vm_tag_replication_policy_with_http_info(id, opts)
      data
    end

    # Get the VM tag replication policy specified by id
    # Get the VM tag replication policy specified by id. 
    # @param id ID of VM tag replication policy
    # @param [Hash] opts the optional parameters
    # @return [Array<(VMTagReplicationPolicy, Fixnum, Hash)>] VMTagReplicationPolicy data, response status code and response headers
    def global_infra_get_vm_tag_replication_policy_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_get_vm_tag_replication_policy ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InventoryApi.global_infra_get_vm_tag_replication_policy"
      end
      # resource path
      local_var_path = '/global-infra/vm-tag-replication-policies/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VMTagReplicationPolicy')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_get_vm_tag_replication_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all unique tags.
    # Returns paginated list of all unique tags. Supports filtering by scope, tag and source from which tags are synced. Supports starts with, ends with, equals and contains operators on scope and tag values. To filter tags by starts with on scope or tag, use '*' as suffix after the value. To filter tags by ends with on scope or tag, use '*' as prefix before the value. To filter tags by contain on scope or tag, use '*' as prefix and suffix on the value. Below special characters in the filter value needs to be escaped with hex values. - Character '&' needs to be escaped as '%26' - Character '[' needs to be escaped as '%5B' - Character ']' needs to be escaped as '%5D' - Character '+' needs to be escaped as '%2B' - Character '#' needs to be escaped as '%23' Sort option for list of unique tags is available only on tag and scope properties. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Source from which tags are synced.
    # @option opts [String] :tag Tag value
    # @return [TagInfoListResult]
    def global_infra_list_all_tags(opts = {})
      data, _status_code, _headers = global_infra_list_all_tags_with_http_info(opts)
      data
    end

    # List all unique tags.
    # Returns paginated list of all unique tags. Supports filtering by scope, tag and source from which tags are synced. Supports starts with, ends with, equals and contains operators on scope and tag values. To filter tags by starts with on scope or tag, use &#39;*&#39; as suffix after the value. To filter tags by ends with on scope or tag, use &#39;*&#39; as prefix before the value. To filter tags by contain on scope or tag, use &#39;*&#39; as prefix and suffix on the value. Below special characters in the filter value needs to be escaped with hex values. - Character &#39;&amp;&#39; needs to be escaped as &#39;%26&#39; - Character &#39;[&#39; needs to be escaped as &#39;%5B&#39; - Character &#39;]&#39; needs to be escaped as &#39;%5D&#39; - Character &#39;+&#39; needs to be escaped as &#39;%2B&#39; - Character &#39;#&#39; needs to be escaped as &#39;%23&#39; Sort option for list of unique tags is available only on tag and scope properties. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Source from which tags are synced.
    # @option opts [String] :tag Tag value
    # @return [Array<(TagInfoListResult, Fixnum, Hash)>] TagInfoListResult data, response status code and response headers
    def global_infra_list_all_tags_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_list_all_tags ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_all_tags, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_all_tags, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['Amazon', 'Azure', 'NSX', 'ANY'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of Amazon, Azure, NSX, ANY'
      end
      # resource path
      local_var_path = '/global-infra/tags'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'scope'] = opts[:'scope'] if !opts[:'scope'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'tag'] = opts[:'tag'] if !opts[:'tag'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TagInfoListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_list_all_tags\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Groups for a domain
    # List Groups for a domain. Groups can be filtered using member_types query parameter, which returns the groups that contains the specified member types. Multiple member types can be provided as comma separated values. The API also return groups having member type that are subset of provided member_types. 
    # @param domain_id Domain ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :member_types Comma Separated Member types
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GroupListResult]
    def global_infra_list_group_for_domain(domain_id, opts = {})
      data, _status_code, _headers = global_infra_list_group_for_domain_with_http_info(domain_id, opts)
      data
    end

    # List Groups for a domain
    # List Groups for a domain. Groups can be filtered using member_types query parameter, which returns the groups that contains the specified member types. Multiple member types can be provided as comma separated values. The API also return groups having member type that are subset of provided member_types. 
    # @param domain_id Domain ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :member_types Comma Separated Member types
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GroupListResult, Fixnum, Hash)>] GroupListResult data, response status code and response headers
    def global_infra_list_group_for_domain_with_http_info(domain_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_list_group_for_domain ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_list_group_for_domain"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_group_for_domain, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_group_for_domain, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups'.sub('{' + 'domain-id' + '}', domain_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'member_types'] = opts[:'member_types'] if !opts[:'member_types'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_list_group_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get PolicyContextProfiles
    # Get all PolicyContextProfiles 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def global_infra_list_policy_context_profiles(opts = {})
      data, _status_code, _headers = global_infra_list_policy_context_profiles_with_http_info(opts)
      data
    end

    # Get PolicyContextProfiles
    # Get all PolicyContextProfiles 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def global_infra_list_policy_context_profiles_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_list_policy_context_profiles ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_policy_context_profiles, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_policy_context_profiles, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/context-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_list_policy_context_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Policy Context Profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. Alternatively, to get a list of supported attributes and sub-attributes fire the following REST API GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom (default to SYSTEM)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def global_infra_list_profile_supported_attributes(opts = {})
      data, _status_code, _headers = global_infra_list_profile_supported_attributes_with_http_info(opts)
      data
    end

    # List Policy Context Profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. Alternatively, to get a list of supported attributes and sub-attributes fire the following REST API GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def global_infra_list_profile_supported_attributes_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_list_profile_supported_attributes ...'
      end
      if @api_client.config.client_side_validation && opts[:'attribute_source'] && !['ALL', 'CUSTOM', 'SYSTEM'].include?(opts[:'attribute_source'])
        fail ArgumentError, 'invalid value for "attribute_source", must be one of ALL, CUSTOM, SYSTEM'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_profile_supported_attributes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_profile_supported_attributes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/context-profiles/attributes'

      # query parameters
      query_params = {}
      query_params[:'attribute_key'] = opts[:'attribute_key'] if !opts[:'attribute_key'].nil?
      query_params[:'attribute_source'] = opts[:'attribute_source'] if !opts[:'attribute_source'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_list_profile_supported_attributes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Service entries for the given service
    # Paginated list of Service entries for the given service 
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceEntryListResult]
    def global_infra_list_service_entries(service_id, opts = {})
      data, _status_code, _headers = global_infra_list_service_entries_with_http_info(service_id, opts)
      data
    end

    # List Service entries for the given service
    # Paginated list of Service entries for the given service 
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceEntryListResult, Fixnum, Hash)>] ServiceEntryListResult data, response status code and response headers
    def global_infra_list_service_entries_with_http_info(service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_list_service_entries ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.global_infra_list_service_entries"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_service_entries, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_service_entries, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/services/{service-id}/service-entries'.sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceEntryListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_list_service_entries\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Services for infra
    # Paginated list of Services for infra. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :default_service Fetch all default services
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceListResult]
    def global_infra_list_services_for_tenant(opts = {})
      data, _status_code, _headers = global_infra_list_services_for_tenant_with_http_info(opts)
      data
    end

    # List Services for infra
    # Paginated list of Services for infra. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :default_service Fetch all default services
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceListResult, Fixnum, Hash)>] ServiceListResult data, response status code and response headers
    def global_infra_list_services_for_tenant_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_list_services_for_tenant ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_services_for_tenant, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_services_for_tenant, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/services'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'default_service'] = opts[:'default_service'] if !opts[:'default_service'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_list_services_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all objects assigned with matching scope and tag values
    # Paginated list of all objects assigned with matching scope and tag values. Objects are represented in form of resource reference. Sort option is available only on target_type and target_display_name properties. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :filter_by Comma-separated list of field names to filter tagged objects.
    # @option opts [String] :filter_text Filter text to restrict tagged objects list with matching filter text.
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :tag Tag value
    # @return [PolicyResourceReferenceListResult]
    def global_infra_list_tagged_objects(opts = {})
      data, _status_code, _headers = global_infra_list_tagged_objects_with_http_info(opts)
      data
    end

    # List all objects assigned with matching scope and tag values
    # Paginated list of all objects assigned with matching scope and tag values. Objects are represented in form of resource reference. Sort option is available only on target_type and target_display_name properties. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :filter_by Comma-separated list of field names to filter tagged objects.
    # @option opts [String] :filter_text Filter text to restrict tagged objects list with matching filter text.
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :tag Tag value
    # @return [Array<(PolicyResourceReferenceListResult, Fixnum, Hash)>] PolicyResourceReferenceListResult data, response status code and response headers
    def global_infra_list_tagged_objects_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_list_tagged_objects ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_tagged_objects, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_tagged_objects, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tags/effective-resources'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'filter_by'] = opts[:'filter_by'] if !opts[:'filter_by'].nil?
      query_params[:'filter_text'] = opts[:'filter_text'] if !opts[:'filter_text'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'scope'] = opts[:'scope'] if !opts[:'scope'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'tag'] = opts[:'tag'] if !opts[:'tag'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_list_tagged_objects\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Groups for Tier-0
    # Paginated list of all Groups for Tier-0. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :member_types Comma Separated Member types
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GroupListResult]
    def global_infra_list_tier0_group(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_list_tier0_group_with_http_info(tier_0_id, opts)
      data
    end

    # List Groups for Tier-0
    # Paginated list of all Groups for Tier-0. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :member_types Comma Separated Member types
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GroupListResult, Fixnum, Hash)>] GroupListResult data, response status code and response headers
    def global_infra_list_tier0_group_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_list_tier0_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.global_infra_list_tier0_group"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_tier0_group, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_tier0_group, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/groups'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'member_types'] = opts[:'member_types'] if !opts[:'member_types'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_list_tier0_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all VM tag replication policies
    # List all VM tag replication policies. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [VMTagReplicationPolicyListResult]
    def global_infra_list_vm_tag_replication_policies(opts = {})
      data, _status_code, _headers = global_infra_list_vm_tag_replication_policies_with_http_info(opts)
      data
    end

    # List all VM tag replication policies
    # List all VM tag replication policies. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(VMTagReplicationPolicyListResult, Fixnum, Hash)>] VMTagReplicationPolicyListResult data, response status code and response headers
    def global_infra_list_vm_tag_replication_policies_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_list_vm_tag_replication_policies ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_vm_tag_replication_policies, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.global_infra_list_vm_tag_replication_policies, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/vm-tag-replication-policies'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VMTagReplicationPolicyListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_list_vm_tag_replication_policies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can't have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \"custom_attributes\" id 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def global_infra_patch_create_or_update_policy_context_profile(context_profile_id, policy_context_profile, opts = {})
      global_infra_patch_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts)
      nil
    end

    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can&#39;t have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \&quot;custom_attributes\&quot; id 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_patch_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_patch_create_or_update_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.global_infra_patch_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'policy_context_profile' is set
      if @api_client.config.client_side_validation && policy_context_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_context_profile' when calling InventoryApi.global_infra_patch_create_or_update_policy_context_profile"
      end
      # resource path
      local_var_path = '/global-infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_context_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_patch_create_or_update_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update custom attribute value list for given attribute key.
    # This API updates custom attribute value list for given key in the request. This replaces the  existing list with the list provided in the request 
    # @param policy_custom_attributes 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def global_infra_patch_custom_attribute(policy_custom_attributes, opts = {})
      global_infra_patch_custom_attribute_with_http_info(policy_custom_attributes, opts)
      nil
    end

    # Update custom attribute value list for given attribute key.
    # This API updates custom attribute value list for given key in the request. This replaces the  existing list with the list provided in the request 
    # @param policy_custom_attributes 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_patch_custom_attribute_with_http_info(policy_custom_attributes, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_patch_custom_attribute ...'
      end
      # verify the required parameter 'policy_custom_attributes' is set
      if @api_client.config.client_side_validation && policy_custom_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_custom_attributes' when calling InventoryApi.global_infra_patch_custom_attribute"
      end
      # resource path
      local_var_path = '/global-infra/context-profiles/custom-attributes/default'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_custom_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_patch_custom_attribute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update custom object attribute value list for given attribute key
    # This API updates custom attribute value list for given key.  <br> This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default for create/update custom object attribute value list for given attribute key 
    # @param policy_attributes 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def global_infra_patch_custom_attribute_list(policy_attributes, opts = {})
      global_infra_patch_custom_attribute_list_with_http_info(policy_attributes, opts)
      nil
    end

    # Update custom object attribute value list for given attribute key
    # This API updates custom attribute value list for given key.  &lt;br&gt; This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default for create/update custom object attribute value list for given attribute key 
    # @param policy_attributes 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_patch_custom_attribute_list_with_http_info(policy_attributes, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_patch_custom_attribute_list ...'
      end
      # verify the required parameter 'policy_attributes' is set
      if @api_client.config.client_side_validation && policy_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_attributes' when calling InventoryApi.global_infra_patch_custom_attribute_list"
      end
      # resource path
      local_var_path = '/global-infra/context-profiles/custom-attributes'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_patch_custom_attribute_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can't have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \"custom_attributes\" id 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [PolicyContextProfile]
    def global_infra_put_create_or_update_policy_context_profile(context_profile_id, policy_context_profile, opts = {})
      data, _status_code, _headers = global_infra_put_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts)
      data
    end

    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can&#39;t have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \&quot;custom_attributes\&quot; id 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(PolicyContextProfile, Fixnum, Hash)>] PolicyContextProfile data, response status code and response headers
    def global_infra_put_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_put_create_or_update_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.global_infra_put_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'policy_context_profile' is set
      if @api_client.config.client_side_validation && policy_context_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_context_profile' when calling InventoryApi.global_infra_put_create_or_update_policy_context_profile"
      end
      # resource path
      local_var_path = '/global-infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_context_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_put_create_or_update_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read group
    # Read group
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [Group]
    def global_infra_read_group_for_domain(domain_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_read_group_for_domain_with_http_info(domain_id, group_id, opts)
      data
    end

    # Read group
    # Read group
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(Group, Fixnum, Hash)>] Group data, response status code and response headers
    def global_infra_read_group_for_domain_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_read_group_for_domain ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.global_infra_read_group_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_read_group_for_domain"
      end
      # resource path
      local_var_path = '/global-infra/domains/{domain-id}/groups/{group-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Group')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_read_group_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Service entry
    # Service entry
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param [Hash] opts the optional parameters
    # @return [ServiceEntry]
    def global_infra_read_service_entry(service_id, service_entry_id, opts = {})
      data, _status_code, _headers = global_infra_read_service_entry_with_http_info(service_id, service_entry_id, opts)
      data
    end

    # Service entry
    # Service entry
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceEntry, Fixnum, Hash)>] ServiceEntry data, response status code and response headers
    def global_infra_read_service_entry_with_http_info(service_id, service_entry_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_read_service_entry ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.global_infra_read_service_entry"
      end
      # verify the required parameter 'service_entry_id' is set
      if @api_client.config.client_side_validation && service_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry_id' when calling InventoryApi.global_infra_read_service_entry"
      end
      # resource path
      local_var_path = '/global-infra/services/{service-id}/service-entries/{service-entry-id}'.sub('{' + 'service-id' + '}', service_id.to_s).sub('{' + 'service-entry-id' + '}', service_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_read_service_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a service
    # Read a service
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @return [Service]
    def global_infra_read_service_for_tenant(service_id, opts = {})
      data, _status_code, _headers = global_infra_read_service_for_tenant_with_http_info(service_id, opts)
      data
    end

    # Read a service
    # Read a service
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(Service, Fixnum, Hash)>] Service data, response status code and response headers
    def global_infra_read_service_for_tenant_with_http_info(service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_read_service_for_tenant ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.global_infra_read_service_for_tenant"
      end
      # resource path
      local_var_path = '/global-infra/services/{service-id}'.sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Service')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_read_service_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0 Group
    # Read Tier-0 Group
    # @param tier_0_id 
    # @param group_id 
    # @param [Hash] opts the optional parameters
    # @return [Group]
    def global_infra_read_tier0_group(tier_0_id, group_id, opts = {})
      data, _status_code, _headers = global_infra_read_tier0_group_with_http_info(tier_0_id, group_id, opts)
      data
    end

    # Read Tier-0 Group
    # Read Tier-0 Group
    # @param tier_0_id 
    # @param group_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Group, Fixnum, Hash)>] Group data, response status code and response headers
    def global_infra_read_tier0_group_with_http_info(tier_0_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.global_infra_read_tier0_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.global_infra_read_tier0_group"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.global_infra_read_tier0_group"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/groups/{group-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Group')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#global_infra_read_tier0_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all unique tags.
    # Returns paginated list of all unique tags. Supports filtering by scope, tag and source from which tags are synced. Supports starts with, ends with, equals and contains operators on scope and tag values. To filter tags by starts with on scope or tag, use '*' as suffix after the value. To filter tags by ends with on scope or tag, use '*' as prefix before the value. To filter tags by contain on scope or tag, use '*' as prefix and suffix on the value. Below special characters in the filter value needs to be escaped with hex values. - Character '&' needs to be escaped as '%26' - Character '[' needs to be escaped as '%5B' - Character ']' needs to be escaped as '%5D' - Character '+' needs to be escaped as '%2B' - Character '#' needs to be escaped as '%23' Sort option for list of unique tags is available only on tag and scope properties. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Source from which tags are synced.
    # @option opts [String] :tag Tag value
    # @return [TagInfoListResult]
    def list_all_tags(opts = {})
      data, _status_code, _headers = list_all_tags_with_http_info(opts)
      data
    end

    # List all unique tags.
    # Returns paginated list of all unique tags. Supports filtering by scope, tag and source from which tags are synced. Supports starts with, ends with, equals and contains operators on scope and tag values. To filter tags by starts with on scope or tag, use &#39;*&#39; as suffix after the value. To filter tags by ends with on scope or tag, use &#39;*&#39; as prefix before the value. To filter tags by contain on scope or tag, use &#39;*&#39; as prefix and suffix on the value. Below special characters in the filter value needs to be escaped with hex values. - Character &#39;&amp;&#39; needs to be escaped as &#39;%26&#39; - Character &#39;[&#39; needs to be escaped as &#39;%5B&#39; - Character &#39;]&#39; needs to be escaped as &#39;%5D&#39; - Character &#39;+&#39; needs to be escaped as &#39;%2B&#39; - Character &#39;#&#39; needs to be escaped as &#39;%23&#39; Sort option for list of unique tags is available only on tag and scope properties. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Source from which tags are synced.
    # @option opts [String] :tag Tag value
    # @return [Array<(TagInfoListResult, Fixnum, Hash)>] TagInfoListResult data, response status code and response headers
    def list_all_tags_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_all_tags ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_all_tags, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_all_tags, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['Amazon', 'Azure', 'NSX', 'ANY'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of Amazon, Azure, NSX, ANY'
      end
      # resource path
      local_var_path = '/infra/tags'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'scope'] = opts[:'scope'] if !opts[:'scope'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'tag'] = opts[:'tag'] if !opts[:'tag'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TagInfoListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_all_tags\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all virtual machines which are not part of any group
    # This API filters objects of type virtual machine which are not part of any group. This API also gives some VM details such as VM name, IDs and the current state of the VMs. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [VirtualMachineListResult]
    def list_all_un_associated_virtual_machines(opts = {})
      data, _status_code, _headers = list_all_un_associated_virtual_machines_with_http_info(opts)
      data
    end

    # List all virtual machines which are not part of any group
    # This API filters objects of type virtual machine which are not part of any group. This API also gives some VM details such as VM name, IDs and the current state of the VMs. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(VirtualMachineListResult, Fixnum, Hash)>] VirtualMachineListResult data, response status code and response headers
    def list_all_un_associated_virtual_machines_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_all_un_associated_virtual_machines ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_all_un_associated_virtual_machines, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_all_un_associated_virtual_machines, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/realized-state/unassociated-virtual-machines'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_all_un_associated_virtual_machines\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all virtual machines
    # This API filters objects of type virtual machine. This API also gives some VM details such as VM name, IDs and the current state of the VMs. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [VirtualMachineListResult]
    def list_all_virtual_machines(opts = {})
      data, _status_code, _headers = list_all_virtual_machines_with_http_info(opts)
      data
    end

    # List all virtual machines
    # This API filters objects of type virtual machine. This API also gives some VM details such as VM name, IDs and the current state of the VMs. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(VirtualMachineListResult, Fixnum, Hash)>] VirtualMachineListResult data, response status code and response headers
    def list_all_virtual_machines_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_all_virtual_machines ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_all_virtual_machines, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_all_virtual_machines, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/realized-state/virtual-machines'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_all_virtual_machines\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Context Profile supported attribute types
    # Returns supported attribute type strings for Context Profile. 
    # @param [Hash] opts the optional parameters
    # @return [ProfileSupportedAttributeTypesResult]
    def list_context_profile_supported_attributes_types(opts = {})
      data, _status_code, _headers = list_context_profile_supported_attributes_types_with_http_info(opts)
      data
    end

    # List Context Profile supported attribute types
    # Returns supported attribute type strings for Context Profile. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ProfileSupportedAttributeTypesResult, Fixnum, Hash)>] ProfileSupportedAttributeTypesResult data, response status code and response headers
    def list_context_profile_supported_attributes_types_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_context_profile_supported_attributes_types ...'
      end
      # resource path
      local_var_path = '/infra/context-profiles/attribute-types'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ProfileSupportedAttributeTypesResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_context_profile_supported_attributes_types\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Groups for a domain
    # List Groups for a domain. Groups can be filtered using member_types query parameter, which returns the groups that contains the specified member types. Multiple member types can be provided as comma separated values. The API also return groups having member type that are subset of provided member_types. 
    # @param domain_id Domain ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :member_types Comma Separated Member types
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GroupListResult]
    def list_group_for_domain(domain_id, opts = {})
      data, _status_code, _headers = list_group_for_domain_with_http_info(domain_id, opts)
      data
    end

    # List Groups for a domain
    # List Groups for a domain. Groups can be filtered using member_types query parameter, which returns the groups that contains the specified member types. Multiple member types can be provided as comma separated values. The API also return groups having member type that are subset of provided member_types. 
    # @param domain_id Domain ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :member_types Comma Separated Member types
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GroupListResult, Fixnum, Hash)>] GroupListResult data, response status code and response headers
    def list_group_for_domain_with_http_info(domain_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_group_for_domain ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.list_group_for_domain"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_group_for_domain, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_group_for_domain, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups'.sub('{' + 'domain-id' + '}', domain_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'member_types'] = opts[:'member_types'] if !opts[:'member_types'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_group_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List l7 access profile entries
    # API will list all l7 access profiles entries
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [L7AccessEntryListResult]
    def list_l7_access_entries(l7_access_profile_id, opts = {})
      data, _status_code, _headers = list_l7_access_entries_with_http_info(l7_access_profile_id, opts)
      data
    end

    # List l7 access profile entries
    # API will list all l7 access profiles entries
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(L7AccessEntryListResult, Fixnum, Hash)>] L7AccessEntryListResult data, response status code and response headers
    def list_l7_access_entries_with_http_info(l7_access_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_l7_access_entries ...'
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.list_l7_access_entries"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_l7_access_entries, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_l7_access_entries, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/l7-access-profiles/{l7-access-profile-id}/entries'.sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessEntryListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_l7_access_entries\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Policy L7 access profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom (default to SYSTEM)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def list_l7_access_profile_profile_supported_attributes(opts = {})
      data, _status_code, _headers = list_l7_access_profile_profile_supported_attributes_with_http_info(opts)
      data
    end

    # List Policy L7 access profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def list_l7_access_profile_profile_supported_attributes_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_l7_access_profile_profile_supported_attributes ...'
      end
      if @api_client.config.client_side_validation && opts[:'attribute_source'] && !['ALL', 'CUSTOM', 'SYSTEM'].include?(opts[:'attribute_source'])
        fail ArgumentError, 'invalid value for "attribute_source", must be one of ALL, CUSTOM, SYSTEM'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_l7_access_profile_profile_supported_attributes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_l7_access_profile_profile_supported_attributes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/l7-access-profiles/attributes'

      # query parameters
      query_params = {}
      query_params[:'attribute_key'] = opts[:'attribute_key'] if !opts[:'attribute_key'].nil?
      query_params[:'attribute_source'] = opts[:'attribute_source'] if !opts[:'attribute_source'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_l7_access_profile_profile_supported_attributes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List l7 access Profiles
    # API will list all l7 access Profiles
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_entry_count Include the count of entries in L7 Profile (default to false)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [L7AccessProfileListResult]
    def list_l7_access_profiles(opts = {})
      data, _status_code, _headers = list_l7_access_profiles_with_http_info(opts)
      data
    end

    # List l7 access Profiles
    # API will list all l7 access Profiles
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_entry_count Include the count of entries in L7 Profile
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(L7AccessProfileListResult, Fixnum, Hash)>] L7AccessProfileListResult data, response status code and response headers
    def list_l7_access_profiles_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_l7_access_profiles ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_l7_access_profiles, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_l7_access_profiles, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/l7-access-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_entry_count'] = opts[:'include_entry_count'] if !opts[:'include_entry_count'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_l7_access_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get PolicyContextProfiles
    # Get all PolicyContextProfiles 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def list_policy_context_profiles(opts = {})
      data, _status_code, _headers = list_policy_context_profiles_with_http_info(opts)
      data
    end

    # Get PolicyContextProfiles
    # Get all PolicyContextProfiles 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def list_policy_context_profiles_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_policy_context_profiles ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_policy_context_profiles, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_policy_context_profiles, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/context-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_policy_context_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List static mime contents
    # API will list all static mime contents
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [StaticMimeContentListResult]
    def list_policy_static_mime_contents(opts = {})
      data, _status_code, _headers = list_policy_static_mime_contents_with_http_info(opts)
      data
    end

    # List static mime contents
    # API will list all static mime contents
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(StaticMimeContentListResult, Fixnum, Hash)>] StaticMimeContentListResult data, response status code and response headers
    def list_policy_static_mime_contents_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_policy_static_mime_contents ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_policy_static_mime_contents, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_policy_static_mime_contents, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/static-mime-contents'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticMimeContentListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_policy_static_mime_contents\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Policy Context Profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. Alternatively, to get a list of supported attributes and sub-attributes fire the following REST API GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom (default to SYSTEM)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def list_profile_supported_attributes(opts = {})
      data, _status_code, _headers = list_profile_supported_attributes_with_http_info(opts)
      data
    end

    # List Policy Context Profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. Alternatively, to get a list of supported attributes and sub-attributes fire the following REST API GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def list_profile_supported_attributes_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_profile_supported_attributes ...'
      end
      if @api_client.config.client_side_validation && opts[:'attribute_source'] && !['ALL', 'CUSTOM', 'SYSTEM'].include?(opts[:'attribute_source'])
        fail ArgumentError, 'invalid value for "attribute_source", must be one of ALL, CUSTOM, SYSTEM'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_profile_supported_attributes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_profile_supported_attributes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/context-profiles/attributes'

      # query parameters
      query_params = {}
      query_params[:'attribute_key'] = opts[:'attribute_key'] if !opts[:'attribute_key'].nil?
      query_params[:'attribute_source'] = opts[:'attribute_source'] if !opts[:'attribute_source'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_profile_supported_attributes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Service entries for the given service
    # Paginated list of Service entries for the given service 
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceEntryListResult]
    def list_service_entries(service_id, opts = {})
      data, _status_code, _headers = list_service_entries_with_http_info(service_id, opts)
      data
    end

    # List Service entries for the given service
    # Paginated list of Service entries for the given service 
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceEntryListResult, Fixnum, Hash)>] ServiceEntryListResult data, response status code and response headers
    def list_service_entries_with_http_info(service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_service_entries ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.list_service_entries"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_service_entries, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_service_entries, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/services/{service-id}/service-entries'.sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceEntryListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_service_entries\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Services for infra
    # Paginated list of Services for infra. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :default_service Fetch all default services
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceListResult]
    def list_services_for_tenant(opts = {})
      data, _status_code, _headers = list_services_for_tenant_with_http_info(opts)
      data
    end

    # List Services for infra
    # Paginated list of Services for infra. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :default_service Fetch all default services
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceListResult, Fixnum, Hash)>] ServiceListResult data, response status code and response headers
    def list_services_for_tenant_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_services_for_tenant ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_services_for_tenant, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_services_for_tenant, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/services'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'default_service'] = opts[:'default_service'] if !opts[:'default_service'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_services_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Lists all the system excluded virtual machines.
    # Lists all the system virtual machines that are auto excluded in firewall exclude list (example -Partner and Edge VMs etc) 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :query Search query
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [VirtualMachineListResult]
    def list_system_excluded_vms(opts = {})
      data, _status_code, _headers = list_system_excluded_vms_with_http_info(opts)
      data
    end

    # Lists all the system excluded virtual machines.
    # Lists all the system virtual machines that are auto excluded in firewall exclude list (example -Partner and Edge VMs etc) 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :query Search query
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(VirtualMachineListResult, Fixnum, Hash)>] VirtualMachineListResult data, response status code and response headers
    def list_system_excluded_vms_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_system_excluded_vms ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_system_excluded_vms, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_system_excluded_vms, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/realized-state/system-excluded-virtual-machines'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'query'] = opts[:'query'] if !opts[:'query'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_system_excluded_vms\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Lists all the system virtual machines.
    # Lists all the system virtual machines (example -Partner and Edge VMs etc) 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :query Search query
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [VirtualMachineListResult]
    def list_system_vms(opts = {})
      data, _status_code, _headers = list_system_vms_with_http_info(opts)
      data
    end

    # Lists all the system virtual machines.
    # Lists all the system virtual machines (example -Partner and Edge VMs etc) 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :query Search query
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(VirtualMachineListResult, Fixnum, Hash)>] VirtualMachineListResult data, response status code and response headers
    def list_system_vms_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_system_vms ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_system_vms, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_system_vms, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/realized-state/system-virtual-machines'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'query'] = opts[:'query'] if !opts[:'query'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_system_vms\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all objects assigned with matching scope and tag values
    # Paginated list of all objects assigned with matching scope and tag values. Objects are represented in form of resource reference. Sort option is available only on target_type and target_display_name properties. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :filter_by Comma-separated list of field names to filter tagged objects.
    # @option opts [String] :filter_text Filter text to restrict tagged objects list with matching filter text.
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :tag Tag value
    # @return [PolicyResourceReferenceListResult]
    def list_tagged_objects(opts = {})
      data, _status_code, _headers = list_tagged_objects_with_http_info(opts)
      data
    end

    # List all objects assigned with matching scope and tag values
    # Paginated list of all objects assigned with matching scope and tag values. Objects are represented in form of resource reference. Sort option is available only on target_type and target_display_name properties. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :filter_by Comma-separated list of field names to filter tagged objects.
    # @option opts [String] :filter_text Filter text to restrict tagged objects list with matching filter text.
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :tag Tag value
    # @return [Array<(PolicyResourceReferenceListResult, Fixnum, Hash)>] PolicyResourceReferenceListResult data, response status code and response headers
    def list_tagged_objects_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_tagged_objects ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_tagged_objects, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_tagged_objects, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tags/effective-resources'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'filter_by'] = opts[:'filter_by'] if !opts[:'filter_by'].nil?
      query_params[:'filter_text'] = opts[:'filter_text'] if !opts[:'filter_text'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'scope'] = opts[:'scope'] if !opts[:'scope'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'tag'] = opts[:'tag'] if !opts[:'tag'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_tagged_objects\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Groups for Tier-0
    # Paginated list of all Groups for Tier-0. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :member_types Comma Separated Member types
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GroupListResult]
    def list_tier0_group(tier_0_id, opts = {})
      data, _status_code, _headers = list_tier0_group_with_http_info(tier_0_id, opts)
      data
    end

    # List Groups for Tier-0
    # Paginated list of all Groups for Tier-0. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :member_types Comma Separated Member types
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GroupListResult, Fixnum, Hash)>] GroupListResult data, response status code and response headers
    def list_tier0_group_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_tier0_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.list_tier0_group"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_tier0_group, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_tier0_group, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/groups'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'member_types'] = opts[:'member_types'] if !opts[:'member_types'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_tier0_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Listing of Virtual machines on the NSX Manager
    # This API filters objects of type virtual machines from the specified NSX Manager.  <br> This API has been deprecated. Please use the new API GET /infra/realized-state/virtual-machines 
    # @param enforcement_point_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :dsl Search DSL (domain specific language) query
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :query Search query
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [SearchResponse]
    def list_virtual_machines_on_enforcement_point(enforcement_point_name, opts = {})
      data, _status_code, _headers = list_virtual_machines_on_enforcement_point_with_http_info(enforcement_point_name, opts)
      data
    end

    # Listing of Virtual machines on the NSX Manager
    # This API filters objects of type virtual machines from the specified NSX Manager.  &lt;br&gt; This API has been deprecated. Please use the new API GET /infra/realized-state/virtual-machines 
    # @param enforcement_point_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :dsl Search DSL (domain specific language) query
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :query Search query
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(SearchResponse, Fixnum, Hash)>] SearchResponse data, response status code and response headers
    def list_virtual_machines_on_enforcement_point_with_http_info(enforcement_point_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.list_virtual_machines_on_enforcement_point ...'
      end
      # verify the required parameter 'enforcement_point_name' is set
      if @api_client.config.client_side_validation && enforcement_point_name.nil?
        fail ArgumentError, "Missing the required parameter 'enforcement_point_name' when calling InventoryApi.list_virtual_machines_on_enforcement_point"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_virtual_machines_on_enforcement_point, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.list_virtual_machines_on_enforcement_point, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/realized-state/enforcement-points/{enforcement-point-name}/virtual-machines'.sub('{' + 'enforcement-point-name' + '}', enforcement_point_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'dsl'] = opts[:'dsl'] if !opts[:'dsl'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'query'] = opts[:'query'] if !opts[:'query'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SearchResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#list_virtual_machines_on_enforcement_point\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key. The values in the  request will be added or removed from the existing list. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param policy_custom_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_add_remove_custom_attribute(org_id, project_id, policy_custom_attributes, action, opts = {})
      orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_with_http_info(org_id, project_id, policy_custom_attributes, action, opts)
      nil
    end

    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key. The values in the  request will be added or removed from the existing list. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param policy_custom_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_with_http_info(org_id, project_id, policy_custom_attributes, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_add_remove_custom_attribute ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_add_remove_custom_attribute"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_add_remove_custom_attribute"
      end
      # verify the required parameter 'policy_custom_attributes' is set
      if @api_client.config.client_side_validation && policy_custom_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_custom_attributes' when calling InventoryApi.orgs_org_id_projects_project_id_infra_add_remove_custom_attribute"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.orgs_org_id_projects_project_id_infra_add_remove_custom_attribute"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles/custom-attributes/default'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_custom_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_add_remove_custom_attribute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key.  <br> This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default to Adds/Removes custom attribute values from list 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param policy_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_values(org_id, project_id, policy_attributes, action, opts = {})
      orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_values_with_http_info(org_id, project_id, policy_attributes, action, opts)
      nil
    end

    # Adds/Removes custom attribute values from list
    # This API adds/removes custom attribute values from list for a given attribute key.  &lt;br&gt; This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default to Adds/Removes custom attribute values from list 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param policy_attributes 
    # @param action Add or Remove Custom Context Profile Attribute values.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_values_with_http_info(org_id, project_id, policy_attributes, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_values ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_values"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_values"
      end
      # verify the required parameter 'policy_attributes' is set
      if @api_client.config.client_side_validation && policy_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_attributes' when calling InventoryApi.orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_values"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_values"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles/custom-attributes'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_add_remove_custom_attribute_values\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add or Remove external id based members from/to a Group 
    # It will add or remove the specified members having external ID for a given expression of a group. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param group_member_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members(org_id, project_id, domain_id, group_id, expression_id, group_member_list, action, opts = {})
      orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members_with_http_info(org_id, project_id, domain_id, group_id, expression_id, group_member_list, action, opts)
      nil
    end

    # Add or Remove external id based members from/to a Group 
    # It will add or remove the specified members having external ID for a given expression of a group. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param group_member_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members_with_http_info(org_id, project_id, domain_id, group_id, expression_id, group_member_list, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members"
      end
      # verify the required parameter 'group_member_list' is set
      if @api_client.config.client_side_validation && group_member_list.nil?
        fail ArgumentError, "Missing the required parameter 'group_member_list' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/external-id-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(group_member_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_addor_remove_group_external_id_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add or Remove IP Addresses from/to a Group 
    # It will add or remove the specified IP Addresses from a given expression of a group. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param ip_address_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses(org_id, project_id, domain_id, group_id, expression_id, ip_address_list, action, opts = {})
      orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses_with_http_info(org_id, project_id, domain_id, group_id, expression_id, ip_address_list, action, opts)
      nil
    end

    # Add or Remove IP Addresses from/to a Group 
    # It will add or remove the specified IP Addresses from a given expression of a group. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param ip_address_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses_with_http_info(org_id, project_id, domain_id, group_id, expression_id, ip_address_list, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses"
      end
      # verify the required parameter 'ip_address_list' is set
      if @api_client.config.client_side_validation && ip_address_list.nil?
        fail ArgumentError, "Missing the required parameter 'ip_address_list' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/ip-address-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ip_address_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_addor_remove_group_ip_addresses\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add or Remove MAC Addresses from/to a Group 
    # It will add or remove the specified MAC Addresses from a given expression of a group. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param mac_address_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses(org_id, project_id, domain_id, group_id, expression_id, mac_address_list, action, opts = {})
      orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses_with_http_info(org_id, project_id, domain_id, group_id, expression_id, mac_address_list, action, opts)
      nil
    end

    # Add or Remove MAC Addresses from/to a Group 
    # It will add or remove the specified MAC Addresses from a given expression of a group. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param mac_address_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses_with_http_info(org_id, project_id, domain_id, group_id, expression_id, mac_address_list, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses"
      end
      # verify the required parameter 'mac_address_list' is set
      if @api_client.config.client_side_validation && mac_address_list.nil?
        fail ArgumentError, "Missing the required parameter 'mac_address_list' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/mac-address-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(mac_address_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_addor_remove_group_mac_addresses\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add or Remove path based members from/to a Group 
    # It will add or remove the specified members having path for a given expression of a group. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param group_member_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_addor_remove_group_path_members(org_id, project_id, domain_id, group_id, expression_id, group_member_list, action, opts = {})
      orgs_org_id_projects_project_id_infra_addor_remove_group_path_members_with_http_info(org_id, project_id, domain_id, group_id, expression_id, group_member_list, action, opts)
      nil
    end

    # Add or Remove path based members from/to a Group 
    # It will add or remove the specified members having path for a given expression of a group. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id 
    # @param group_id 
    # @param expression_id 
    # @param group_member_list 
    # @param action Add or Remove group members.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_addor_remove_group_path_members_with_http_info(org_id, project_id, domain_id, group_id, expression_id, group_member_list, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_path_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_path_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_path_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_path_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_path_members"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_path_members"
      end
      # verify the required parameter 'group_member_list' is set
      if @api_client.config.client_side_validation && group_member_list.nil?
        fail ArgumentError, "Missing the required parameter 'group_member_list' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_path_members"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling InventoryApi.orgs_org_id_projects_project_id_infra_addor_remove_group_path_members"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['add', 'remove'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of add, remove"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/path-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(group_member_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_addor_remove_group_path_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Apply tags on bare metal server
    # Allows an admin to apply multiple tags to a bare metal server. This operation does not store the intent on the policy side. This operation will replace the existing tags on the bare metal server with the ones that have been passed. If the application of tag fails, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g constraints like max tags limit exceeded, etc. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param bare_metal_server_tag_list 
    # @param [Hash] opts the optional parameters
    # @return [BareMetalServerTagList]
    def orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server(org_id, project_id, bare_metal_server_tag_list, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server_with_http_info(org_id, project_id, bare_metal_server_tag_list, opts)
      data
    end

    # Apply tags on bare metal server
    # Allows an admin to apply multiple tags to a bare metal server. This operation does not store the intent on the policy side. This operation will replace the existing tags on the bare metal server with the ones that have been passed. If the application of tag fails, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g constraints like max tags limit exceeded, etc. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param bare_metal_server_tag_list 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BareMetalServerTagList, Fixnum, Hash)>] BareMetalServerTagList data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server_with_http_info(org_id, project_id, bare_metal_server_tag_list, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server"
      end
      # verify the required parameter 'bare_metal_server_tag_list' is set
      if @api_client.config.client_side_validation && bare_metal_server_tag_list.nil?
        fail ArgumentError, "Missing the required parameter 'bare_metal_server_tag_list' when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/baremetal-servers/tags'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bare_metal_server_tag_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BareMetalServerTagList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Apply tags on bare metal server interface
    # Allows an admin to apply multiple tags to a bare metal server interface. This operation does not store the intent on the policy side. This operation will replace the existing tags on the bare metal server interface with the ones that have been passed. If the application of tag fails, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g constraints like max tags limit exceeded, etc. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param bare_metal_server_interface_tag_list 
    # @param [Hash] opts the optional parameters
    # @return [BareMetalServerInterfaceTagList]
    def orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server_interface(org_id, project_id, bare_metal_server_interface_tag_list, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server_interface_with_http_info(org_id, project_id, bare_metal_server_interface_tag_list, opts)
      data
    end

    # Apply tags on bare metal server interface
    # Allows an admin to apply multiple tags to a bare metal server interface. This operation does not store the intent on the policy side. This operation will replace the existing tags on the bare metal server interface with the ones that have been passed. If the application of tag fails, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g constraints like max tags limit exceeded, etc. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param bare_metal_server_interface_tag_list 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BareMetalServerInterfaceTagList, Fixnum, Hash)>] BareMetalServerInterfaceTagList data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server_interface_with_http_info(org_id, project_id, bare_metal_server_interface_tag_list, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server_interface ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server_interface"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server_interface"
      end
      # verify the required parameter 'bare_metal_server_interface_tag_list' is set
      if @api_client.config.client_side_validation && bare_metal_server_interface_tag_list.nil?
        fail ArgumentError, "Missing the required parameter 'bare_metal_server_interface_tag_list' when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server_interface"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/baremetal-server-interfaces/tags'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bare_metal_server_interface_tag_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BareMetalServerInterfaceTagList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_apply_tag_on_bare_metal_server_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Apply tags on virtual machine
    # Allows an admin to apply multiple tags to a virtual machine. This operation does not store the intent on the policy side. It applies the tag directly on the specified enforcement point. This operation will replace the existing tags on the virtual machine with the ones that have been passed. If the application of tag fails on the enforcement point, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g enforcement point is down, Enforcement point could not apply the tag due to constraints like max tags limit exceeded, etc. NOTE: The \"virtual_machine_id\" field in the payload will be ignored and the virtual machine ID provided in the URL will be honored. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param virtual_machine_id 
    # @param virtual_machine_tags_update 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine(org_id, project_id, virtual_machine_id, virtual_machine_tags_update, opts = {})
      orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine_with_http_info(org_id, project_id, virtual_machine_id, virtual_machine_tags_update, opts)
      nil
    end

    # Apply tags on virtual machine
    # Allows an admin to apply multiple tags to a virtual machine. This operation does not store the intent on the policy side. It applies the tag directly on the specified enforcement point. This operation will replace the existing tags on the virtual machine with the ones that have been passed. If the application of tag fails on the enforcement point, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g enforcement point is down, Enforcement point could not apply the tag due to constraints like max tags limit exceeded, etc. NOTE: The \&quot;virtual_machine_id\&quot; field in the payload will be ignored and the virtual machine ID provided in the URL will be honored. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param virtual_machine_id 
    # @param virtual_machine_tags_update 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine_with_http_info(org_id, project_id, virtual_machine_id, virtual_machine_tags_update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine"
      end
      # verify the required parameter 'virtual_machine_id' is set
      if @api_client.config.client_side_validation && virtual_machine_id.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_machine_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine"
      end
      # verify the required parameter 'virtual_machine_tags_update' is set
      if @api_client.config.client_side_validation && virtual_machine_tags_update.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_machine_tags_update' when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/realized-state/virtual-machines/{virtual-machine-id}/tags'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'virtual-machine-id' + '}', virtual_machine_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(virtual_machine_tags_update)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_apply_tag_on_virtual_machine\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create L7 Access Profile entry
    # API will create L7 Access Profile entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param l7_access_entry 
    # @param [Hash] opts the optional parameters
    # @return [L7AccessEntry]
    def orgs_org_id_projects_project_id_infra_create_or_update_l7_access_entry(org_id, project_id, l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_create_or_update_l7_access_entry_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts)
      data
    end

    # Create L7 Access Profile entry
    # API will create L7 Access Profile entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param l7_access_entry 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L7AccessEntry, Fixnum, Hash)>] L7AccessEntry data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_create_or_update_l7_access_entry_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_entry ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_entry"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_entry"
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry_id' is set
      if @api_client.config.client_side_validation && l7_access_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry' is set
      if @api_client.config.client_side_validation && l7_access_entry.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry' when calling InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_entry"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles/{l7-access-profile-id}/entries/{l7-access-entry-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s).sub('{' + 'l7-access-entry-id' + '}', l7_access_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l7_access_entry)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_create_or_update_l7_access_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update L7 Access Profile
    # API will update L7 Access Profile
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param l7_access_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [L7AccessProfile]
    def orgs_org_id_projects_project_id_infra_create_or_update_l7_access_profile(org_id, project_id, l7_access_profile_id, l7_access_profile, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_create_or_update_l7_access_profile_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_profile, opts)
      data
    end

    # Update L7 Access Profile
    # API will update L7 Access Profile
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param l7_access_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(L7AccessProfile, Fixnum, Hash)>] L7AccessProfile data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_create_or_update_l7_access_profile_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_profile ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_profile"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_profile"
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_profile"
      end
      # verify the required parameter 'l7_access_profile' is set
      if @api_client.config.client_side_validation && l7_access_profile.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile' when calling InventoryApi.orgs_org_id_projects_project_id_infra_create_or_update_l7_access_profile"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles/{l7-access-profile-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l7_access_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_create_or_update_l7_access_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Group
    # Delete the group with group_id under domain domain_id. The force query parameter supported on the API is deprecated. Usage of the force query parameter does not alter the behaviour of the API. The API just ignores the force parameter. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :fail_if_subtree_exists Do not delete if the group subtree has any entities (default to false)
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere  (default to false)
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_delete_group(org_id, project_id, domain_id, group_id, opts = {})
      orgs_org_id_projects_project_id_infra_delete_group_with_http_info(org_id, project_id, domain_id, group_id, opts)
      nil
    end

    # Delete Group
    # Delete the group with group_id under domain domain_id. The force query parameter supported on the API is deprecated. Usage of the force query parameter does not alter the behaviour of the API. The API just ignores the force parameter. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :fail_if_subtree_exists Do not delete if the group subtree has any entities
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere 
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_delete_group_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_delete_group ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'fail_if_subtree_exists'] = opts[:'fail_if_subtree_exists'] if !opts[:'fail_if_subtree_exists'].nil?
      query_params[:'force'] = opts[:'force'] if !opts[:'force'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_delete_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Group External ID Expression
    # Delete Group External ID Expression
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id ExternalIDExpression ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_delete_group_external_id_expression(org_id, project_id, domain_id, group_id, expression_id, opts = {})
      orgs_org_id_projects_project_id_infra_delete_group_external_id_expression_with_http_info(org_id, project_id, domain_id, group_id, expression_id, opts)
      nil
    end

    # Delete Group External ID Expression
    # Delete Group External ID Expression
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id ExternalIDExpression ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_delete_group_external_id_expression_with_http_info(org_id, project_id, domain_id, group_id, expression_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_external_id_expression ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_external_id_expression"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_external_id_expression"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_external_id_expression"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_external_id_expression"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_external_id_expression"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/external-id-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_delete_group_external_id_expression\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Group IPAddressExpression
    # Delete Group IPAddressExpression
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id IPAddressExpression ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_delete_group_ip_address_expression(org_id, project_id, domain_id, group_id, expression_id, opts = {})
      orgs_org_id_projects_project_id_infra_delete_group_ip_address_expression_with_http_info(org_id, project_id, domain_id, group_id, expression_id, opts)
      nil
    end

    # Delete Group IPAddressExpression
    # Delete Group IPAddressExpression
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id IPAddressExpression ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_delete_group_ip_address_expression_with_http_info(org_id, project_id, domain_id, group_id, expression_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_ip_address_expression ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_ip_address_expression"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_ip_address_expression"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_ip_address_expression"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_ip_address_expression"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_ip_address_expression"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/ip-address-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_delete_group_ip_address_expression\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Group MACAddressExpression
    # Delete Group MACAddressExpression
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id MACAddressExpression ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_delete_group_mac_address_expression(org_id, project_id, domain_id, group_id, expression_id, opts = {})
      orgs_org_id_projects_project_id_infra_delete_group_mac_address_expression_with_http_info(org_id, project_id, domain_id, group_id, expression_id, opts)
      nil
    end

    # Delete Group MACAddressExpression
    # Delete Group MACAddressExpression
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id MACAddressExpression ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_delete_group_mac_address_expression_with_http_info(org_id, project_id, domain_id, group_id, expression_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_mac_address_expression ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_mac_address_expression"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_mac_address_expression"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_mac_address_expression"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_mac_address_expression"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_mac_address_expression"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/mac-address-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_delete_group_mac_address_expression\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Group Path Expression
    # Delete Group Path Expression
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id PathExpression ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_delete_group_path_expression(org_id, project_id, domain_id, group_id, expression_id, opts = {})
      orgs_org_id_projects_project_id_infra_delete_group_path_expression_with_http_info(org_id, project_id, domain_id, group_id, expression_id, opts)
      nil
    end

    # Delete Group Path Expression
    # Delete Group Path Expression
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id PathExpression ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_delete_group_path_expression_with_http_info(org_id, project_id, domain_id, group_id, expression_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_path_expression ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_path_expression"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_path_expression"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_path_expression"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_path_expression"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_group_path_expression"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/path-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_delete_group_path_expression\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete L7 Access Profile entry
    # API will delete L7 Access Profile entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_delete_l7_access_entry(org_id, project_id, l7_access_profile_id, l7_access_entry_id, opts = {})
      orgs_org_id_projects_project_id_infra_delete_l7_access_entry_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_entry_id, opts)
      nil
    end

    # Delete L7 Access Profile entry
    # API will delete L7 Access Profile entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_delete_l7_access_entry_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_entry_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_delete_l7_access_entry ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_l7_access_entry"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_l7_access_entry"
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry_id' is set
      if @api_client.config.client_side_validation && l7_access_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_l7_access_entry"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles/{l7-access-profile-id}/entries/{l7-access-entry-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s).sub('{' + 'l7-access-entry-id' + '}', l7_access_entry_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_delete_l7_access_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete L7 Access Profile
    # API will delete L7 Access Profile
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_delete_l7_access_profile(org_id, project_id, l7_access_profile_id, opts = {})
      orgs_org_id_projects_project_id_infra_delete_l7_access_profile_with_http_info(org_id, project_id, l7_access_profile_id, opts)
      nil
    end

    # Delete L7 Access Profile
    # API will delete L7 Access Profile
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_delete_l7_access_profile_with_http_info(org_id, project_id, l7_access_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_delete_l7_access_profile ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_l7_access_profile"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_l7_access_profile"
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_l7_access_profile"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles/{l7-access-profile-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_delete_l7_access_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Policy Context Profile
    # Deletes the specified Policy Context Profile. If the Policy Context Profile is consumed in a firewall rule, it won't get deleted. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param context_profile_id Policy Context Profile Id
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere  (default to false)
    # @option opts [BOOLEAN] :override Delete the locally overridden global object (default to false)
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_delete_policy_context_profile(org_id, project_id, context_profile_id, opts = {})
      orgs_org_id_projects_project_id_infra_delete_policy_context_profile_with_http_info(org_id, project_id, context_profile_id, opts)
      nil
    end

    # Delete Policy Context Profile
    # Deletes the specified Policy Context Profile. If the Policy Context Profile is consumed in a firewall rule, it won&#39;t get deleted. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param context_profile_id Policy Context Profile Id
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :force Force delete the resource even if it is being used somewhere 
    # @option opts [BOOLEAN] :override Delete the locally overridden global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_delete_policy_context_profile_with_http_info(org_id, project_id, context_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_delete_policy_context_profile ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_policy_context_profile"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_policy_context_profile"
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_policy_context_profile"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles/{context-profile-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'force'] = opts[:'force'] if !opts[:'force'].nil?
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_delete_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Service entry
    # Delete Service entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_delete_service_entry(org_id, project_id, service_id, service_entry_id, opts = {})
      orgs_org_id_projects_project_id_infra_delete_service_entry_with_http_info(org_id, project_id, service_id, service_entry_id, opts)
      nil
    end

    # Delete Service entry
    # Delete Service entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_delete_service_entry_with_http_info(org_id, project_id, service_id, service_entry_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_delete_service_entry ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_service_entry"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_service_entry"
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_service_entry"
      end
      # verify the required parameter 'service_entry_id' is set
      if @api_client.config.client_side_validation && service_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_service_entry"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/services/{service-id}/service-entries/{service-entry-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'service-id' + '}', service_id.to_s).sub('{' + 'service-entry-id' + '}', service_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_delete_service_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Service
    # Delete Service
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_delete_service_for_tenant(org_id, project_id, service_id, opts = {})
      orgs_org_id_projects_project_id_infra_delete_service_for_tenant_with_http_info(org_id, project_id, service_id, opts)
      nil
    end

    # Delete Service
    # Delete Service
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_delete_service_for_tenant_with_http_info(org_id, project_id, service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_delete_service_for_tenant ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_service_for_tenant"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_service_for_tenant"
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_delete_service_for_tenant"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/services/{service-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_delete_service_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieves custom attribute values for given attribute key
    # This API lists all the custom attribute values defined in the system for the attribute_key mentioned as part of the url. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom (default to SYSTEM)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def orgs_org_id_projects_project_id_infra_get_custom_attribute(org_id, project_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_custom_attribute_with_http_info(org_id, project_id, opts)
      data
    end

    # Retrieves custom attribute values for given attribute key
    # This API lists all the custom attribute values defined in the system for the attribute_key mentioned as part of the url. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_custom_attribute_with_http_info(org_id, project_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_custom_attribute ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_custom_attribute"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_custom_attribute"
      end
      if @api_client.config.client_side_validation && opts[:'attribute_source'] && !['ALL', 'CUSTOM', 'SYSTEM'].include?(opts[:'attribute_source'])
        fail ArgumentError, 'invalid value for "attribute_source", must be one of ALL, CUSTOM, SYSTEM'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_custom_attribute, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_custom_attribute, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles/custom-attributes/default'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'attribute_key'] = opts[:'attribute_key'] if !opts[:'attribute_key'].nil?
      query_params[:'attribute_source'] = opts[:'attribute_source'] if !opts[:'attribute_source'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_custom_attribute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Effective IPGroups that belong to this group.
    # Returns effective IPGroups that belong to this group. This API is applicable only for Groups containing IPSet member type. For Groups containing other member types,it returns an empty list. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get Effective IPGroups that belong to this group.
    # Returns effective IPGroups that belong to this group. This API is applicable only for Groups containing IPSet member type. For Groups containing other member types,it returns an empty list. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/members/ip-groups'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_ip_address_group_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IP addresses that belong to this Group
    # Get IP addresses that belong to this Group. This API is applicable for Groups containing either VirtualMachine, VIF, Segment ,Segment Port or IP Address member type.For Groups containing other member types,an empty list is returned 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupIPMembersListResult]
    def orgs_org_id_projects_project_id_infra_get_group_ip_members(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_ip_members_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get IP addresses that belong to this Group
    # Get IP addresses that belong to this Group. This API is applicable for Groups containing either VirtualMachine, VIF, Segment ,Segment Port or IP Address member type.For Groups containing other member types,an empty list is returned 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupIPMembersListResult, Fixnum, Hash)>] PolicyGroupIPMembersListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_ip_members_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ip_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/members/ip-addresses'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupIPMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_ip_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get logical ports that belong to this Group
    # Get logical ports that belong to this Group This API is applicable for Groups containing either VirtualMachine, VIF, Segment or Segment Port member type.For Groups containing other member types,an empty list is returned.  <br> This rest routine is deprecated. Use /infra/domains/&lt;domain-id&gt;/groups/&lt;group-id&gt;/members/segment-ports instead for effective segment-port members as LogicalPort  is not a supported member type . 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def orgs_org_id_projects_project_id_infra_get_group_lp_members(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_lp_members_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get logical ports that belong to this Group
    # Get logical ports that belong to this Group This API is applicable for Groups containing either VirtualMachine, VIF, Segment or Segment Port member type.For Groups containing other member types,an empty list is returned.  &lt;br&gt; This rest routine is deprecated. Use /infra/domains/&amp;lt;domain-id&amp;gt;/groups/&amp;lt;group-id&amp;gt;/members/segment-ports instead for effective segment-port members as LogicalPort  is not a supported member type . 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_lp_members_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_lp_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_lp_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_lp_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_lp_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_lp_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_lp_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_lp_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/members/logical-ports'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_lp_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get logical switches that belong to this Group
    # Get logical switches that belong to this Group. This API is applicable for Groups containing Segment member type. For Groups containing other member types, an empty list is returned.  <br> This rest routine is deprecated. Use /infra/domains/&lt;domain-id&gt;/groups/&lt;group-id&gt;/members/segments instead for effective segment members as LogicalSwitch  is not a supported member type. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def orgs_org_id_projects_project_id_infra_get_group_ls_members(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_ls_members_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get logical switches that belong to this Group
    # Get logical switches that belong to this Group. This API is applicable for Groups containing Segment member type. For Groups containing other member types, an empty list is returned.  &lt;br&gt; This rest routine is deprecated. Use /infra/domains/&amp;lt;domain-id&amp;gt;/groups/&amp;lt;group-id&amp;gt;/members/segments instead for effective segment members as LogicalSwitch  is not a supported member type. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_ls_members_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ls_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ls_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ls_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ls_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ls_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ls_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_ls_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/members/logical-switches'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_ls_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get pods that belong to this Group
    # Get pods that belong to this Group. This API is applicable for Groups containing either Pod, Cluster, Namespace, Service member type. For Groups containing other member types an empty list is returned 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContainerGroupMembersListResult]
    def orgs_org_id_projects_project_id_infra_get_group_pod_members(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_pod_members_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get pods that belong to this Group
    # Get pods that belong to this Group. This API is applicable for Groups containing either Pod, Cluster, Namespace, Service member type. For Groups containing other member types an empty list is returned 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cluster_id Cluster ID
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContainerGroupMembersListResult, Fixnum, Hash)>] PolicyContainerGroupMembersListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_pod_members_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_pod_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_pod_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_pod_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_pod_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_pod_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_pod_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_pod_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/members/pods'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cluster_id'] = opts[:'cluster_id'] if !opts[:'cluster_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContainerGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_pod_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get segments that belong to this Group
    # Get segments that belong to this Group 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def orgs_org_id_projects_project_id_infra_get_group_segment_members(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_segment_members_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get segments that belong to this Group
    # Get segments that belong to this Group 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_segment_members_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/members/segments'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_segment_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get segment ports that belong to this Group
    # Get segment ports that belong to this Group 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyGroupMembersListResult]
    def orgs_org_id_projects_project_id_infra_get_group_segment_port_members(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_segment_port_members_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get segment ports that belong to this Group
    # Get segment ports that belong to this Group 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyGroupMembersListResult, Fixnum, Hash)>] PolicyGroupMembersListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_segment_port_members_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_port_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_port_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_port_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_port_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_port_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_port_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_segment_port_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/members/segment-ports'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyGroupMembersListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_segment_port_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tags used to define conditions inside a Group
    # Get tags used to define conditions inside a Group. Also includes tags inside nested groups. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @return [GroupTagsList]
    def orgs_org_id_projects_project_id_infra_get_group_tags(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_tags_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get tags used to define conditions inside a Group
    # Get tags used to define conditions inside a Group. Also includes tags inside nested groups. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(GroupTagsList, Fixnum, Hash)>] GroupTagsList data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_tags_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_tags ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_tags"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_tags"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_tags"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_tags"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/tags'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupTagsList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_tags\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Virtual Network Interface instances that belong to this Group
    # Get Virtual Network Interface instances that belong to this Group. This API is applicable for Groups containing VirtualNetworkInterface and VirtualMachine member types. For Groups containing other member types,an empty list is returned.target_id in response is external_id of VirtualNetworkInterface or VirtualMachine. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [VirtualNetworkInterfaceListResult]
    def orgs_org_id_projects_project_id_infra_get_group_vif_members(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_vif_members_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get Virtual Network Interface instances that belong to this Group
    # Get Virtual Network Interface instances that belong to this Group. This API is applicable for Groups containing VirtualNetworkInterface and VirtualMachine member types. For Groups containing other member types,an empty list is returned.target_id in response is external_id of VirtualNetworkInterface or VirtualMachine. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(VirtualNetworkInterfaceListResult, Fixnum, Hash)>] VirtualNetworkInterfaceListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_vif_members_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vif_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vif_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vif_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vif_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vif_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vif_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vif_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/members/vifs'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualNetworkInterfaceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_vif_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Virtual machines that belong to this Group
    # Get Virtual machines that belong to this Group. This API is applicable for Groups containing VirtualMachine,member type. For Groups containing other member types,an empty list is returned. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RealizedVirtualMachineListResult]
    def orgs_org_id_projects_project_id_infra_get_group_vm_members(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_vm_members_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get Virtual machines that belong to this Group
    # Get Virtual machines that belong to this Group. This API is applicable for Groups containing VirtualMachine,member type. For Groups containing other member types,an empty list is returned. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RealizedVirtualMachineListResult, Fixnum, Hash)>] RealizedVirtualMachineListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_vm_members_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_members ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_members"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_members"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_members"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_members"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_members, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_members, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/members/virtual-machines'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RealizedVirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_vm_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get effective VMs for the Group
    # Get the effective VM membership for the Group. This API also gives some VM details such as VM name, IDs and the current state of the VMs. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RealizedVirtualMachineListResult]
    def orgs_org_id_projects_project_id_infra_get_group_vm_statistics(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_group_vm_statistics_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get effective VMs for the Group
    # Get the effective VM membership for the Group. This API also gives some VM details such as VM name, IDs and the current state of the VMs. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain id
    # @param group_id Group Id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RealizedVirtualMachineListResult, Fixnum, Hash)>] RealizedVirtualMachineListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_group_vm_statistics_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_statistics ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_statistics"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_statistics"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_statistics"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_statistics"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_group_vm_statistics, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/statistics/virtual-machines'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RealizedVirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_group_vm_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given bare metal server (BMS) is a member
    # Get policy groups for which the given bare metal server (BMS) is a member. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param bms_external_id BMS external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def orgs_org_id_projects_project_id_infra_get_groups_for_bms(org_id, project_id, bms_external_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_groups_for_bms_with_http_info(org_id, project_id, bms_external_id, opts)
      data
    end

    # Get groups for which the given bare metal server (BMS) is a member
    # Get policy groups for which the given bare metal server (BMS) is a member. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param bms_external_id BMS external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_groups_for_bms_with_http_info(org_id, project_id, bms_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bms ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bms"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bms"
      end
      # verify the required parameter 'bms_external_id' is set
      if @api_client.config.client_side_validation && bms_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'bms_external_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bms"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bms, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bms, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/bms-group-associations'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'bms_external_id'] = bms_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_groups_for_bms\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given bare metal server interface (BMSI) is a member
    # Get policy groups for which the given bare metal server interface (BMSI) is a member. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param bmsi_external_id BMSI external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def orgs_org_id_projects_project_id_infra_get_groups_for_bmsi(org_id, project_id, bmsi_external_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_groups_for_bmsi_with_http_info(org_id, project_id, bmsi_external_id, opts)
      data
    end

    # Get groups for which the given bare metal server interface (BMSI) is a member
    # Get policy groups for which the given bare metal server interface (BMSI) is a member. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param bmsi_external_id BMSI external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_groups_for_bmsi_with_http_info(org_id, project_id, bmsi_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bmsi ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bmsi"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bmsi"
      end
      # verify the required parameter 'bmsi_external_id' is set
      if @api_client.config.client_side_validation && bmsi_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'bmsi_external_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bmsi"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bmsi, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_bmsi, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/bmsi-group-associations'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'bmsi_external_id'] = bmsi_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_groups_for_bmsi\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given IP address is a member
    # Get policy groups for which the given IP address is a member. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param ip_address IPAddress
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def orgs_org_id_projects_project_id_infra_get_groups_for_ip_address(org_id, project_id, ip_address, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_groups_for_ip_address_with_http_info(org_id, project_id, ip_address, opts)
      data
    end

    # Get groups for which the given IP address is a member
    # Get policy groups for which the given IP address is a member. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param ip_address IPAddress
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_groups_for_ip_address_with_http_info(org_id, project_id, ip_address, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_ip_address ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_ip_address"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_ip_address"
      end
      # verify the required parameter 'ip_address' is set
      if @api_client.config.client_side_validation && ip_address.nil?
        fail ArgumentError, "Missing the required parameter 'ip_address' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_ip_address"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_ip_address, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_ip_address, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/ip-address-group-associations'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'ip_address'] = ip_address
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_groups_for_ip_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given object is a member
    # Get policy groups for which the given object is a member. In Federation environment, if the given object is a global entity (eg: global segment) and if the entity is not stretched to the site specified in the enforcement_point_path parameter,then the following is returned:- 1)If the entity is a member of any global group and that group is stretched   to the enforcement_point_path site,then the API returns an empty list. 2)If the entity is not a member of any global group,this API returns   an 'invalid path' error message. 3)If both the entity and its corresponding groups are stretched to the   enforcement_point_path site , then the API returns the groups list. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param intent_path String path of the intent object
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def orgs_org_id_projects_project_id_infra_get_groups_for_object(org_id, project_id, intent_path, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_groups_for_object_with_http_info(org_id, project_id, intent_path, opts)
      data
    end

    # Get groups for which the given object is a member
    # Get policy groups for which the given object is a member. In Federation environment, if the given object is a global entity (eg: global segment) and if the entity is not stretched to the site specified in the enforcement_point_path parameter,then the following is returned:- 1)If the entity is a member of any global group and that group is stretched   to the enforcement_point_path site,then the API returns an empty list. 2)If the entity is not a member of any global group,this API returns   an &#39;invalid path&#39; error message. 3)If both the entity and its corresponding groups are stretched to the   enforcement_point_path site , then the API returns the groups list. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param intent_path String path of the intent object
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_groups_for_object_with_http_info(org_id, project_id, intent_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_object ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_object"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_object"
      end
      # verify the required parameter 'intent_path' is set
      if @api_client.config.client_side_validation && intent_path.nil?
        fail ArgumentError, "Missing the required parameter 'intent_path' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_object"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_object, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_object, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/group-associations'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'intent_path'] = intent_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_groups_for_object\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given VIF is a member
    # Get policy groups for which the given VIF is a member. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param vif_external_id Virtual network interface external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def orgs_org_id_projects_project_id_infra_get_groups_for_vif(org_id, project_id, vif_external_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_groups_for_vif_with_http_info(org_id, project_id, vif_external_id, opts)
      data
    end

    # Get groups for which the given VIF is a member
    # Get policy groups for which the given VIF is a member. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param vif_external_id Virtual network interface external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_groups_for_vif_with_http_info(org_id, project_id, vif_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vif ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vif"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vif"
      end
      # verify the required parameter 'vif_external_id' is set
      if @api_client.config.client_side_validation && vif_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'vif_external_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vif"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vif, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vif, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/virtual-network-interface-group-associations'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'vif_external_id'] = vif_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_groups_for_vif\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get groups for which the given VM is a member
    # Get policy groups for which the given VM is a member. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param vm_external_id Virtual machine external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyResourceReferenceForEPListResult]
    def orgs_org_id_projects_project_id_infra_get_groups_for_vm(org_id, project_id, vm_external_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_groups_for_vm_with_http_info(org_id, project_id, vm_external_id, opts)
      data
    end

    # Get groups for which the given VM is a member
    # Get policy groups for which the given VM is a member. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param vm_external_id Virtual machine external ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyResourceReferenceForEPListResult, Fixnum, Hash)>] PolicyResourceReferenceForEPListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_groups_for_vm_with_http_info(org_id, project_id, vm_external_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vm ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vm"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vm"
      end
      # verify the required parameter 'vm_external_id' is set
      if @api_client.config.client_side_validation && vm_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'vm_external_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vm"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vm, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_groups_for_vm, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/virtual-machine-group-associations'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'vm_external_id'] = vm_external_id
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceForEPListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_groups_for_vm\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get L7 Access Profile
    # API will get L7 Access Profile
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [L7AccessProfile]
    def orgs_org_id_projects_project_id_infra_get_l7_access_profile(org_id, project_id, l7_access_profile_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_l7_access_profile_with_http_info(org_id, project_id, l7_access_profile_id, opts)
      data
    end

    # Get L7 Access Profile
    # API will get L7 Access Profile
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L7AccessProfile, Fixnum, Hash)>] L7AccessProfile data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_l7_access_profile_with_http_info(org_id, project_id, l7_access_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_l7_access_profile ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_l7_access_profile"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_l7_access_profile"
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_l7_access_profile"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles/{l7-access-profile-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_l7_access_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get member types for a given Group
    # It retrieves member types for a given group. In case of nested groups, it calculates member types of child groups as well. Considers member type for members added via static members and dynamic membership criteria. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [GroupMemberTypeListResult]
    def orgs_org_id_projects_project_id_infra_get_member_types_for_group(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_member_types_for_group_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Get member types for a given Group
    # It retrieves member types for a given group. In case of nested groups, it calculates member types of child groups as well. Considers member type for members added via static members and dynamic membership criteria. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(GroupMemberTypeListResult, Fixnum, Hash)>] GroupMemberTypeListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_member_types_for_group_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_member_types_for_group ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_member_types_for_group"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_member_types_for_group"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_member_types_for_group"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_member_types_for_group"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/member-types'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupMemberTypeListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_member_types_for_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get PolicyContextProfile
    # Get a single PolicyContextProfile by id 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param context_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [PolicyContextProfile]
    def orgs_org_id_projects_project_id_infra_get_policy_context_profile(org_id, project_id, context_profile_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_policy_context_profile_with_http_info(org_id, project_id, context_profile_id, opts)
      data
    end

    # Get PolicyContextProfile
    # Get a single PolicyContextProfile by id 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param context_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyContextProfile, Fixnum, Hash)>] PolicyContextProfile data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_policy_context_profile_with_http_info(org_id, project_id, context_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_policy_context_profile ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_policy_context_profile"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_policy_context_profile"
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_policy_context_profile"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles/{context-profile-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get details of tag bulk operation request
    # Get details of tag bulk operation request with which tag is applied or removed on virtual machines. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param operation_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TagBulkOperation]
    def orgs_org_id_projects_project_id_infra_get_tag_bulk_operation(org_id, project_id, operation_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_with_http_info(org_id, project_id, operation_id, opts)
      data
    end

    # Get details of tag bulk operation request
    # Get details of tag bulk operation request with which tag is applied or removed on virtual machines. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param operation_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TagBulkOperation, Fixnum, Hash)>] TagBulkOperation data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_with_http_info(org_id, project_id, operation_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation"
      end
      # verify the required parameter 'operation_id' is set
      if @api_client.config.client_side_validation && operation_id.nil?
        fail ArgumentError, "Missing the required parameter 'operation_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/tags/tag-operations/{operation-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'operation-id' + '}', operation_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TagBulkOperation')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_tag_bulk_operation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get status of tag bulk operation
    # Get status of tag bulk operation with details of tag operation on each virtual machine. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param operation_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TagBulkOperationStatus]
    def orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_status(org_id, project_id, operation_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_status_with_http_info(org_id, project_id, operation_id, opts)
      data
    end

    # Get status of tag bulk operation
    # Get status of tag bulk operation with details of tag operation on each virtual machine. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param operation_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TagBulkOperationStatus, Fixnum, Hash)>] TagBulkOperationStatus data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_status_with_http_info(org_id, project_id, operation_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_status ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_status"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_status"
      end
      # verify the required parameter 'operation_id' is set
      if @api_client.config.client_side_validation && operation_id.nil?
        fail ArgumentError, "Missing the required parameter 'operation_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_status"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_status, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_status, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/tags/tag-operations/{operation-id}/status'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'operation-id' + '}', operation_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TagBulkOperationStatus')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_get_tag_bulk_operation_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all unique tags.
    # Returns paginated list of all unique tags. Supports filtering by scope, tag and source from which tags are synced. Supports starts with, ends with, equals and contains operators on scope and tag values. To filter tags by starts with on scope or tag, use '*' as suffix after the value. To filter tags by ends with on scope or tag, use '*' as prefix before the value. To filter tags by contain on scope or tag, use '*' as prefix and suffix on the value. Below special characters in the filter value needs to be escaped with hex values. - Character '&' needs to be escaped as '%26' - Character '[' needs to be escaped as '%5B' - Character ']' needs to be escaped as '%5D' - Character '+' needs to be escaped as '%2B' - Character '#' needs to be escaped as '%23' Sort option for list of unique tags is available only on tag and scope properties. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Source from which tags are synced.
    # @option opts [String] :tag Tag value
    # @return [TagInfoListResult]
    def orgs_org_id_projects_project_id_infra_list_all_tags(org_id, project_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_all_tags_with_http_info(org_id, project_id, opts)
      data
    end

    # List all unique tags.
    # Returns paginated list of all unique tags. Supports filtering by scope, tag and source from which tags are synced. Supports starts with, ends with, equals and contains operators on scope and tag values. To filter tags by starts with on scope or tag, use &#39;*&#39; as suffix after the value. To filter tags by ends with on scope or tag, use &#39;*&#39; as prefix before the value. To filter tags by contain on scope or tag, use &#39;*&#39; as prefix and suffix on the value. Below special characters in the filter value needs to be escaped with hex values. - Character &#39;&amp;&#39; needs to be escaped as &#39;%26&#39; - Character &#39;[&#39; needs to be escaped as &#39;%5B&#39; - Character &#39;]&#39; needs to be escaped as &#39;%5D&#39; - Character &#39;+&#39; needs to be escaped as &#39;%2B&#39; - Character &#39;#&#39; needs to be escaped as &#39;%23&#39; Sort option for list of unique tags is available only on tag and scope properties. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Source from which tags are synced.
    # @option opts [String] :tag Tag value
    # @return [Array<(TagInfoListResult, Fixnum, Hash)>] TagInfoListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_all_tags_with_http_info(org_id, project_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_all_tags ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_all_tags"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_all_tags"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_all_tags, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_all_tags, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['Amazon', 'Azure', 'NSX', 'ANY'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of Amazon, Azure, NSX, ANY'
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/tags'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'scope'] = opts[:'scope'] if !opts[:'scope'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'tag'] = opts[:'tag'] if !opts[:'tag'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TagInfoListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_all_tags\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all virtual machines
    # This API filters objects of type virtual machine. This API also gives some VM details such as VM name, IDs and the current state of the VMs. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [VirtualMachineListResult]
    def orgs_org_id_projects_project_id_infra_list_all_virtual_machines(org_id, project_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_all_virtual_machines_with_http_info(org_id, project_id, opts)
      data
    end

    # List all virtual machines
    # This API filters objects of type virtual machine. This API also gives some VM details such as VM name, IDs and the current state of the VMs. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(VirtualMachineListResult, Fixnum, Hash)>] VirtualMachineListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_all_virtual_machines_with_http_info(org_id, project_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_all_virtual_machines ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_all_virtual_machines"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_all_virtual_machines"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_all_virtual_machines, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_all_virtual_machines, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/realized-state/virtual-machines'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualMachineListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_all_virtual_machines\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Groups for a domain
    # List Groups for a domain. Groups can be filtered using member_types query parameter, which returns the groups that contains the specified member types. Multiple member types can be provided as comma separated values. The API also return groups having member type that are subset of provided member_types. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :member_types Comma Separated Member types
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GroupListResult]
    def orgs_org_id_projects_project_id_infra_list_group_for_domain(org_id, project_id, domain_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_group_for_domain_with_http_info(org_id, project_id, domain_id, opts)
      data
    end

    # List Groups for a domain
    # List Groups for a domain. Groups can be filtered using member_types query parameter, which returns the groups that contains the specified member types. Multiple member types can be provided as comma separated values. The API also return groups having member type that are subset of provided member_types. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :member_types Comma Separated Member types
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GroupListResult, Fixnum, Hash)>] GroupListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_group_for_domain_with_http_info(org_id, project_id, domain_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_group_for_domain ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_group_for_domain"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_group_for_domain"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_group_for_domain"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_group_for_domain, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_group_for_domain, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'member_types'] = opts[:'member_types'] if !opts[:'member_types'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GroupListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_group_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List l7 access profile entries
    # API will list all l7 access profiles entries
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [L7AccessEntryListResult]
    def orgs_org_id_projects_project_id_infra_list_l7_access_entries(org_id, project_id, l7_access_profile_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_l7_access_entries_with_http_info(org_id, project_id, l7_access_profile_id, opts)
      data
    end

    # List l7 access profile entries
    # API will list all l7 access profiles entries
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(L7AccessEntryListResult, Fixnum, Hash)>] L7AccessEntryListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_l7_access_entries_with_http_info(org_id, project_id, l7_access_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_entries ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_entries"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_entries"
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_entries"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_entries, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_entries, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles/{l7-access-profile-id}/entries'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessEntryListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_l7_access_entries\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Policy L7 access profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom (default to SYSTEM)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def orgs_org_id_projects_project_id_infra_list_l7_access_profile_profile_supported_attributes(org_id, project_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_l7_access_profile_profile_supported_attributes_with_http_info(org_id, project_id, opts)
      data
    end

    # List Policy L7 access profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_l7_access_profile_profile_supported_attributes_with_http_info(org_id, project_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_profile_profile_supported_attributes ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_profile_profile_supported_attributes"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_profile_profile_supported_attributes"
      end
      if @api_client.config.client_side_validation && opts[:'attribute_source'] && !['ALL', 'CUSTOM', 'SYSTEM'].include?(opts[:'attribute_source'])
        fail ArgumentError, 'invalid value for "attribute_source", must be one of ALL, CUSTOM, SYSTEM'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_profile_profile_supported_attributes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_profile_profile_supported_attributes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles/attributes'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'attribute_key'] = opts[:'attribute_key'] if !opts[:'attribute_key'].nil?
      query_params[:'attribute_source'] = opts[:'attribute_source'] if !opts[:'attribute_source'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_l7_access_profile_profile_supported_attributes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List l7 access Profiles
    # API will list all l7 access Profiles
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_entry_count Include the count of entries in L7 Profile (default to false)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [L7AccessProfileListResult]
    def orgs_org_id_projects_project_id_infra_list_l7_access_profiles(org_id, project_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_l7_access_profiles_with_http_info(org_id, project_id, opts)
      data
    end

    # List l7 access Profiles
    # API will list all l7 access Profiles
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_entry_count Include the count of entries in L7 Profile
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(L7AccessProfileListResult, Fixnum, Hash)>] L7AccessProfileListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_l7_access_profiles_with_http_info(org_id, project_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_profiles ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_profiles"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_profiles"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_profiles, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_l7_access_profiles, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_entry_count'] = opts[:'include_entry_count'] if !opts[:'include_entry_count'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_l7_access_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get PolicyContextProfiles
    # Get all PolicyContextProfiles 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def orgs_org_id_projects_project_id_infra_list_policy_context_profiles(org_id, project_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_policy_context_profiles_with_http_info(org_id, project_id, opts)
      data
    end

    # Get PolicyContextProfiles
    # Get all PolicyContextProfiles 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_policy_context_profiles_with_http_info(org_id, project_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_policy_context_profiles ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_policy_context_profiles"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_policy_context_profiles"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_policy_context_profiles, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_policy_context_profiles, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_policy_context_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Policy Context Profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. Alternatively, to get a list of supported attributes and sub-attributes fire the following REST API GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom (default to SYSTEM)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyContextProfileListResult]
    def orgs_org_id_projects_project_id_infra_list_profile_supported_attributes(org_id, project_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_profile_supported_attributes_with_http_info(org_id, project_id, opts)
      data
    end

    # List Policy Context Profile supported attributes and sub-attributes
    # Returns supported attribute and sub-attributes for specified attribute key with their supported values, if provided in query/request parameter, else will fetch all supported attributes and sub-attributes for all supported attribute keys. Alternatively, to get a list of supported attributes and sub-attributes fire the following REST API GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :attribute_key Fetch attributes and sub-attributes for the given attribute key
    # @option opts [String] :attribute_source Source of the attribute, System Defined or custom
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyContextProfileListResult, Fixnum, Hash)>] PolicyContextProfileListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_profile_supported_attributes_with_http_info(org_id, project_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_profile_supported_attributes ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_profile_supported_attributes"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_profile_supported_attributes"
      end
      if @api_client.config.client_side_validation && opts[:'attribute_source'] && !['ALL', 'CUSTOM', 'SYSTEM'].include?(opts[:'attribute_source'])
        fail ArgumentError, 'invalid value for "attribute_source", must be one of ALL, CUSTOM, SYSTEM'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_profile_supported_attributes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_profile_supported_attributes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles/attributes'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'attribute_key'] = opts[:'attribute_key'] if !opts[:'attribute_key'].nil?
      query_params[:'attribute_source'] = opts[:'attribute_source'] if !opts[:'attribute_source'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_profile_supported_attributes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Service entries for the given service
    # Paginated list of Service entries for the given service 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceEntryListResult]
    def orgs_org_id_projects_project_id_infra_list_service_entries(org_id, project_id, service_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_service_entries_with_http_info(org_id, project_id, service_id, opts)
      data
    end

    # List Service entries for the given service
    # Paginated list of Service entries for the given service 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceEntryListResult, Fixnum, Hash)>] ServiceEntryListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_service_entries_with_http_info(org_id, project_id, service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_service_entries ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_service_entries"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_service_entries"
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_service_entries"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_service_entries, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_service_entries, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/services/{service-id}/service-entries'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceEntryListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_service_entries\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Services for infra
    # Paginated list of Services for infra. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :default_service Fetch all default services
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceListResult]
    def orgs_org_id_projects_project_id_infra_list_services_for_tenant(org_id, project_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_services_for_tenant_with_http_info(org_id, project_id, opts)
      data
    end

    # List Services for infra
    # Paginated list of Services for infra. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :default_service Fetch all default services
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceListResult, Fixnum, Hash)>] ServiceListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_services_for_tenant_with_http_info(org_id, project_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_services_for_tenant ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_services_for_tenant"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_services_for_tenant"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_services_for_tenant, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_services_for_tenant, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/services'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'default_service'] = opts[:'default_service'] if !opts[:'default_service'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_services_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all objects assigned with matching scope and tag values
    # Paginated list of all objects assigned with matching scope and tag values. Objects are represented in form of resource reference. Sort option is available only on target_type and target_display_name properties. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :filter_by Comma-separated list of field names to filter tagged objects.
    # @option opts [String] :filter_text Filter text to restrict tagged objects list with matching filter text.
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :tag Tag value
    # @return [PolicyResourceReferenceListResult]
    def orgs_org_id_projects_project_id_infra_list_tagged_objects(org_id, project_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_list_tagged_objects_with_http_info(org_id, project_id, opts)
      data
    end

    # List all objects assigned with matching scope and tag values
    # Paginated list of all objects assigned with matching scope and tag values. Objects are represented in form of resource reference. Sort option is available only on target_type and target_display_name properties. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :filter_by Comma-separated list of field names to filter tagged objects.
    # @option opts [String] :filter_text Filter text to restrict tagged objects list with matching filter text.
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :scope Tag scope
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :tag Tag value
    # @return [Array<(PolicyResourceReferenceListResult, Fixnum, Hash)>] PolicyResourceReferenceListResult data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_list_tagged_objects_with_http_info(org_id, project_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_list_tagged_objects ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_tagged_objects"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_tagged_objects"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_tagged_objects, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_list_tagged_objects, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/tags/effective-resources'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'filter_by'] = opts[:'filter_by'] if !opts[:'filter_by'].nil?
      query_params[:'filter_text'] = opts[:'filter_text'] if !opts[:'filter_text'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'scope'] = opts[:'scope'] if !opts[:'scope'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'tag'] = opts[:'tag'] if !opts[:'tag'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyResourceReferenceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_list_tagged_objects\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can't have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \"custom_attributes\" id 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_patch_create_or_update_policy_context_profile(org_id, project_id, context_profile_id, policy_context_profile, opts = {})
      orgs_org_id_projects_project_id_infra_patch_create_or_update_policy_context_profile_with_http_info(org_id, project_id, context_profile_id, policy_context_profile, opts)
      nil
    end

    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can&#39;t have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \&quot;custom_attributes\&quot; id 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_create_or_update_policy_context_profile_with_http_info(org_id, project_id, context_profile_id, policy_context_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_create_or_update_policy_context_profile ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'policy_context_profile' is set
      if @api_client.config.client_side_validation && policy_context_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_context_profile' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_create_or_update_policy_context_profile"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles/{context-profile-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_context_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_create_or_update_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update custom attribute value list for given attribute key.
    # This API updates custom attribute value list for given key in the request. This replaces the  existing list with the list provided in the request 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param policy_custom_attributes 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_patch_custom_attribute(org_id, project_id, policy_custom_attributes, opts = {})
      orgs_org_id_projects_project_id_infra_patch_custom_attribute_with_http_info(org_id, project_id, policy_custom_attributes, opts)
      nil
    end

    # Update custom attribute value list for given attribute key.
    # This API updates custom attribute value list for given key in the request. This replaces the  existing list with the list provided in the request 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param policy_custom_attributes 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_custom_attribute_with_http_info(org_id, project_id, policy_custom_attributes, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_custom_attribute ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_custom_attribute"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_custom_attribute"
      end
      # verify the required parameter 'policy_custom_attributes' is set
      if @api_client.config.client_side_validation && policy_custom_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_custom_attributes' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_custom_attribute"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles/custom-attributes/default'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_custom_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_custom_attribute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update custom object attribute value list for given attribute key
    # This API updates custom attribute value list for given key.  <br> This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default for create/update custom object attribute value list for given attribute key 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param policy_attributes 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_patch_custom_attribute_list(org_id, project_id, policy_attributes, opts = {})
      orgs_org_id_projects_project_id_infra_patch_custom_attribute_list_with_http_info(org_id, project_id, policy_attributes, opts)
      nil
    end

    # Update custom object attribute value list for given attribute key
    # This API updates custom attribute value list for given key.  &lt;br&gt; This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default for create/update custom object attribute value list for given attribute key 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param policy_attributes 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_custom_attribute_list_with_http_info(org_id, project_id, policy_attributes, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_custom_attribute_list ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_custom_attribute_list"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_custom_attribute_list"
      end
      # verify the required parameter 'policy_attributes' is set
      if @api_client.config.client_side_validation && policy_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_attributes' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_custom_attribute_list"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles/custom-attributes'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_custom_attribute_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a group external ID expression
    # If a group ExternalIDexpression with the expression-id is not already present, create a new ExternalIDexpresison. If it already exists, replace the existing ExternalIDexpression. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id ExternalIDExpression ID
    # @param external_id_expression 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain(org_id, project_id, domain_id, group_id, expression_id, external_id_expression, opts = {})
      orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain_with_http_info(org_id, project_id, domain_id, group_id, expression_id, external_id_expression, opts)
      nil
    end

    # Patch a group external ID expression
    # If a group ExternalIDexpression with the expression-id is not already present, create a new ExternalIDexpresison. If it already exists, replace the existing ExternalIDexpression. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id ExternalIDExpression ID
    # @param external_id_expression 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain_with_http_info(org_id, project_id, domain_id, group_id, expression_id, external_id_expression, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain"
      end
      # verify the required parameter 'external_id_expression' is set
      if @api_client.config.client_side_validation && external_id_expression.nil?
        fail ArgumentError, "Missing the required parameter 'external_id_expression' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/external-id-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(external_id_expression)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_group_external_id_expression_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a group
    # If a group with the group-id is not already present, create a new group. If it already exists, patch the group. Group created with Kubernetes membership criteria includes only Antrea reported inventory as its members. Once created, Groups with Identity (Directory) Group members should be updated with the new Distinguished Name in case it is changed on AD Server. Maximum of 500 malicious IP Groups (i.e Group with criteria having IPAddress equals All MALICIOUS_IP) should be created. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_patch_group_for_domain(org_id, project_id, domain_id, group_id, group, opts = {})
      orgs_org_id_projects_project_id_infra_patch_group_for_domain_with_http_info(org_id, project_id, domain_id, group_id, group, opts)
      nil
    end

    # Patch a group
    # If a group with the group-id is not already present, create a new group. If it already exists, patch the group. Group created with Kubernetes membership criteria includes only Antrea reported inventory as its members. Once created, Groups with Identity (Directory) Group members should be updated with the new Distinguished Name in case it is changed on AD Server. Maximum of 500 malicious IP Groups (i.e Group with criteria having IPAddress equals All MALICIOUS_IP) should be created. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_group_for_domain_with_http_info(org_id, project_id, domain_id, group_id, group, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_for_domain ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_for_domain"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_for_domain"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_for_domain"
      end
      # verify the required parameter 'group' is set
      if @api_client.config.client_side_validation && group.nil?
        fail ArgumentError, "Missing the required parameter 'group' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_for_domain"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(group)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_group_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a group IP Address expression
    # If a group IPAddressExpression with the expression-id is not already present, create a new IPAddressExpression. If it already exists, replace the existing IPAddressExpression. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id IPAddressExpression ID
    # @param ip_address_expression 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain(org_id, project_id, domain_id, group_id, expression_id, ip_address_expression, opts = {})
      orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain_with_http_info(org_id, project_id, domain_id, group_id, expression_id, ip_address_expression, opts)
      nil
    end

    # Patch a group IP Address expression
    # If a group IPAddressExpression with the expression-id is not already present, create a new IPAddressExpression. If it already exists, replace the existing IPAddressExpression. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id IPAddressExpression ID
    # @param ip_address_expression 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain_with_http_info(org_id, project_id, domain_id, group_id, expression_id, ip_address_expression, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain"
      end
      # verify the required parameter 'ip_address_expression' is set
      if @api_client.config.client_side_validation && ip_address_expression.nil?
        fail ArgumentError, "Missing the required parameter 'ip_address_expression' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/ip-address-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ip_address_expression)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_group_ip_address_expression_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a group MAC Address expression
    # If a group MACAddressExpression with the expression-id is not already present, create a new MACAddressExpression. If it already exists, replace the existing MACAddressExpression. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id MACAddressExpression ID
    # @param mac_address_expression 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain(org_id, project_id, domain_id, group_id, expression_id, mac_address_expression, opts = {})
      orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain_with_http_info(org_id, project_id, domain_id, group_id, expression_id, mac_address_expression, opts)
      nil
    end

    # Patch a group MAC Address expression
    # If a group MACAddressExpression with the expression-id is not already present, create a new MACAddressExpression. If it already exists, replace the existing MACAddressExpression. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id MACAddressExpression ID
    # @param mac_address_expression 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain_with_http_info(org_id, project_id, domain_id, group_id, expression_id, mac_address_expression, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain"
      end
      # verify the required parameter 'mac_address_expression' is set
      if @api_client.config.client_side_validation && mac_address_expression.nil?
        fail ArgumentError, "Missing the required parameter 'mac_address_expression' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/mac-address-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(mac_address_expression)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_group_mac_address_expression_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a group path expression
    # If a group path_expression with the expression-id is not already present, create a new pathexpresison. If it already exists, replace the existing pathexpression. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id PathExpression ID
    # @param path_expression 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain(org_id, project_id, domain_id, group_id, expression_id, path_expression, opts = {})
      orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain_with_http_info(org_id, project_id, domain_id, group_id, expression_id, path_expression, opts)
      nil
    end

    # Patch a group path expression
    # If a group path_expression with the expression-id is not already present, create a new pathexpresison. If it already exists, replace the existing pathexpression. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id PathExpression ID
    # @param path_expression 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain_with_http_info(org_id, project_id, domain_id, group_id, expression_id, path_expression, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain"
      end
      # verify the required parameter 'path_expression' is set
      if @api_client.config.client_side_validation && path_expression.nil?
        fail ArgumentError, "Missing the required parameter 'path_expression' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}/path-expressions/{expression-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(path_expression)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_group_path_expression_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update L7 Access Profile entry
    # API will create/update L7 Access Profile entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param l7_access_entry 
    # @param [Hash] opts the optional parameters
    # @return [L7AccessEntry]
    def orgs_org_id_projects_project_id_infra_patch_l7_access_entry(org_id, project_id, l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_patch_l7_access_entry_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts)
      data
    end

    # Create or update L7 Access Profile entry
    # API will create/update L7 Access Profile entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param l7_access_entry 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L7AccessEntry, Fixnum, Hash)>] L7AccessEntry data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_l7_access_entry_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_entry ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_entry"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_entry"
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry_id' is set
      if @api_client.config.client_side_validation && l7_access_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry' is set
      if @api_client.config.client_side_validation && l7_access_entry.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_entry"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles/{l7-access-profile-id}/entries/{l7-access-entry-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s).sub('{' + 'l7-access-entry-id' + '}', l7_access_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l7_access_entry)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_l7_access_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update L7 Access Profile
    # API will create/update L7 Access Profile
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id L7 Access Profile ID
    # @param l7_access_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [L7AccessProfile]
    def orgs_org_id_projects_project_id_infra_patch_l7_access_profile(org_id, project_id, l7_access_profile_id, l7_access_profile, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_patch_l7_access_profile_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_profile, opts)
      data
    end

    # Create or update L7 Access Profile
    # API will create/update L7 Access Profile
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id L7 Access Profile ID
    # @param l7_access_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(L7AccessProfile, Fixnum, Hash)>] L7AccessProfile data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_l7_access_profile_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_profile ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_profile"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_profile"
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_profile"
      end
      # verify the required parameter 'l7_access_profile' is set
      if @api_client.config.client_side_validation && l7_access_profile.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_l7_access_profile"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles/{l7-access-profile-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l7_access_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_l7_access_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a ServiceEntry
    # If a service entry with the service-entry-id is not already present, create a new service entry. If it already exists, patch the service entry. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param service_entry 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_patch_service_entry(org_id, project_id, service_id, service_entry_id, service_entry, opts = {})
      orgs_org_id_projects_project_id_infra_patch_service_entry_with_http_info(org_id, project_id, service_id, service_entry_id, service_entry, opts)
      nil
    end

    # Patch a ServiceEntry
    # If a service entry with the service-entry-id is not already present, create a new service entry. If it already exists, patch the service entry. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param service_entry 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_service_entry_with_http_info(org_id, project_id, service_id, service_entry_id, service_entry, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_entry ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_entry"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_entry"
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_entry"
      end
      # verify the required parameter 'service_entry_id' is set
      if @api_client.config.client_side_validation && service_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_entry"
      end
      # verify the required parameter 'service_entry' is set
      if @api_client.config.client_side_validation && service_entry.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_entry"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/services/{service-id}/service-entries/{service-entry-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'service-id' + '}', service_id.to_s).sub('{' + 'service-entry-id' + '}', service_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_entry)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_service_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a Service
    # Create a new service if a service with the given ID does not already exist. Creates new service entries if populated in the service. If a service with the given ID already exists, patch the service including the nested service entries. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def orgs_org_id_projects_project_id_infra_patch_service_for_tenant(org_id, project_id, service_id, service, opts = {})
      orgs_org_id_projects_project_id_infra_patch_service_for_tenant_with_http_info(org_id, project_id, service_id, service, opts)
      nil
    end

    # Patch a Service
    # Create a new service if a service with the given ID does not already exist. Creates new service entries if populated in the service. If a service with the given ID already exists, patch the service including the nested service entries. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def orgs_org_id_projects_project_id_infra_patch_service_for_tenant_with_http_info(org_id, project_id, service_id, service, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_for_tenant ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_for_tenant"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_for_tenant"
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_for_tenant"
      end
      # verify the required parameter 'service' is set
      if @api_client.config.client_side_validation && service.nil?
        fail ArgumentError, "Missing the required parameter 'service' when calling InventoryApi.orgs_org_id_projects_project_id_infra_patch_service_for_tenant"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/services/{service-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_patch_service_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can't have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \"custom_attributes\" id 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [PolicyContextProfile]
    def orgs_org_id_projects_project_id_infra_put_create_or_update_policy_context_profile(org_id, project_id, context_profile_id, policy_context_profile, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_put_create_or_update_policy_context_profile_with_http_info(org_id, project_id, context_profile_id, policy_context_profile, opts)
      data
    end

    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can&#39;t have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \&quot;custom_attributes\&quot; id 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(PolicyContextProfile, Fixnum, Hash)>] PolicyContextProfile data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_put_create_or_update_policy_context_profile_with_http_info(org_id, project_id, context_profile_id, policy_context_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_put_create_or_update_policy_context_profile ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_put_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_put_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_put_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'policy_context_profile' is set
      if @api_client.config.client_side_validation && policy_context_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_context_profile' when calling InventoryApi.orgs_org_id_projects_project_id_infra_put_create_or_update_policy_context_profile"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/context-profiles/{context-profile-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_context_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_put_create_or_update_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read group
    # Read group
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [Group]
    def orgs_org_id_projects_project_id_infra_read_group_for_domain(org_id, project_id, domain_id, group_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_read_group_for_domain_with_http_info(org_id, project_id, domain_id, group_id, opts)
      data
    end

    # Read group
    # Read group
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(Group, Fixnum, Hash)>] Group data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_read_group_for_domain_with_http_info(org_id, project_id, domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_read_group_for_domain ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_group_for_domain"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_group_for_domain"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_group_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_group_for_domain"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Group')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_read_group_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read L7 Access Profile entry
    # Read Friewall L7 Access Profile entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param [Hash] opts the optional parameters
    # @return [L7AccessEntry]
    def orgs_org_id_projects_project_id_infra_read_l7_access_entry(org_id, project_id, l7_access_profile_id, l7_access_entry_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_read_l7_access_entry_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_entry_id, opts)
      data
    end

    # Read L7 Access Profile entry
    # Read Friewall L7 Access Profile entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L7AccessEntry, Fixnum, Hash)>] L7AccessEntry data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_read_l7_access_entry_with_http_info(org_id, project_id, l7_access_profile_id, l7_access_entry_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_read_l7_access_entry ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_l7_access_entry"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_l7_access_entry"
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry_id' is set
      if @api_client.config.client_side_validation && l7_access_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_l7_access_entry"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/l7-access-profiles/{l7-access-profile-id}/entries/{l7-access-entry-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s).sub('{' + 'l7-access-entry-id' + '}', l7_access_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_read_l7_access_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Service entry
    # Service entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param [Hash] opts the optional parameters
    # @return [ServiceEntry]
    def orgs_org_id_projects_project_id_infra_read_service_entry(org_id, project_id, service_id, service_entry_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_read_service_entry_with_http_info(org_id, project_id, service_id, service_entry_id, opts)
      data
    end

    # Service entry
    # Service entry
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceEntry, Fixnum, Hash)>] ServiceEntry data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_read_service_entry_with_http_info(org_id, project_id, service_id, service_entry_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_read_service_entry ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_service_entry"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_service_entry"
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_service_entry"
      end
      # verify the required parameter 'service_entry_id' is set
      if @api_client.config.client_side_validation && service_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_service_entry"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/services/{service-id}/service-entries/{service-entry-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'service-id' + '}', service_id.to_s).sub('{' + 'service-entry-id' + '}', service_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_read_service_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a service
    # Read a service
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @return [Service]
    def orgs_org_id_projects_project_id_infra_read_service_for_tenant(org_id, project_id, service_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_read_service_for_tenant_with_http_info(org_id, project_id, service_id, opts)
      data
    end

    # Read a service
    # Read a service
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(Service, Fixnum, Hash)>] Service data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_read_service_for_tenant_with_http_info(org_id, project_id, service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_read_service_for_tenant ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_service_for_tenant"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_service_for_tenant"
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_read_service_for_tenant"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/services/{service-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Service')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_read_service_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Assign or Unassign tag on multiple Virtual Machines.
    # Tag can be assigned or unassigned on multiple objects. Supported object type is  restricted to Virtual Machine for now and support for other objects will be added  later. Permissions for tag bulk operation would be similar to virtual machine tag permissions. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param operation_id 
    # @param tag_bulk_operation 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TagBulkOperation]
    def orgs_org_id_projects_project_id_infra_tag_bulk_update(org_id, project_id, operation_id, tag_bulk_operation, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_tag_bulk_update_with_http_info(org_id, project_id, operation_id, tag_bulk_operation, opts)
      data
    end

    # Assign or Unassign tag on multiple Virtual Machines.
    # Tag can be assigned or unassigned on multiple objects. Supported object type is  restricted to Virtual Machine for now and support for other objects will be added  later. Permissions for tag bulk operation would be similar to virtual machine tag permissions. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param operation_id 
    # @param tag_bulk_operation 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TagBulkOperation, Fixnum, Hash)>] TagBulkOperation data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_tag_bulk_update_with_http_info(org_id, project_id, operation_id, tag_bulk_operation, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_tag_bulk_update ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_tag_bulk_update"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_tag_bulk_update"
      end
      # verify the required parameter 'operation_id' is set
      if @api_client.config.client_side_validation && operation_id.nil?
        fail ArgumentError, "Missing the required parameter 'operation_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_tag_bulk_update"
      end
      # verify the required parameter 'tag_bulk_operation' is set
      if @api_client.config.client_side_validation && tag_bulk_operation.nil?
        fail ArgumentError, "Missing the required parameter 'tag_bulk_operation' when calling InventoryApi.orgs_org_id_projects_project_id_infra_tag_bulk_update"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_tag_bulk_update, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.orgs_org_id_projects_project_id_infra_tag_bulk_update, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/tags/tag-operations/{operation-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'operation-id' + '}', operation_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tag_bulk_operation)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TagBulkOperation')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_tag_bulk_update\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a group
    # If a group with the group-id is not already present, create a new group. If it already exists, update the group. Avoid creating groups with multiple MACAddressExpression and IPAddressExpression. In future releases, group will be restricted to contain a single MACAddressExpression and IPAddressExpression along with other expressions. To group IPAddresses or MACAddresses, use nested groups instead of multiple IPAddressExpressions/MACAddressExpression. Group created with Kubernetes membership criteria includes only Antrea reported inventory as its members. Once created, Groups with Identity (Directory) Group members should be updated with the new Distinguished Name in case it is changed on AD Server. Maximum of 500 malicious IP Groups (i.e Group with criteria having IPAddress equals All MALICIOUS_IP) should be created. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [Group]
    def orgs_org_id_projects_project_id_infra_update_group_for_domain(org_id, project_id, domain_id, group_id, group, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_update_group_for_domain_with_http_info(org_id, project_id, domain_id, group_id, group, opts)
      data
    end

    # Create or update a group
    # If a group with the group-id is not already present, create a new group. If it already exists, update the group. Avoid creating groups with multiple MACAddressExpression and IPAddressExpression. In future releases, group will be restricted to contain a single MACAddressExpression and IPAddressExpression along with other expressions. To group IPAddresses or MACAddresses, use nested groups instead of multiple IPAddressExpressions/MACAddressExpression. Group created with Kubernetes membership criteria includes only Antrea reported inventory as its members. Once created, Groups with Identity (Directory) Group members should be updated with the new Distinguished Name in case it is changed on AD Server. Maximum of 500 malicious IP Groups (i.e Group with criteria having IPAddress equals All MALICIOUS_IP) should be created. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Group, Fixnum, Hash)>] Group data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_update_group_for_domain_with_http_info(org_id, project_id, domain_id, group_id, group, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_update_group_for_domain ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_group_for_domain"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_group_for_domain"
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_group_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_group_for_domain"
      end
      # verify the required parameter 'group' is set
      if @api_client.config.client_side_validation && group.nil?
        fail ArgumentError, "Missing the required parameter 'group' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_group_for_domain"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/domains/{domain-id}/groups/{group-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(group)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Group')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_update_group_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a ServiceEntry
    # If a service entry with the service-entry-id is not already present, create a new service entry. If it already exists, update the service entry. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param service_entry 
    # @param [Hash] opts the optional parameters
    # @return [ServiceEntry]
    def orgs_org_id_projects_project_id_infra_update_service_entry(org_id, project_id, service_id, service_entry_id, service_entry, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_update_service_entry_with_http_info(org_id, project_id, service_id, service_entry_id, service_entry, opts)
      data
    end

    # Create or update a ServiceEntry
    # If a service entry with the service-entry-id is not already present, create a new service entry. If it already exists, update the service entry. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param service_entry 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceEntry, Fixnum, Hash)>] ServiceEntry data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_update_service_entry_with_http_info(org_id, project_id, service_id, service_entry_id, service_entry, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_update_service_entry ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_service_entry"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_service_entry"
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_service_entry"
      end
      # verify the required parameter 'service_entry_id' is set
      if @api_client.config.client_side_validation && service_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_service_entry"
      end
      # verify the required parameter 'service_entry' is set
      if @api_client.config.client_side_validation && service_entry.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_service_entry"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/services/{service-id}/service-entries/{service-entry-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'service-id' + '}', service_id.to_s).sub('{' + 'service-entry-id' + '}', service_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_entry)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_update_service_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Service
    # Create a new service if a service with the given ID does not already exist. Creates new service entries if populated in the service. If a service with the given ID already exists, update the service including the nested service entries. This is a full replace. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service 
    # @param [Hash] opts the optional parameters
    # @return [Service]
    def orgs_org_id_projects_project_id_infra_update_service_for_tenant(org_id, project_id, service_id, service, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_update_service_for_tenant_with_http_info(org_id, project_id, service_id, service, opts)
      data
    end

    # Create or update a Service
    # Create a new service if a service with the given ID does not already exist. Creates new service entries if populated in the service. If a service with the given ID already exists, update the service including the nested service entries. This is a full replace. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param service_id Service ID
    # @param service 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Service, Fixnum, Hash)>] Service data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_update_service_for_tenant_with_http_info(org_id, project_id, service_id, service, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.orgs_org_id_projects_project_id_infra_update_service_for_tenant ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_service_for_tenant"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_service_for_tenant"
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_service_for_tenant"
      end
      # verify the required parameter 'service' is set
      if @api_client.config.client_side_validation && service.nil?
        fail ArgumentError, "Missing the required parameter 'service' when calling InventoryApi.orgs_org_id_projects_project_id_infra_update_service_for_tenant"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/services/{service-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Service')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#orgs_org_id_projects_project_id_infra_update_service_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can't have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \"custom_attributes\" id 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_create_or_update_policy_context_profile(context_profile_id, policy_context_profile, opts = {})
      patch_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts)
      nil
    end

    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can&#39;t have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \&quot;custom_attributes\&quot; id 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_create_or_update_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.patch_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'policy_context_profile' is set
      if @api_client.config.client_side_validation && policy_context_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_context_profile' when calling InventoryApi.patch_create_or_update_policy_context_profile"
      end
      # resource path
      local_var_path = '/infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_context_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_create_or_update_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update custom attribute value list for given attribute key.
    # This API updates custom attribute value list for given key in the request. This replaces the  existing list with the list provided in the request 
    # @param policy_custom_attributes 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_custom_attribute(policy_custom_attributes, opts = {})
      patch_custom_attribute_with_http_info(policy_custom_attributes, opts)
      nil
    end

    # Update custom attribute value list for given attribute key.
    # This API updates custom attribute value list for given key in the request. This replaces the  existing list with the list provided in the request 
    # @param policy_custom_attributes 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_custom_attribute_with_http_info(policy_custom_attributes, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_custom_attribute ...'
      end
      # verify the required parameter 'policy_custom_attributes' is set
      if @api_client.config.client_side_validation && policy_custom_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_custom_attributes' when calling InventoryApi.patch_custom_attribute"
      end
      # resource path
      local_var_path = '/infra/context-profiles/custom-attributes/default'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_custom_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_custom_attribute\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update custom object attribute value list for given attribute key
    # This API updates custom attribute value list for given key.  <br> This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default for create/update custom object attribute value list for given attribute key 
    # @param policy_attributes 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_custom_attribute_list(policy_attributes, opts = {})
      patch_custom_attribute_list_with_http_info(policy_attributes, opts)
      nil
    end

    # Update custom object attribute value list for given attribute key
    # This API updates custom attribute value list for given key.  &lt;br&gt; This rest routine is deprecated. Use /infra/context-profiles/custom-attributes/default for create/update custom object attribute value list for given attribute key 
    # @param policy_attributes 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_custom_attribute_list_with_http_info(policy_attributes, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_custom_attribute_list ...'
      end
      # verify the required parameter 'policy_attributes' is set
      if @api_client.config.client_side_validation && policy_attributes.nil?
        fail ArgumentError, "Missing the required parameter 'policy_attributes' when calling InventoryApi.patch_custom_attribute_list"
      end
      # resource path
      local_var_path = '/infra/context-profiles/custom-attributes'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_attributes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_custom_attribute_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a group external ID expression
    # If a group ExternalIDexpression with the expression-id is not already present, create a new ExternalIDexpresison. If it already exists, replace the existing ExternalIDexpression. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id ExternalIDExpression ID
    # @param external_id_expression 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_group_external_id_expression_for_domain(domain_id, group_id, expression_id, external_id_expression, opts = {})
      patch_group_external_id_expression_for_domain_with_http_info(domain_id, group_id, expression_id, external_id_expression, opts)
      nil
    end

    # Patch a group external ID expression
    # If a group ExternalIDexpression with the expression-id is not already present, create a new ExternalIDexpresison. If it already exists, replace the existing ExternalIDexpression. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id ExternalIDExpression ID
    # @param external_id_expression 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_group_external_id_expression_for_domain_with_http_info(domain_id, group_id, expression_id, external_id_expression, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_group_external_id_expression_for_domain ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.patch_group_external_id_expression_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.patch_group_external_id_expression_for_domain"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.patch_group_external_id_expression_for_domain"
      end
      # verify the required parameter 'external_id_expression' is set
      if @api_client.config.client_side_validation && external_id_expression.nil?
        fail ArgumentError, "Missing the required parameter 'external_id_expression' when calling InventoryApi.patch_group_external_id_expression_for_domain"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/external-id-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(external_id_expression)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_group_external_id_expression_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a group
    # If a group with the group-id is not already present, create a new group. If it already exists, patch the group. Group created with Kubernetes membership criteria includes only Antrea reported inventory as its members. Once created, Groups with Identity (Directory) Group members should be updated with the new Distinguished Name in case it is changed on AD Server. Maximum of 500 malicious IP Groups (i.e Group with criteria having IPAddress equals All MALICIOUS_IP) should be created. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_group_for_domain(domain_id, group_id, group, opts = {})
      patch_group_for_domain_with_http_info(domain_id, group_id, group, opts)
      nil
    end

    # Patch a group
    # If a group with the group-id is not already present, create a new group. If it already exists, patch the group. Group created with Kubernetes membership criteria includes only Antrea reported inventory as its members. Once created, Groups with Identity (Directory) Group members should be updated with the new Distinguished Name in case it is changed on AD Server. Maximum of 500 malicious IP Groups (i.e Group with criteria having IPAddress equals All MALICIOUS_IP) should be created. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_group_for_domain_with_http_info(domain_id, group_id, group, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_group_for_domain ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.patch_group_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.patch_group_for_domain"
      end
      # verify the required parameter 'group' is set
      if @api_client.config.client_side_validation && group.nil?
        fail ArgumentError, "Missing the required parameter 'group' when calling InventoryApi.patch_group_for_domain"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(group)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_group_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a group IP Address expression
    # If a group IPAddressExpression with the expression-id is not already present, create a new IPAddressExpression. If it already exists, replace the existing IPAddressExpression. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id IPAddressExpression ID
    # @param ip_address_expression 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_group_ip_address_expression_for_domain(domain_id, group_id, expression_id, ip_address_expression, opts = {})
      patch_group_ip_address_expression_for_domain_with_http_info(domain_id, group_id, expression_id, ip_address_expression, opts)
      nil
    end

    # Patch a group IP Address expression
    # If a group IPAddressExpression with the expression-id is not already present, create a new IPAddressExpression. If it already exists, replace the existing IPAddressExpression. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id IPAddressExpression ID
    # @param ip_address_expression 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_group_ip_address_expression_for_domain_with_http_info(domain_id, group_id, expression_id, ip_address_expression, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_group_ip_address_expression_for_domain ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.patch_group_ip_address_expression_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.patch_group_ip_address_expression_for_domain"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.patch_group_ip_address_expression_for_domain"
      end
      # verify the required parameter 'ip_address_expression' is set
      if @api_client.config.client_side_validation && ip_address_expression.nil?
        fail ArgumentError, "Missing the required parameter 'ip_address_expression' when calling InventoryApi.patch_group_ip_address_expression_for_domain"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/ip-address-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ip_address_expression)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_group_ip_address_expression_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a group MAC Address expression
    # If a group MACAddressExpression with the expression-id is not already present, create a new MACAddressExpression. If it already exists, replace the existing MACAddressExpression. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id MACAddressExpression ID
    # @param mac_address_expression 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_group_mac_address_expression_for_domain(domain_id, group_id, expression_id, mac_address_expression, opts = {})
      patch_group_mac_address_expression_for_domain_with_http_info(domain_id, group_id, expression_id, mac_address_expression, opts)
      nil
    end

    # Patch a group MAC Address expression
    # If a group MACAddressExpression with the expression-id is not already present, create a new MACAddressExpression. If it already exists, replace the existing MACAddressExpression. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id MACAddressExpression ID
    # @param mac_address_expression 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_group_mac_address_expression_for_domain_with_http_info(domain_id, group_id, expression_id, mac_address_expression, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_group_mac_address_expression_for_domain ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.patch_group_mac_address_expression_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.patch_group_mac_address_expression_for_domain"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.patch_group_mac_address_expression_for_domain"
      end
      # verify the required parameter 'mac_address_expression' is set
      if @api_client.config.client_side_validation && mac_address_expression.nil?
        fail ArgumentError, "Missing the required parameter 'mac_address_expression' when calling InventoryApi.patch_group_mac_address_expression_for_domain"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/mac-address-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(mac_address_expression)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_group_mac_address_expression_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a group path expression
    # If a group path_expression with the expression-id is not already present, create a new pathexpresison. If it already exists, replace the existing pathexpression. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id PathExpression ID
    # @param path_expression 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_group_path_expression_for_domain(domain_id, group_id, expression_id, path_expression, opts = {})
      patch_group_path_expression_for_domain_with_http_info(domain_id, group_id, expression_id, path_expression, opts)
      nil
    end

    # Patch a group path expression
    # If a group path_expression with the expression-id is not already present, create a new pathexpresison. If it already exists, replace the existing pathexpression. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param expression_id PathExpression ID
    # @param path_expression 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_group_path_expression_for_domain_with_http_info(domain_id, group_id, expression_id, path_expression, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_group_path_expression_for_domain ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.patch_group_path_expression_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.patch_group_path_expression_for_domain"
      end
      # verify the required parameter 'expression_id' is set
      if @api_client.config.client_side_validation && expression_id.nil?
        fail ArgumentError, "Missing the required parameter 'expression_id' when calling InventoryApi.patch_group_path_expression_for_domain"
      end
      # verify the required parameter 'path_expression' is set
      if @api_client.config.client_side_validation && path_expression.nil?
        fail ArgumentError, "Missing the required parameter 'path_expression' when calling InventoryApi.patch_group_path_expression_for_domain"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}/path-expressions/{expression-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s).sub('{' + 'expression-id' + '}', expression_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(path_expression)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_group_path_expression_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update L7 Access Profile entry
    # API will create/update L7 Access Profile entry
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param l7_access_entry 
    # @param [Hash] opts the optional parameters
    # @return [L7AccessEntry]
    def patch_l7_access_entry(l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts = {})
      data, _status_code, _headers = patch_l7_access_entry_with_http_info(l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts)
      data
    end

    # Create or update L7 Access Profile entry
    # API will create/update L7 Access Profile entry
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param l7_access_entry 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L7AccessEntry, Fixnum, Hash)>] L7AccessEntry data, response status code and response headers
    def patch_l7_access_entry_with_http_info(l7_access_profile_id, l7_access_entry_id, l7_access_entry, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_l7_access_entry ...'
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.patch_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry_id' is set
      if @api_client.config.client_side_validation && l7_access_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry_id' when calling InventoryApi.patch_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry' is set
      if @api_client.config.client_side_validation && l7_access_entry.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry' when calling InventoryApi.patch_l7_access_entry"
      end
      # resource path
      local_var_path = '/infra/l7-access-profiles/{l7-access-profile-id}/entries/{l7-access-entry-id}'.sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s).sub('{' + 'l7-access-entry-id' + '}', l7_access_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l7_access_entry)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_l7_access_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update L7 Access Profile
    # API will create/update L7 Access Profile
    # @param l7_access_profile_id L7 Access Profile ID
    # @param l7_access_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [L7AccessProfile]
    def patch_l7_access_profile(l7_access_profile_id, l7_access_profile, opts = {})
      data, _status_code, _headers = patch_l7_access_profile_with_http_info(l7_access_profile_id, l7_access_profile, opts)
      data
    end

    # Create or update L7 Access Profile
    # API will create/update L7 Access Profile
    # @param l7_access_profile_id L7 Access Profile ID
    # @param l7_access_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(L7AccessProfile, Fixnum, Hash)>] L7AccessProfile data, response status code and response headers
    def patch_l7_access_profile_with_http_info(l7_access_profile_id, l7_access_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_l7_access_profile ...'
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.patch_l7_access_profile"
      end
      # verify the required parameter 'l7_access_profile' is set
      if @api_client.config.client_side_validation && l7_access_profile.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile' when calling InventoryApi.patch_l7_access_profile"
      end
      # resource path
      local_var_path = '/infra/l7-access-profiles/{l7-access-profile-id}'.sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l7_access_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_l7_access_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update static mime content id
    # API will create/update static mime content id
    # @param static_mime_content_id static mime content id
    # @param static_mime_content 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [StaticMimeContent]
    def patch_policy_static_mime_content(static_mime_content_id, static_mime_content, opts = {})
      data, _status_code, _headers = patch_policy_static_mime_content_with_http_info(static_mime_content_id, static_mime_content, opts)
      data
    end

    # Create or update static mime content id
    # API will create/update static mime content id
    # @param static_mime_content_id static mime content id
    # @param static_mime_content 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(StaticMimeContent, Fixnum, Hash)>] StaticMimeContent data, response status code and response headers
    def patch_policy_static_mime_content_with_http_info(static_mime_content_id, static_mime_content, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_policy_static_mime_content ...'
      end
      # verify the required parameter 'static_mime_content_id' is set
      if @api_client.config.client_side_validation && static_mime_content_id.nil?
        fail ArgumentError, "Missing the required parameter 'static_mime_content_id' when calling InventoryApi.patch_policy_static_mime_content"
      end
      # verify the required parameter 'static_mime_content' is set
      if @api_client.config.client_side_validation && static_mime_content.nil?
        fail ArgumentError, "Missing the required parameter 'static_mime_content' when calling InventoryApi.patch_policy_static_mime_content"
      end
      # resource path
      local_var_path = '/infra/static-mime-contents/{static-mime-content-id}'.sub('{' + 'static-mime-content-id' + '}', static_mime_content_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_mime_content)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticMimeContent')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_policy_static_mime_content\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a ServiceEntry
    # If a service entry with the service-entry-id is not already present, create a new service entry. If it already exists, patch the service entry. 
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param service_entry 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_service_entry(service_id, service_entry_id, service_entry, opts = {})
      patch_service_entry_with_http_info(service_id, service_entry_id, service_entry, opts)
      nil
    end

    # Patch a ServiceEntry
    # If a service entry with the service-entry-id is not already present, create a new service entry. If it already exists, patch the service entry. 
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param service_entry 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_service_entry_with_http_info(service_id, service_entry_id, service_entry, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_service_entry ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.patch_service_entry"
      end
      # verify the required parameter 'service_entry_id' is set
      if @api_client.config.client_side_validation && service_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry_id' when calling InventoryApi.patch_service_entry"
      end
      # verify the required parameter 'service_entry' is set
      if @api_client.config.client_side_validation && service_entry.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry' when calling InventoryApi.patch_service_entry"
      end
      # resource path
      local_var_path = '/infra/services/{service-id}/service-entries/{service-entry-id}'.sub('{' + 'service-id' + '}', service_id.to_s).sub('{' + 'service-entry-id' + '}', service_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_entry)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_service_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a Service
    # Create a new service if a service with the given ID does not already exist. Creates new service entries if populated in the service. If a service with the given ID already exists, patch the service including the nested service entries. 
    # @param service_id Service ID
    # @param service 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_service_for_tenant(service_id, service, opts = {})
      patch_service_for_tenant_with_http_info(service_id, service, opts)
      nil
    end

    # Patch a Service
    # Create a new service if a service with the given ID does not already exist. Creates new service entries if populated in the service. If a service with the given ID already exists, patch the service including the nested service entries. 
    # @param service_id Service ID
    # @param service 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_service_for_tenant_with_http_info(service_id, service, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_service_for_tenant ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.patch_service_for_tenant"
      end
      # verify the required parameter 'service' is set
      if @api_client.config.client_side_validation && service.nil?
        fail ArgumentError, "Missing the required parameter 'service' when calling InventoryApi.patch_service_for_tenant"
      end
      # resource path
      local_var_path = '/infra/services/{service-id}'.sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_service_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update Group under specified Tier-0
    # If a Group with the group-id is not already present, create a new Group under the tier-0-id. Update if exists. The API valiates that Tier-0 is present before creating the Group. 
    # @param tier_0_id 
    # @param group_id 
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_tier0_group(tier_0_id, group_id, group, opts = {})
      patch_tier0_group_with_http_info(tier_0_id, group_id, group, opts)
      nil
    end

    # Create or update Group under specified Tier-0
    # If a Group with the group-id is not already present, create a new Group under the tier-0-id. Update if exists. The API valiates that Tier-0 is present before creating the Group. 
    # @param tier_0_id 
    # @param group_id 
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_tier0_group_with_http_info(tier_0_id, group_id, group, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.patch_tier0_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.patch_tier0_group"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.patch_tier0_group"
      end
      # verify the required parameter 'group' is set
      if @api_client.config.client_side_validation && group.nil?
        fail ArgumentError, "Missing the required parameter 'group' when calling InventoryApi.patch_tier0_group"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/groups/{group-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(group)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#patch_tier0_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can't have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&lt;policy-mgr&gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \"custom_attributes\" id 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [PolicyContextProfile]
    def put_create_or_update_policy_context_profile(context_profile_id, policy_context_profile, opts = {})
      data, _status_code, _headers = put_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts)
      data
    end

    # Create PolicyContextProfile
    # Creates/Updates a PolicyContextProfile, which encapsulates attribute and sub-attributes of network services. Rules for using attributes and sub-attributes in single PolicyContextProfile 1. One type of attribute can&#39;t have multiple occurrences. ( Eg. -    Attribute type APP_ID can be used only once per PolicyContextProfile.) 2. For specifying multiple values for an attribute, provide them in an array. 3. If sub-attribtes are mentioned for an attribute, then only single    value is allowed for that attribute. 4. To get a list of supported attributes and sub-attributes fire the following REST API    GET https://&amp;lt;policy-mgr&amp;gt;/policy/api/v1/infra/context-profiles/attributes 5. Do not create context profile with \&quot;custom_attributes\&quot; id 
    # @param context_profile_id 
    # @param policy_context_profile 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(PolicyContextProfile, Fixnum, Hash)>] PolicyContextProfile data, response status code and response headers
    def put_create_or_update_policy_context_profile_with_http_info(context_profile_id, policy_context_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.put_create_or_update_policy_context_profile ...'
      end
      # verify the required parameter 'context_profile_id' is set
      if @api_client.config.client_side_validation && context_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'context_profile_id' when calling InventoryApi.put_create_or_update_policy_context_profile"
      end
      # verify the required parameter 'policy_context_profile' is set
      if @api_client.config.client_side_validation && policy_context_profile.nil?
        fail ArgumentError, "Missing the required parameter 'policy_context_profile' when calling InventoryApi.put_create_or_update_policy_context_profile"
      end
      # resource path
      local_var_path = '/infra/context-profiles/{context-profile-id}'.sub('{' + 'context-profile-id' + '}', context_profile_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_context_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyContextProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#put_create_or_update_policy_context_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read group
    # Read group
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [Group]
    def read_group_for_domain(domain_id, group_id, opts = {})
      data, _status_code, _headers = read_group_for_domain_with_http_info(domain_id, group_id, opts)
      data
    end

    # Read group
    # Read group
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(Group, Fixnum, Hash)>] Group data, response status code and response headers
    def read_group_for_domain_with_http_info(domain_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.read_group_for_domain ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.read_group_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.read_group_for_domain"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Group')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#read_group_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read L7 Access Profile entry
    # Read Friewall L7 Access Profile entry
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param [Hash] opts the optional parameters
    # @return [L7AccessEntry]
    def read_l7_access_entry(l7_access_profile_id, l7_access_entry_id, opts = {})
      data, _status_code, _headers = read_l7_access_entry_with_http_info(l7_access_profile_id, l7_access_entry_id, opts)
      data
    end

    # Read L7 Access Profile entry
    # Read Friewall L7 Access Profile entry
    # @param l7_access_profile_id 
    # @param l7_access_entry_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L7AccessEntry, Fixnum, Hash)>] L7AccessEntry data, response status code and response headers
    def read_l7_access_entry_with_http_info(l7_access_profile_id, l7_access_entry_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.read_l7_access_entry ...'
      end
      # verify the required parameter 'l7_access_profile_id' is set
      if @api_client.config.client_side_validation && l7_access_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_profile_id' when calling InventoryApi.read_l7_access_entry"
      end
      # verify the required parameter 'l7_access_entry_id' is set
      if @api_client.config.client_side_validation && l7_access_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'l7_access_entry_id' when calling InventoryApi.read_l7_access_entry"
      end
      # resource path
      local_var_path = '/infra/l7-access-profiles/{l7-access-profile-id}/entries/{l7-access-entry-id}'.sub('{' + 'l7-access-profile-id' + '}', l7_access_profile_id.to_s).sub('{' + 'l7-access-entry-id' + '}', l7_access_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L7AccessEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#read_l7_access_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Service entry
    # Service entry
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param [Hash] opts the optional parameters
    # @return [ServiceEntry]
    def read_service_entry(service_id, service_entry_id, opts = {})
      data, _status_code, _headers = read_service_entry_with_http_info(service_id, service_entry_id, opts)
      data
    end

    # Service entry
    # Service entry
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceEntry, Fixnum, Hash)>] ServiceEntry data, response status code and response headers
    def read_service_entry_with_http_info(service_id, service_entry_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.read_service_entry ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.read_service_entry"
      end
      # verify the required parameter 'service_entry_id' is set
      if @api_client.config.client_side_validation && service_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry_id' when calling InventoryApi.read_service_entry"
      end
      # resource path
      local_var_path = '/infra/services/{service-id}/service-entries/{service-entry-id}'.sub('{' + 'service-id' + '}', service_id.to_s).sub('{' + 'service-entry-id' + '}', service_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#read_service_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a service
    # Read a service
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @return [Service]
    def read_service_for_tenant(service_id, opts = {})
      data, _status_code, _headers = read_service_for_tenant_with_http_info(service_id, opts)
      data
    end

    # Read a service
    # Read a service
    # @param service_id Service ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(Service, Fixnum, Hash)>] Service data, response status code and response headers
    def read_service_for_tenant_with_http_info(service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.read_service_for_tenant ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.read_service_for_tenant"
      end
      # resource path
      local_var_path = '/infra/services/{service-id}'.sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Service')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#read_service_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0 Group
    # Read Tier-0 Group
    # @param tier_0_id 
    # @param group_id 
    # @param [Hash] opts the optional parameters
    # @return [Group]
    def read_tier0_group(tier_0_id, group_id, opts = {})
      data, _status_code, _headers = read_tier0_group_with_http_info(tier_0_id, group_id, opts)
      data
    end

    # Read Tier-0 Group
    # Read Tier-0 Group
    # @param tier_0_id 
    # @param group_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Group, Fixnum, Hash)>] Group data, response status code and response headers
    def read_tier0_group_with_http_info(tier_0_id, group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.read_tier0_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling InventoryApi.read_tier0_group"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.read_tier0_group"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/groups/{group-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Group')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#read_tier0_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read the details of a virtual machine on the NSX Manager
    # This API return optional details about a virtual machines (e.g. user login session) from the specified enforcement point. In case of NSXT, virtual-machine-id would be the value of the external_id of the virtual machine. 
    # @param enforcement_point_name 
    # @param virtual_machine_id 
    # @param [Hash] opts the optional parameters
    # @return [VirtualMachineDetails]
    def read_virtual_machine_details(enforcement_point_name, virtual_machine_id, opts = {})
      data, _status_code, _headers = read_virtual_machine_details_with_http_info(enforcement_point_name, virtual_machine_id, opts)
      data
    end

    # Read the details of a virtual machine on the NSX Manager
    # This API return optional details about a virtual machines (e.g. user login session) from the specified enforcement point. In case of NSXT, virtual-machine-id would be the value of the external_id of the virtual machine. 
    # @param enforcement_point_name 
    # @param virtual_machine_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(VirtualMachineDetails, Fixnum, Hash)>] VirtualMachineDetails data, response status code and response headers
    def read_virtual_machine_details_with_http_info(enforcement_point_name, virtual_machine_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.read_virtual_machine_details ...'
      end
      # verify the required parameter 'enforcement_point_name' is set
      if @api_client.config.client_side_validation && enforcement_point_name.nil?
        fail ArgumentError, "Missing the required parameter 'enforcement_point_name' when calling InventoryApi.read_virtual_machine_details"
      end
      # verify the required parameter 'virtual_machine_id' is set
      if @api_client.config.client_side_validation && virtual_machine_id.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_machine_id' when calling InventoryApi.read_virtual_machine_details"
      end
      # resource path
      local_var_path = '/infra/realized-state/enforcement-points/{enforcement-point-name}/virtual-machines/{virtual-machine-id}/details'.sub('{' + 'enforcement-point-name' + '}', enforcement_point_name.to_s).sub('{' + 'virtual-machine-id' + '}', virtual_machine_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualMachineDetails')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#read_virtual_machine_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Assign or Unassign tag on multiple Virtual Machines.
    # Tag can be assigned or unassigned on multiple objects. Supported object type is  restricted to Virtual Machine for now and support for other objects will be added  later. Permissions for tag bulk operation would be similar to virtual machine tag permissions. 
    # @param operation_id 
    # @param tag_bulk_operation 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TagBulkOperation]
    def tag_bulk_update(operation_id, tag_bulk_operation, opts = {})
      data, _status_code, _headers = tag_bulk_update_with_http_info(operation_id, tag_bulk_operation, opts)
      data
    end

    # Assign or Unassign tag on multiple Virtual Machines.
    # Tag can be assigned or unassigned on multiple objects. Supported object type is  restricted to Virtual Machine for now and support for other objects will be added  later. Permissions for tag bulk operation would be similar to virtual machine tag permissions. 
    # @param operation_id 
    # @param tag_bulk_operation 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TagBulkOperation, Fixnum, Hash)>] TagBulkOperation data, response status code and response headers
    def tag_bulk_update_with_http_info(operation_id, tag_bulk_operation, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.tag_bulk_update ...'
      end
      # verify the required parameter 'operation_id' is set
      if @api_client.config.client_side_validation && operation_id.nil?
        fail ArgumentError, "Missing the required parameter 'operation_id' when calling InventoryApi.tag_bulk_update"
      end
      # verify the required parameter 'tag_bulk_operation' is set
      if @api_client.config.client_side_validation && tag_bulk_operation.nil?
        fail ArgumentError, "Missing the required parameter 'tag_bulk_operation' when calling InventoryApi.tag_bulk_update"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.tag_bulk_update, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling InventoryApi.tag_bulk_update, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tags/tag-operations/{operation-id}'.sub('{' + 'operation-id' + '}', operation_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tag_bulk_operation)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TagBulkOperation')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#tag_bulk_update\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Apply tags on virtual machine
    # Allows an admin to apply multiple tags to a virtual machine. This operation does not store the intent on the policy side. It applies the tag directly on the specified enforcement point. This operation will replace the existing tags on the virtual machine with the ones that have been passed. If the application of tag fails on the enforcement point, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g enforcement point is down, Enforcement point could not apply the tag due to constraints like max tags limit exceeded, etc.  <br> This API has been deprecated. Please use the new API POST /infra/realized-state/virtual-machines/<virtual-machine-id>/tags 
    # @param enforcement_point_name 
    # @param virtual_machine_tags_update 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def tag_virtual_machine(enforcement_point_name, virtual_machine_tags_update, opts = {})
      tag_virtual_machine_with_http_info(enforcement_point_name, virtual_machine_tags_update, opts)
      nil
    end

    # Apply tags on virtual machine
    # Allows an admin to apply multiple tags to a virtual machine. This operation does not store the intent on the policy side. It applies the tag directly on the specified enforcement point. This operation will replace the existing tags on the virtual machine with the ones that have been passed. If the application of tag fails on the enforcement point, then an error is reported. The admin will have to retry the operation again. Policy framework does not perform a retry. Failure could occur due to multiple reasons. For e.g enforcement point is down, Enforcement point could not apply the tag due to constraints like max tags limit exceeded, etc.  &lt;br&gt; This API has been deprecated. Please use the new API POST /infra/realized-state/virtual-machines/&lt;virtual-machine-id&gt;/tags 
    # @param enforcement_point_name 
    # @param virtual_machine_tags_update 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def tag_virtual_machine_with_http_info(enforcement_point_name, virtual_machine_tags_update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.tag_virtual_machine ...'
      end
      # verify the required parameter 'enforcement_point_name' is set
      if @api_client.config.client_side_validation && enforcement_point_name.nil?
        fail ArgumentError, "Missing the required parameter 'enforcement_point_name' when calling InventoryApi.tag_virtual_machine"
      end
      # verify the required parameter 'virtual_machine_tags_update' is set
      if @api_client.config.client_side_validation && virtual_machine_tags_update.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_machine_tags_update' when calling InventoryApi.tag_virtual_machine"
      end
      # resource path
      local_var_path = '/infra/realized-state/enforcement-points/{enforcement-point-name}/virtual-machines?action=update_tags'.sub('{' + 'enforcement-point-name' + '}', enforcement_point_name.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(virtual_machine_tags_update)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#tag_virtual_machine\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a group
    # If a group with the group-id is not already present, create a new group. If it already exists, update the group. Avoid creating groups with multiple MACAddressExpression and IPAddressExpression. In future releases, group will be restricted to contain a single MACAddressExpression and IPAddressExpression along with other expressions. To group IPAddresses or MACAddresses, use nested groups instead of multiple IPAddressExpressions/MACAddressExpression. Group created with Kubernetes membership criteria includes only Antrea reported inventory as its members. Once created, Groups with Identity (Directory) Group members should be updated with the new Distinguished Name in case it is changed on AD Server. Maximum of 500 malicious IP Groups (i.e Group with criteria having IPAddress equals All MALICIOUS_IP) should be created. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [Group]
    def update_group_for_domain(domain_id, group_id, group, opts = {})
      data, _status_code, _headers = update_group_for_domain_with_http_info(domain_id, group_id, group, opts)
      data
    end

    # Create or update a group
    # If a group with the group-id is not already present, create a new group. If it already exists, update the group. Avoid creating groups with multiple MACAddressExpression and IPAddressExpression. In future releases, group will be restricted to contain a single MACAddressExpression and IPAddressExpression along with other expressions. To group IPAddresses or MACAddresses, use nested groups instead of multiple IPAddressExpressions/MACAddressExpression. Group created with Kubernetes membership criteria includes only Antrea reported inventory as its members. Once created, Groups with Identity (Directory) Group members should be updated with the new Distinguished Name in case it is changed on AD Server. Maximum of 500 malicious IP Groups (i.e Group with criteria having IPAddress equals All MALICIOUS_IP) should be created. 
    # @param domain_id Domain ID
    # @param group_id Group ID
    # @param group 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Group, Fixnum, Hash)>] Group data, response status code and response headers
    def update_group_for_domain_with_http_info(domain_id, group_id, group, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.update_group_for_domain ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling InventoryApi.update_group_for_domain"
      end
      # verify the required parameter 'group_id' is set
      if @api_client.config.client_side_validation && group_id.nil?
        fail ArgumentError, "Missing the required parameter 'group_id' when calling InventoryApi.update_group_for_domain"
      end
      # verify the required parameter 'group' is set
      if @api_client.config.client_side_validation && group.nil?
        fail ArgumentError, "Missing the required parameter 'group' when calling InventoryApi.update_group_for_domain"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/groups/{group-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'group-id' + '}', group_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(group)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Group')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#update_group_for_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a ServiceEntry
    # If a service entry with the service-entry-id is not already present, create a new service entry. If it already exists, update the service entry. 
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param service_entry 
    # @param [Hash] opts the optional parameters
    # @return [ServiceEntry]
    def update_service_entry(service_id, service_entry_id, service_entry, opts = {})
      data, _status_code, _headers = update_service_entry_with_http_info(service_id, service_entry_id, service_entry, opts)
      data
    end

    # Create or update a ServiceEntry
    # If a service entry with the service-entry-id is not already present, create a new service entry. If it already exists, update the service entry. 
    # @param service_id Service ID
    # @param service_entry_id Service entry ID
    # @param service_entry 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceEntry, Fixnum, Hash)>] ServiceEntry data, response status code and response headers
    def update_service_entry_with_http_info(service_id, service_entry_id, service_entry, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.update_service_entry ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.update_service_entry"
      end
      # verify the required parameter 'service_entry_id' is set
      if @api_client.config.client_side_validation && service_entry_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry_id' when calling InventoryApi.update_service_entry"
      end
      # verify the required parameter 'service_entry' is set
      if @api_client.config.client_side_validation && service_entry.nil?
        fail ArgumentError, "Missing the required parameter 'service_entry' when calling InventoryApi.update_service_entry"
      end
      # resource path
      local_var_path = '/infra/services/{service-id}/service-entries/{service-entry-id}'.sub('{' + 'service-id' + '}', service_id.to_s).sub('{' + 'service-entry-id' + '}', service_entry_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_entry)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceEntry')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#update_service_entry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Service
    # Create a new service if a service with the given ID does not already exist. Creates new service entries if populated in the service. If a service with the given ID already exists, update the service including the nested service entries. This is a full replace. 
    # @param service_id Service ID
    # @param service 
    # @param [Hash] opts the optional parameters
    # @return [Service]
    def update_service_for_tenant(service_id, service, opts = {})
      data, _status_code, _headers = update_service_for_tenant_with_http_info(service_id, service, opts)
      data
    end

    # Create or update a Service
    # Create a new service if a service with the given ID does not already exist. Creates new service entries if populated in the service. If a service with the given ID already exists, update the service including the nested service entries. This is a full replace. 
    # @param service_id Service ID
    # @param service 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Service, Fixnum, Hash)>] Service data, response status code and response headers
    def update_service_for_tenant_with_http_info(service_id, service, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.update_service_for_tenant ...'
      end
      # verify the required parameter 'service_id' is set
      if @api_client.config.client_side_validation && service_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_id' when calling InventoryApi.update_service_for_tenant"
      end
      # verify the required parameter 'service' is set
      if @api_client.config.client_side_validation && service.nil?
        fail ArgumentError, "Missing the required parameter 'service' when calling InventoryApi.update_service_for_tenant"
      end
      # resource path
      local_var_path = '/infra/services/{service-id}'.sub('{' + 'service-id' + '}', service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Service')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#update_service_for_tenant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
