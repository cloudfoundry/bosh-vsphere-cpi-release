=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'uri'

module Nsxt9PolicyClient
  class TlsInspectionApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Update TLS policy
    # Update the TLS policy. This is a full replace. All the rules are replaced. Performance Note: If you want to edit several rules in a TLS policy, use this API. It will perform better than several individual rule APIs. Just pass all the rules which you wish to edit as embedded rules to it. 
    # @param policy_id Firewall TLS inspection poicy id
    # @param tls_policy 
    # @param [Hash] opts the optional parameters
    # @return [TlsPolicy]
    def create_or_replace_tls_policy(policy_id, tls_policy, opts = {})
      data, _status_code, _headers = create_or_replace_tls_policy_with_http_info(policy_id, tls_policy, opts)
      data
    end

    # Update TLS policy
    # Update the TLS policy. This is a full replace. All the rules are replaced. Performance Note: If you want to edit several rules in a TLS policy, use this API. It will perform better than several individual rule APIs. Just pass all the rules which you wish to edit as embedded rules to it. 
    # @param policy_id Firewall TLS inspection poicy id
    # @param tls_policy 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TlsPolicy, Fixnum, Hash)>] TlsPolicy data, response status code and response headers
    def create_or_replace_tls_policy_with_http_info(policy_id, tls_policy, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.create_or_replace_tls_policy ...'
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling TlsInspectionApi.create_or_replace_tls_policy"
      end
      # verify the required parameter 'tls_policy' is set
      if @api_client.config.client_side_validation && tls_policy.nil?
        fail ArgumentError, "Missing the required parameter 'tls_policy' when calling TlsInspectionApi.create_or_replace_tls_policy"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-policies/{policy-id}'.sub('{' + 'policy-id' + '}', policy_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tls_policy)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsPolicy')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#create_or_replace_tls_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update TLS rule
    # Update the TLS rule. Create new rule if a rule with the rule-id is not already present. Performance Note: If you want to edit several rules in a TLS policy, prefer below mentioned API for optimal performance. Pass all the rules which you wish to edit as embedded rules to it. Use this API - PATCH (or PUT) /infra/tls-inspection-policies/&lt;policy-id&gt; 
    # @param policy_id 
    # @param rule_id 
    # @param tls_rule 
    # @param [Hash] opts the optional parameters
    # @return [TlsRule]
    def create_or_replace_tls_rule(policy_id, rule_id, tls_rule, opts = {})
      data, _status_code, _headers = create_or_replace_tls_rule_with_http_info(policy_id, rule_id, tls_rule, opts)
      data
    end

    # Update TLS rule
    # Update the TLS rule. Create new rule if a rule with the rule-id is not already present. Performance Note: If you want to edit several rules in a TLS policy, prefer below mentioned API for optimal performance. Pass all the rules which you wish to edit as embedded rules to it. Use this API - PATCH (or PUT) /infra/tls-inspection-policies/&amp;lt;policy-id&amp;gt; 
    # @param policy_id 
    # @param rule_id 
    # @param tls_rule 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TlsRule, Fixnum, Hash)>] TlsRule data, response status code and response headers
    def create_or_replace_tls_rule_with_http_info(policy_id, rule_id, tls_rule, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.create_or_replace_tls_rule ...'
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling TlsInspectionApi.create_or_replace_tls_rule"
      end
      # verify the required parameter 'rule_id' is set
      if @api_client.config.client_side_validation && rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'rule_id' when calling TlsInspectionApi.create_or_replace_tls_rule"
      end
      # verify the required parameter 'tls_rule' is set
      if @api_client.config.client_side_validation && tls_rule.nil?
        fail ArgumentError, "Missing the required parameter 'tls_rule' when calling TlsInspectionApi.create_or_replace_tls_rule"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-policies/{policy-id}/rules/{rule-id}'.sub('{' + 'policy-id' + '}', policy_id.to_s).sub('{' + 'rule-id' + '}', rule_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tls_rule)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsRule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#create_or_replace_tls_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update a Tls profile.
    # Update user configurable properties of Tls profile. Each action profile supports the following 3 pre-defined config setting defaults:     Balanced, High Fidelity and High Security.  1 - External Profile Balanced (default) Sample intent path: /infra/tls-inspection-action-profiles/external-balanced-profile API payload: <pre> {     \"tls_config_setting\": \"BALANCED\",     \"resource_type\": \"TlsInspectionExternalProfile\",     \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",     \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\" } </pre> Profile with default settings: <pre> {     \"tls_config_setting\": \"BALANCED\",     \"invalid_cert_action\": \"ALLOW\",     \"decryption_fail_action\": \"BYPASS\",     \"crypto_enforcement\": \"ENFORCE\",     \"client_min_tls_version\": \"TLS_V1_1\",     \"client_max_tls_version\": \"TLS_V1_2\",     \"server_min_tls_version\": \"TLS_V1_1\",     \"server_max_tls_version\": \"TLS_V1_2\",     \"client_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",         \"TLS_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_RSA_WITH_AES_256_CBC_SHA256\"     ],     \"server_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",         \"TLS_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_RSA_WITH_AES_256_CBC_SHA256\"     ],     \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",     \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\",     \"ocsp_must_staple\": false,     \"resource_type\": \"TlsInspectionExternalProfile\",     \"id\": \"external-balanced-profile\",     \"display_name\": \"external-balanced-profile\",     \"path\": \"/infra/tls-inspection-action-profiles/external-balanced-profile\",     \"relative_path\": \"external-balanced-profile\",     \"parent_path\": \"/infra\",     \"unique_id\": \"bb236080-e49d-4475-9eb3-b749b075164a\",     \"marked_for_delete\": false,     \"overridden\": false,     \"trusted_ca_bundles\": [         \"/infra/cabundles/default_trusted_public_ca_bundle\"     ],     \"crls\": [         \"/infra/crls/nsx_default_public_crl\"     ],     \"idle_connection_timeout\": 5400,     \"_system_owned\": false,     \"_protection\": \"NOT_PROTECTED\",     \"_create_user\": \"admin\",     \"_create_time\": 1622225641015,     \"_last_modified_user\": \"admin\",     \"_last_modified_time\": 1622225641015,     \"_revision\": 0 } </pre>  2 - External Profile High Fidelity Sample intent path: /infra/tls-inspection-action-profiles/external-high-fidelity-profile Sample intent path: <pre> {     \"tls_config_setting\": \"HIGH_FIDELITY\",     \"resource_type\": \"TlsInspectionExternalProfile\",     \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",     \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\" } </pre> Profile with default settings: <pre> {     \"tls_config_setting\": \"HIGH_FIDELITY\",     \"invalid_cert_action\": \"ALLOW\",     \"decryption_fail_action\": \"BYPASS\",     \"crypto_enforcement\": \"TRANSPARENT\",     \"client_min_tls_version\": \"\",     \"client_max_tls_version\": \"\",     \"server_min_tls_version\": \"\",     \"server_max_tls_version\": \"\",     \"client_cipher_suite\": [],     \"server_cipher_suite\": [],     \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",     \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\",     \"ocsp_must_staple\": false,     \"resource_type\": \"TlsInspectionExternalProfile\",     \"id\": \"external-high-fidelity-profile\",     \"display_name\": \"external-high-fidelity-profile\",     \"path\": \"/infra/tls-inspection-action-profiles/external-high-fidelity-profile\",     \"relative_path\": \"external-high-fidelity-profile\",     \"parent_path\": \"/infra\",     \"unique_id\": \"bb6c8604-c8eb-44dd-aded-7407e0ca887c\",     \"marked_for_delete\": false,     \"overridden\": false,     \"trusted_ca_bundles\": [         \"/infra/cabundles/default_trusted_public_ca_bundle\"     ],     \"crls\": [         \"/infra/crls/nsx_default_public_crl\"     ],     \"idle_connection_timeout\": 5400,     \"_system_owned\": false,     \"_protection\": \"NOT_PROTECTED\",     \"_create_user\": \"admin\",     \"_create_time\": 1622225537386,     \"_last_modified_user\": \"admin\",     \"_last_modified_time\": 1622225537386,     \"_revision\": 0 } </pre>  3 - External Profile High Security Sample intent path:/infra/tls-inspection-action-profiles/external-high-security-profile Sample intent path: <pre> {     \"tls_config_setting\": \"HIGH_SECURITY\",     \"resource_type\": \"TlsInspectionExternalProfile\",     \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",     \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\" } </pre> Profile with default settings: <pre> {    \"tls_config_setting\": \"HIGH_SECURITY\",    \"invalid_cert_action\": \"BLOCK\",    \"decryption_fail_action\": \"BLOCK\",    \"crypto_enforcement\": \"ENFORCE\",    \"client_min_tls_version\": \"TLS_V1_2\",    \"client_max_tls_version\": \"TLS_V1_2\",    \"server_min_tls_version\": \"TLS_V1_2\",    \"server_max_tls_version\": \"TLS_V1_2\",    \"client_cipher_suite\": [        \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",        \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"    ],    \"server_cipher_suite\": [        \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",        \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"    ],    \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",    \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\",    \"ocsp_must_staple\": false,    \"resource_type\": \"TlsInspectionExternalProfile\",    \"id\": \"external-high-security-profile\",    \"display_name\": \"external-high-security-profile\",    \"path\": \"/infra/tls-inspection-action-profiles/external-high-security-profile\",    \"relative_path\": \"external-high-security-profile\",    \"parent_path\": \"/infra\",    \"unique_id\": \"e19cbc40-c679-4f32-9e40-aa5eedf7f254\",    \"marked_for_delete\": false,    \"overridden\": false,    \"trusted_ca_bundles\": [        \"/infra/cabundles/default_trusted_public_ca_bundle\"    ],    \"crls\": [        \"/infra/crls/nsx_default_public_crl\"    ],    \"idle_connection_timeout\": 5400,    \"_system_owned\": false,    \"_protection\": \"NOT_PROTECTED\",    \"_create_user\": \"admin\",    \"_create_time\": 1622141786963,    \"_last_modified_user\": \"admin\",    \"_last_modified_time\": 1622225387352,    \"_revision\": 4 } </pre>  4 - Internal Profile Balanced Sample intent path:/infra/tls-inspection-action-profiles/internal-balanced-profile Sample intent path: <pre> {     \"tls_config_setting\": \"BALANCED\",     \"resource_type\": \"TlsInspectionInternalProfile\",     \"server_certs_key\": [\"/infra/certificates/server-cert-1\"],     \"default_cert_key\": \"/infra/certificates/server-cert-1\" } </pre> Profile with default settings: <pre> {     \"tls_config_setting\": \"BALANCED\",     \"decryption_fail_action\": \"BYPASS\",     \"crypto_enforcement\": \"ENFORCE\",     \"client_min_tls_version\": \"TLS_V1_1\",     \"client_max_tls_version\": \"TLS_V1_2\",     \"server_min_tls_version\": \"TLS_V1_1\",     \"server_max_tls_version\": \"TLS_V1_2\",     \"client_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",         \"TLS_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_RSA_WITH_AES_256_CBC_SHA256\"     ],     \"server_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",         \"TLS_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_RSA_WITH_AES_256_CBC_SHA256\"     ],     \"server_certs_key\": [         \"/infra/certificates/server-cert-1\"     ],     \"default_cert_key\": \"/infra/certificates/server-cert-1\",     \"ocsp_must_staple\": false,     \"certificate_validation\": false,     \"resource_type\": \"TlsInspectionInternalProfile\",     \"id\": \"internal-balanced-profile\",     \"display_name\": \"internal-balanced-profile\",     \"path\": \"/infra/tls-inspection-action-profiles/internal-balanced-profile\",     \"relative_path\": \"internal-balanced-profile\",     \"parent_path\": \"/infra\",     \"unique_id\": \"b8486763-843a-4894-8dfd-5bceebb10cd3\",     \"marked_for_delete\": false,     \"overridden\": false,     \"trusted_ca_bundles\": [         \"/infra/cabundles/default_trusted_public_ca_bundle\"     ],     \"crls\": [         \"/infra/crls/nsx_default_public_crl\"     ],     \"idle_connection_timeout\": 5400,     \"_system_owned\": false,     \"_protection\": \"NOT_PROTECTED\",     \"_create_user\": \"admin\",     \"_create_time\": 1622071598527,     \"_last_modified_user\": \"admin\",     \"_last_modified_time\": 1622071598527,     \"_revision\": 0 } </pre>  5 - Internal Profile High Fidelity Sample intent path:/infra/tls-inspection-action-profiles/internal-high-fidelity-profile Sample intent path: <pre> {     \"tls_config_setting\": \"HIGH_FIDELITY\",     \"resource_type\": \"TlsInspectionInternalProfile\",     \"server_certs_key\": [\"/infra/certificates/server-cert-1\"],     \"default_cert_key\": \"/infra/certificates/server-cert-1\" } </pre> Profile with default settings: <pre> {     \"tls_config_setting\": \"HIGH_FIDELITY\",     \"decryption_fail_action\": \"BYPASS\",     \"crypto_enforcement\": \"TRANSPARENT\",     \"client_min_tls_version\": \"\",     \"client_max_tls_version\": \"\",     \"server_min_tls_version\": \"\",     \"server_max_tls_version\": \"\",     \"client_cipher_suite\": [],     \"server_cipher_suite\": [],     \"server_certs_key\": [         \"/infra/certificates/server-cert-1\"     ],     \"default_cert_key\": \"/infra/certificates/server-cert-1\",     \"ocsp_must_staple\": false,     \"certificate_validation\": false,     \"resource_type\": \"TlsInspectionInternalProfile\",     \"id\": \"internal-high-fidelity-profile\",     \"display_name\": \"internal-high-fidelity-profile\",     \"path\": \"/infra/tls-inspection-action-profiles/internal-high-fidelity-profile\",     \"relative_path\": \"internal-high-fidelity-profile\",     \"parent_path\": \"/infra\",     \"unique_id\": \"27609d17-e642-4a7a-b414-176b3f7eca8d\",     \"marked_for_delete\": false,     \"overridden\": false,     \"trusted_ca_bundles\": [         \"/infra/cabundles/default_trusted_public_ca_bundle\"     ],     \"crls\": [         \"/infra/crls/nsx_default_public_crl\"     ],     \"idle_connection_timeout\": 5400,     \"_system_owned\": false,     \"_protection\": \"NOT_PROTECTED\",     \"_create_user\": \"admin\",     \"_create_time\": 1622071452299,     \"_last_modified_user\": \"admin\",     \"_last_modified_time\": 1622071452299,     \"_revision\": 0 } </pre>  6 - Internal Profile High Security Sample intent path:/infra/tls-inspection-action-profiles/internal-high-security-profile Sample intent path: <pre> {     \"tls_config_setting\": \"HIGH_SECURITY\",     \"resource_type\": \"TlsInspectionInternalProfile\",     \"server_certs_key\": [\"/infra/certificates/server-cert-1\"],     \"default_cert_key\": \"/infra/certificates/server-cert-1\" } </pre>  Profile with default settings: <pre> {     \"tls_config_setting\": \"HIGH_SECURITY\",     \"decryption_fail_action\": \"BLOCK\",     \"crypto_enforcement\": \"ENFORCE\",     \"client_min_tls_version\": \"TLS_V1_2\",     \"client_max_tls_version\": \"TLS_V1_2\",     \"server_min_tls_version\": \"TLS_V1_2\",     \"server_max_tls_version\": \"TLS_V1_2\",     \"client_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"     ],     \"server_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"     ],     \"server_certs_key\": [         \"/infra/certificates/server-cert-1\"     ],     \"default_cert_key\": \"/infra/certificates/server-cert-1\",     \"ocsp_must_staple\": false,     \"certificate_validation\": false,     \"resource_type\": \"TlsInspectionInternalProfile\",     \"id\": \"internal-high-security-profile\",     \"display_name\": \"internal-high-security-profile\",     \"path\": \"/infra/tls-inspection-action-profiles/internal-high-security-profile\",     \"relative_path\": \"internal-high-security-profile\",     \"parent_path\": \"/infra\",     \"unique_id\": \"52e3e7e8-718d-4eaf-a177-501f196c421a\",     \"marked_for_delete\": false,     \"overridden\": false,     \"trusted_ca_bundles\": [         \"/infra/cabundles/default_trusted_public_ca_bundle\"     ],     \"crls\": [         \"/infra/crls/nsx_default_public_crl\"     ],     \"idle_connection_timeout\": 5400,     \"_system_owned\": false,     \"_protection\": \"NOT_PROTECTED\",     \"_create_user\": \"admin\",     \"_create_time\": 1622071359539,     \"_last_modified_user\": \"admin\",     \"_last_modified_time\": 1622071359539,     \"_revision\": 0 } </pre> 
    # @param action_profile_id 
    # @param tls_profile 
    # @param [Hash] opts the optional parameters
    # @return [TlsProfile]
    def create_or_update_tls_profile(action_profile_id, tls_profile, opts = {})
      data, _status_code, _headers = create_or_update_tls_profile_with_http_info(action_profile_id, tls_profile, opts)
      data
    end

    # Update a Tls profile.
    # Update user configurable properties of Tls profile. Each action profile supports the following 3 pre-defined config setting defaults:     Balanced, High Fidelity and High Security.  1 - External Profile Balanced (default) Sample intent path: /infra/tls-inspection-action-profiles/external-balanced-profile API payload: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;BALANCED\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,     \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,     \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot; } &lt;/pre&gt; Profile with default settings: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;BALANCED\&quot;,     \&quot;invalid_cert_action\&quot;: \&quot;ALLOW\&quot;,     \&quot;decryption_fail_action\&quot;: \&quot;BYPASS\&quot;,     \&quot;crypto_enforcement\&quot;: \&quot;ENFORCE\&quot;,     \&quot;client_min_tls_version\&quot;: \&quot;TLS_V1_1\&quot;,     \&quot;client_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;server_min_tls_version\&quot;: \&quot;TLS_V1_1\&quot;,     \&quot;server_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;client_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_256_CBC_SHA256\&quot;     ],     \&quot;server_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_256_CBC_SHA256\&quot;     ],     \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,     \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot;,     \&quot;ocsp_must_staple\&quot;: false,     \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,     \&quot;id\&quot;: \&quot;external-balanced-profile\&quot;,     \&quot;display_name\&quot;: \&quot;external-balanced-profile\&quot;,     \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/external-balanced-profile\&quot;,     \&quot;relative_path\&quot;: \&quot;external-balanced-profile\&quot;,     \&quot;parent_path\&quot;: \&quot;/infra\&quot;,     \&quot;unique_id\&quot;: \&quot;bb236080-e49d-4475-9eb3-b749b075164a\&quot;,     \&quot;marked_for_delete\&quot;: false,     \&quot;overridden\&quot;: false,     \&quot;trusted_ca_bundles\&quot;: [         \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;     ],     \&quot;crls\&quot;: [         \&quot;/infra/crls/nsx_default_public_crl\&quot;     ],     \&quot;idle_connection_timeout\&quot;: 5400,     \&quot;_system_owned\&quot;: false,     \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,     \&quot;_create_user\&quot;: \&quot;admin\&quot;,     \&quot;_create_time\&quot;: 1622225641015,     \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,     \&quot;_last_modified_time\&quot;: 1622225641015,     \&quot;_revision\&quot;: 0 } &lt;/pre&gt;  2 - External Profile High Fidelity Sample intent path: /infra/tls-inspection-action-profiles/external-high-fidelity-profile Sample intent path: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_FIDELITY\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,     \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,     \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot; } &lt;/pre&gt; Profile with default settings: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_FIDELITY\&quot;,     \&quot;invalid_cert_action\&quot;: \&quot;ALLOW\&quot;,     \&quot;decryption_fail_action\&quot;: \&quot;BYPASS\&quot;,     \&quot;crypto_enforcement\&quot;: \&quot;TRANSPARENT\&quot;,     \&quot;client_min_tls_version\&quot;: \&quot;\&quot;,     \&quot;client_max_tls_version\&quot;: \&quot;\&quot;,     \&quot;server_min_tls_version\&quot;: \&quot;\&quot;,     \&quot;server_max_tls_version\&quot;: \&quot;\&quot;,     \&quot;client_cipher_suite\&quot;: [],     \&quot;server_cipher_suite\&quot;: [],     \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,     \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot;,     \&quot;ocsp_must_staple\&quot;: false,     \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,     \&quot;id\&quot;: \&quot;external-high-fidelity-profile\&quot;,     \&quot;display_name\&quot;: \&quot;external-high-fidelity-profile\&quot;,     \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/external-high-fidelity-profile\&quot;,     \&quot;relative_path\&quot;: \&quot;external-high-fidelity-profile\&quot;,     \&quot;parent_path\&quot;: \&quot;/infra\&quot;,     \&quot;unique_id\&quot;: \&quot;bb6c8604-c8eb-44dd-aded-7407e0ca887c\&quot;,     \&quot;marked_for_delete\&quot;: false,     \&quot;overridden\&quot;: false,     \&quot;trusted_ca_bundles\&quot;: [         \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;     ],     \&quot;crls\&quot;: [         \&quot;/infra/crls/nsx_default_public_crl\&quot;     ],     \&quot;idle_connection_timeout\&quot;: 5400,     \&quot;_system_owned\&quot;: false,     \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,     \&quot;_create_user\&quot;: \&quot;admin\&quot;,     \&quot;_create_time\&quot;: 1622225537386,     \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,     \&quot;_last_modified_time\&quot;: 1622225537386,     \&quot;_revision\&quot;: 0 } &lt;/pre&gt;  3 - External Profile High Security Sample intent path:/infra/tls-inspection-action-profiles/external-high-security-profile Sample intent path: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_SECURITY\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,     \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,     \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot; } &lt;/pre&gt; Profile with default settings: &lt;pre&gt; {    \&quot;tls_config_setting\&quot;: \&quot;HIGH_SECURITY\&quot;,    \&quot;invalid_cert_action\&quot;: \&quot;BLOCK\&quot;,    \&quot;decryption_fail_action\&quot;: \&quot;BLOCK\&quot;,    \&quot;crypto_enforcement\&quot;: \&quot;ENFORCE\&quot;,    \&quot;client_min_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,    \&quot;client_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,    \&quot;server_min_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,    \&quot;server_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,    \&quot;client_cipher_suite\&quot;: [        \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,        \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;    ],    \&quot;server_cipher_suite\&quot;: [        \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,        \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;    ],    \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,    \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot;,    \&quot;ocsp_must_staple\&quot;: false,    \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,    \&quot;id\&quot;: \&quot;external-high-security-profile\&quot;,    \&quot;display_name\&quot;: \&quot;external-high-security-profile\&quot;,    \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/external-high-security-profile\&quot;,    \&quot;relative_path\&quot;: \&quot;external-high-security-profile\&quot;,    \&quot;parent_path\&quot;: \&quot;/infra\&quot;,    \&quot;unique_id\&quot;: \&quot;e19cbc40-c679-4f32-9e40-aa5eedf7f254\&quot;,    \&quot;marked_for_delete\&quot;: false,    \&quot;overridden\&quot;: false,    \&quot;trusted_ca_bundles\&quot;: [        \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;    ],    \&quot;crls\&quot;: [        \&quot;/infra/crls/nsx_default_public_crl\&quot;    ],    \&quot;idle_connection_timeout\&quot;: 5400,    \&quot;_system_owned\&quot;: false,    \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,    \&quot;_create_user\&quot;: \&quot;admin\&quot;,    \&quot;_create_time\&quot;: 1622141786963,    \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,    \&quot;_last_modified_time\&quot;: 1622225387352,    \&quot;_revision\&quot;: 4 } &lt;/pre&gt;  4 - Internal Profile Balanced Sample intent path:/infra/tls-inspection-action-profiles/internal-balanced-profile Sample intent path: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;BALANCED\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;server_certs_key\&quot;: [\&quot;/infra/certificates/server-cert-1\&quot;],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot; } &lt;/pre&gt; Profile with default settings: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;BALANCED\&quot;,     \&quot;decryption_fail_action\&quot;: \&quot;BYPASS\&quot;,     \&quot;crypto_enforcement\&quot;: \&quot;ENFORCE\&quot;,     \&quot;client_min_tls_version\&quot;: \&quot;TLS_V1_1\&quot;,     \&quot;client_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;server_min_tls_version\&quot;: \&quot;TLS_V1_1\&quot;,     \&quot;server_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;client_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_256_CBC_SHA256\&quot;     ],     \&quot;server_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_256_CBC_SHA256\&quot;     ],     \&quot;server_certs_key\&quot;: [         \&quot;/infra/certificates/server-cert-1\&quot;     ],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot;,     \&quot;ocsp_must_staple\&quot;: false,     \&quot;certificate_validation\&quot;: false,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;id\&quot;: \&quot;internal-balanced-profile\&quot;,     \&quot;display_name\&quot;: \&quot;internal-balanced-profile\&quot;,     \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/internal-balanced-profile\&quot;,     \&quot;relative_path\&quot;: \&quot;internal-balanced-profile\&quot;,     \&quot;parent_path\&quot;: \&quot;/infra\&quot;,     \&quot;unique_id\&quot;: \&quot;b8486763-843a-4894-8dfd-5bceebb10cd3\&quot;,     \&quot;marked_for_delete\&quot;: false,     \&quot;overridden\&quot;: false,     \&quot;trusted_ca_bundles\&quot;: [         \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;     ],     \&quot;crls\&quot;: [         \&quot;/infra/crls/nsx_default_public_crl\&quot;     ],     \&quot;idle_connection_timeout\&quot;: 5400,     \&quot;_system_owned\&quot;: false,     \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,     \&quot;_create_user\&quot;: \&quot;admin\&quot;,     \&quot;_create_time\&quot;: 1622071598527,     \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,     \&quot;_last_modified_time\&quot;: 1622071598527,     \&quot;_revision\&quot;: 0 } &lt;/pre&gt;  5 - Internal Profile High Fidelity Sample intent path:/infra/tls-inspection-action-profiles/internal-high-fidelity-profile Sample intent path: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_FIDELITY\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;server_certs_key\&quot;: [\&quot;/infra/certificates/server-cert-1\&quot;],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot; } &lt;/pre&gt; Profile with default settings: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_FIDELITY\&quot;,     \&quot;decryption_fail_action\&quot;: \&quot;BYPASS\&quot;,     \&quot;crypto_enforcement\&quot;: \&quot;TRANSPARENT\&quot;,     \&quot;client_min_tls_version\&quot;: \&quot;\&quot;,     \&quot;client_max_tls_version\&quot;: \&quot;\&quot;,     \&quot;server_min_tls_version\&quot;: \&quot;\&quot;,     \&quot;server_max_tls_version\&quot;: \&quot;\&quot;,     \&quot;client_cipher_suite\&quot;: [],     \&quot;server_cipher_suite\&quot;: [],     \&quot;server_certs_key\&quot;: [         \&quot;/infra/certificates/server-cert-1\&quot;     ],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot;,     \&quot;ocsp_must_staple\&quot;: false,     \&quot;certificate_validation\&quot;: false,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;id\&quot;: \&quot;internal-high-fidelity-profile\&quot;,     \&quot;display_name\&quot;: \&quot;internal-high-fidelity-profile\&quot;,     \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/internal-high-fidelity-profile\&quot;,     \&quot;relative_path\&quot;: \&quot;internal-high-fidelity-profile\&quot;,     \&quot;parent_path\&quot;: \&quot;/infra\&quot;,     \&quot;unique_id\&quot;: \&quot;27609d17-e642-4a7a-b414-176b3f7eca8d\&quot;,     \&quot;marked_for_delete\&quot;: false,     \&quot;overridden\&quot;: false,     \&quot;trusted_ca_bundles\&quot;: [         \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;     ],     \&quot;crls\&quot;: [         \&quot;/infra/crls/nsx_default_public_crl\&quot;     ],     \&quot;idle_connection_timeout\&quot;: 5400,     \&quot;_system_owned\&quot;: false,     \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,     \&quot;_create_user\&quot;: \&quot;admin\&quot;,     \&quot;_create_time\&quot;: 1622071452299,     \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,     \&quot;_last_modified_time\&quot;: 1622071452299,     \&quot;_revision\&quot;: 0 } &lt;/pre&gt;  6 - Internal Profile High Security Sample intent path:/infra/tls-inspection-action-profiles/internal-high-security-profile Sample intent path: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_SECURITY\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;server_certs_key\&quot;: [\&quot;/infra/certificates/server-cert-1\&quot;],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot; } &lt;/pre&gt;  Profile with default settings: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_SECURITY\&quot;,     \&quot;decryption_fail_action\&quot;: \&quot;BLOCK\&quot;,     \&quot;crypto_enforcement\&quot;: \&quot;ENFORCE\&quot;,     \&quot;client_min_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;client_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;server_min_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;server_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;client_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;     ],     \&quot;server_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;     ],     \&quot;server_certs_key\&quot;: [         \&quot;/infra/certificates/server-cert-1\&quot;     ],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot;,     \&quot;ocsp_must_staple\&quot;: false,     \&quot;certificate_validation\&quot;: false,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;id\&quot;: \&quot;internal-high-security-profile\&quot;,     \&quot;display_name\&quot;: \&quot;internal-high-security-profile\&quot;,     \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/internal-high-security-profile\&quot;,     \&quot;relative_path\&quot;: \&quot;internal-high-security-profile\&quot;,     \&quot;parent_path\&quot;: \&quot;/infra\&quot;,     \&quot;unique_id\&quot;: \&quot;52e3e7e8-718d-4eaf-a177-501f196c421a\&quot;,     \&quot;marked_for_delete\&quot;: false,     \&quot;overridden\&quot;: false,     \&quot;trusted_ca_bundles\&quot;: [         \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;     ],     \&quot;crls\&quot;: [         \&quot;/infra/crls/nsx_default_public_crl\&quot;     ],     \&quot;idle_connection_timeout\&quot;: 5400,     \&quot;_system_owned\&quot;: false,     \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,     \&quot;_create_user\&quot;: \&quot;admin\&quot;,     \&quot;_create_time\&quot;: 1622071359539,     \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,     \&quot;_last_modified_time\&quot;: 1622071359539,     \&quot;_revision\&quot;: 0 } &lt;/pre&gt; 
    # @param action_profile_id 
    # @param tls_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TlsProfile, Fixnum, Hash)>] TlsProfile data, response status code and response headers
    def create_or_update_tls_profile_with_http_info(action_profile_id, tls_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.create_or_update_tls_profile ...'
      end
      # verify the required parameter 'action_profile_id' is set
      if @api_client.config.client_side_validation && action_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'action_profile_id' when calling TlsInspectionApi.create_or_update_tls_profile"
      end
      # verify the required parameter 'tls_profile' is set
      if @api_client.config.client_side_validation && tls_profile.nil?
        fail ArgumentError, "Missing the required parameter 'tls_profile' when calling TlsInspectionApi.create_or_update_tls_profile"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-action-profiles/{action-profile-id}'.sub('{' + 'action-profile-id' + '}', action_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tls_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#create_or_update_tls_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete TlsPolicy
    # Delete TlsPolicy
    # @param policy_id Firewall TLS inspection poicy id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tls_policy(policy_id, opts = {})
      delete_tls_policy_with_http_info(policy_id, opts)
      nil
    end

    # Delete TlsPolicy
    # Delete TlsPolicy
    # @param policy_id Firewall TLS inspection poicy id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tls_policy_with_http_info(policy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.delete_tls_policy ...'
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling TlsInspectionApi.delete_tls_policy"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-policies/{policy-id}'.sub('{' + 'policy-id' + '}', policy_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#delete_tls_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete a Tls profile.
    # Deletes a Tls profile. 
    # @param action_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tls_profile(action_profile_id, opts = {})
      delete_tls_profile_with_http_info(action_profile_id, opts)
      nil
    end

    # Delete a Tls profile.
    # Deletes a Tls profile. 
    # @param action_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tls_profile_with_http_info(action_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.delete_tls_profile ...'
      end
      # verify the required parameter 'action_profile_id' is set
      if @api_client.config.client_side_validation && action_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'action_profile_id' when calling TlsInspectionApi.delete_tls_profile"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-action-profiles/{action-profile-id}'.sub('{' + 'action-profile-id' + '}', action_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#delete_tls_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete rule
    # Delete rule
    # @param policy_id 
    # @param rule_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tls_rule(policy_id, rule_id, opts = {})
      delete_tls_rule_with_http_info(policy_id, rule_id, opts)
      nil
    end

    # Delete rule
    # Delete rule
    # @param policy_id 
    # @param rule_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tls_rule_with_http_info(policy_id, rule_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.delete_tls_rule ...'
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling TlsInspectionApi.delete_tls_rule"
      end
      # verify the required parameter 'rule_id' is set
      if @api_client.config.client_side_validation && rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'rule_id' when calling TlsInspectionApi.delete_tls_rule"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-policies/{policy-id}/rules/{rule-id}'.sub('{' + 'policy-id' + '}', policy_id.to_s).sub('{' + 'rule-id' + '}', rule_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#delete_tls_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get TLS profile with id.
    # Return Tls profile. 
    # @param action_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [TlsProfile]
    def get_tls_profile(action_profile_id, opts = {})
      data, _status_code, _headers = get_tls_profile_with_http_info(action_profile_id, opts)
      data
    end

    # Get TLS profile with id.
    # Return Tls profile. 
    # @param action_profile_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TlsProfile, Fixnum, Hash)>] TlsProfile data, response status code and response headers
    def get_tls_profile_with_http_info(action_profile_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.get_tls_profile ...'
      end
      # verify the required parameter 'action_profile_id' is set
      if @api_client.config.client_side_validation && action_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'action_profile_id' when calling TlsInspectionApi.get_tls_profile"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-action-profiles/{action-profile-id}'.sub('{' + 'action-profile-id' + '}', action_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#get_tls_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get TLS inspection FQDN state
    # Get TLS inspection FQDN state
    # @param tier_1_id 
    # @param fqdn_id 
    # @param [Hash] opts the optional parameters
    # @return [TlsStateObject]
    def get_tls_state_fqdn(tier_1_id, fqdn_id, opts = {})
      data, _status_code, _headers = get_tls_state_fqdn_with_http_info(tier_1_id, fqdn_id, opts)
      data
    end

    # Get TLS inspection FQDN state
    # Get TLS inspection FQDN state
    # @param tier_1_id 
    # @param fqdn_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TlsStateObject, Fixnum, Hash)>] TlsStateObject data, response status code and response headers
    def get_tls_state_fqdn_with_http_info(tier_1_id, fqdn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.get_tls_state_fqdn ...'
      end
      # verify the required parameter 'tier_1_id' is set
      if @api_client.config.client_side_validation && tier_1_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_1_id' when calling TlsInspectionApi.get_tls_state_fqdn"
      end
      # verify the required parameter 'fqdn_id' is set
      if @api_client.config.client_side_validation && fqdn_id.nil?
        fail ArgumentError, "Missing the required parameter 'fqdn_id' when calling TlsInspectionApi.get_tls_state_fqdn"
      end
      # resource path
      local_var_path = '/infra/tier-1s/{tier-1-id}/tls-inspection-state/fqdns/{fqdn-id}'.sub('{' + 'tier-1-id' + '}', tier_1_id.to_s).sub('{' + 'fqdn-id' + '}', fqdn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsStateObject')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#get_tls_state_fqdn\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List TLS policies
    # List all TLS policies.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [BOOLEAN] :include_rule_count Include the count of rules in policy (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TlsPolicyListResult]
    def list_tls_policies(opts = {})
      data, _status_code, _headers = list_tls_policies_with_http_info(opts)
      data
    end

    # List TLS policies
    # List all TLS policies.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [BOOLEAN] :include_rule_count Include the count of rules in policy
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TlsPolicyListResult, Fixnum, Hash)>] TlsPolicyListResult data, response status code and response headers
    def list_tls_policies_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.list_tls_policies ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TlsInspectionApi.list_tls_policies, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TlsInspectionApi.list_tls_policies, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tls-inspection-policies'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'include_rule_count'] = opts[:'include_rule_count'] if !opts[:'include_rule_count'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsPolicyListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#list_tls_policies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tls profiles available.
    # List all the Tls profiles available by requested resource_type. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TlsProfileListResult]
    def list_tls_profiles(opts = {})
      data, _status_code, _headers = list_tls_profiles_with_http_info(opts)
      data
    end

    # Get Tls profiles available.
    # List all the Tls profiles available by requested resource_type. 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TlsProfileListResult, Fixnum, Hash)>] TlsProfileListResult data, response status code and response headers
    def list_tls_profiles_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.list_tls_profiles ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TlsInspectionApi.list_tls_profiles, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TlsInspectionApi.list_tls_profiles, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tls-inspection-action-profiles'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsProfileListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#list_tls_profiles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List TLS rules
    # List TLS rules
    # @param policy_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TlsRuleListResult]
    def list_tls_rules(policy_id, opts = {})
      data, _status_code, _headers = list_tls_rules_with_http_info(policy_id, opts)
      data
    end

    # List TLS rules
    # List TLS rules
    # @param policy_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TlsRuleListResult, Fixnum, Hash)>] TlsRuleListResult data, response status code and response headers
    def list_tls_rules_with_http_info(policy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.list_tls_rules ...'
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling TlsInspectionApi.list_tls_rules"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TlsInspectionApi.list_tls_rules, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TlsInspectionApi.list_tls_rules, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tls-inspection-policies/{policy-id}/rules'.sub('{' + 'policy-id' + '}', policy_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsRuleListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#list_tls_rules\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # TLS inspection execution state details for the tier1
    # TLS inspection execution state details for the tier1 
    # @param tier_1_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :failed_domains TLS inspection failed domain filter (default to true)
    # @option opts [String] :fqdn Fully Qualified Domain Name
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TlsStateObjectListResult]
    def list_tls_state(tier_1_id, opts = {})
      data, _status_code, _headers = list_tls_state_with_http_info(tier_1_id, opts)
      data
    end

    # TLS inspection execution state details for the tier1
    # TLS inspection execution state details for the tier1 
    # @param tier_1_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :failed_domains TLS inspection failed domain filter
    # @option opts [String] :fqdn Fully Qualified Domain Name
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TlsStateObjectListResult, Fixnum, Hash)>] TlsStateObjectListResult data, response status code and response headers
    def list_tls_state_with_http_info(tier_1_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.list_tls_state ...'
      end
      # verify the required parameter 'tier_1_id' is set
      if @api_client.config.client_side_validation && tier_1_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_1_id' when calling TlsInspectionApi.list_tls_state"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TlsInspectionApi.list_tls_state, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TlsInspectionApi.list_tls_state, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-1s/{tier-1-id}/tls-inspection-state'.sub('{' + 'tier-1-id' + '}', tier_1_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'failed_domains'] = opts[:'failed_domains'] if !opts[:'failed_domains'].nil?
      query_params[:'fqdn'] = opts[:'fqdn'] if !opts[:'fqdn'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsStateObjectListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#list_tls_state\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # TLS inspection execution state fqdn details for the tier1
    # TLS inspection execution state fqdn details for the tier1 
    # @param tier_1_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :failed_domains TLS inspection failed domain filter (default to true)
    # @option opts [String] :fqdn Fully Qualified Domain Name
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TlsStateObjectListResult]
    def list_tls_state_fqdns(tier_1_id, opts = {})
      data, _status_code, _headers = list_tls_state_fqdns_with_http_info(tier_1_id, opts)
      data
    end

    # TLS inspection execution state fqdn details for the tier1
    # TLS inspection execution state fqdn details for the tier1 
    # @param tier_1_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :failed_domains TLS inspection failed domain filter
    # @option opts [String] :fqdn Fully Qualified Domain Name
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TlsStateObjectListResult, Fixnum, Hash)>] TlsStateObjectListResult data, response status code and response headers
    def list_tls_state_fqdns_with_http_info(tier_1_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.list_tls_state_fqdns ...'
      end
      # verify the required parameter 'tier_1_id' is set
      if @api_client.config.client_side_validation && tier_1_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_1_id' when calling TlsInspectionApi.list_tls_state_fqdns"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TlsInspectionApi.list_tls_state_fqdns, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TlsInspectionApi.list_tls_state_fqdns, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-1s/{tier-1-id}/tls-inspection-state/fqdns'.sub('{' + 'tier-1-id' + '}', tier_1_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'failed_domains'] = opts[:'failed_domains'] if !opts[:'failed_domains'].nil?
      query_params[:'fqdn'] = opts[:'fqdn'] if !opts[:'fqdn'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsStateObjectListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#list_tls_state_fqdns\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update TLS policy
    # Update the TLS policy. This is a full replace. All the rules are replaced. Performance Note: If you want to edit several rules in a TLS policy use this API. It will perform better than several individual rule APIs. Just pass all the rules which you wish to edit as embedded rules to it. 
    # @param policy_id Firewall TLS inspection poicy id
    # @param tls_policy 
    # @param [Hash] opts the optional parameters
    # @return [TlsPolicy]
    def patch_tls_policy(policy_id, tls_policy, opts = {})
      data, _status_code, _headers = patch_tls_policy_with_http_info(policy_id, tls_policy, opts)
      data
    end

    # Update TLS policy
    # Update the TLS policy. This is a full replace. All the rules are replaced. Performance Note: If you want to edit several rules in a TLS policy use this API. It will perform better than several individual rule APIs. Just pass all the rules which you wish to edit as embedded rules to it. 
    # @param policy_id Firewall TLS inspection poicy id
    # @param tls_policy 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TlsPolicy, Fixnum, Hash)>] TlsPolicy data, response status code and response headers
    def patch_tls_policy_with_http_info(policy_id, tls_policy, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.patch_tls_policy ...'
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling TlsInspectionApi.patch_tls_policy"
      end
      # verify the required parameter 'tls_policy' is set
      if @api_client.config.client_side_validation && tls_policy.nil?
        fail ArgumentError, "Missing the required parameter 'tls_policy' when calling TlsInspectionApi.patch_tls_policy"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-policies/{policy-id}'.sub('{' + 'policy-id' + '}', policy_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tls_policy)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsPolicy')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#patch_tls_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create a Tls profile.
    # Create a Tls profile with values provided. It creates profile based on the resource_type in the payload. Each action profile supports the following 3 pre-defined config setting defaults:     Balanced, High Fidelity and High Security.  1 - External Profile Balanced (default) Sample intent path: /infra/tls-inspection-action-profiles/external-balanced-profile API payload: <pre> {     \"tls_config_setting\": \"BALANCED\",     \"resource_type\": \"TlsInspectionExternalProfile\",     \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",     \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\" } </pre> Profile with default settings: <pre> {     \"tls_config_setting\": \"BALANCED\",     \"invalid_cert_action\": \"ALLOW\",     \"decryption_fail_action\": \"BYPASS\",     \"crypto_enforcement\": \"ENFORCE\",     \"client_min_tls_version\": \"TLS_V1_1\",     \"client_max_tls_version\": \"TLS_V1_2\",     \"server_min_tls_version\": \"TLS_V1_1\",     \"server_max_tls_version\": \"TLS_V1_2\",     \"client_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",         \"TLS_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_RSA_WITH_AES_256_CBC_SHA256\"     ],     \"server_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",         \"TLS_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_RSA_WITH_AES_256_CBC_SHA256\"     ],     \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",     \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\",     \"ocsp_must_staple\": false,     \"resource_type\": \"TlsInspectionExternalProfile\",     \"id\": \"external-balanced-profile\",     \"display_name\": \"external-balanced-profile\",     \"path\": \"/infra/tls-inspection-action-profiles/external-balanced-profile\",     \"relative_path\": \"external-balanced-profile\",     \"parent_path\": \"/infra\",     \"unique_id\": \"bb236080-e49d-4475-9eb3-b749b075164a\",     \"marked_for_delete\": false,     \"overridden\": false,     \"trusted_ca_bundles\": [         \"/infra/cabundles/default_trusted_public_ca_bundle\"     ],     \"crls\": [         \"/infra/crls/nsx_default_public_crl\"     ],     \"idle_connection_timeout\": 5400,     \"_system_owned\": false,     \"_protection\": \"NOT_PROTECTED\",     \"_create_user\": \"admin\",     \"_create_time\": 1622225641015,     \"_last_modified_user\": \"admin\",     \"_last_modified_time\": 1622225641015,     \"_revision\": 0 } </pre>  2 - External Profile High Fidelity Sample intent path: /infra/tls-inspection-action-profiles/external-high-fidelity-profile Sample intent path: <pre> {     \"tls_config_setting\": \"HIGH_FIDELITY\",     \"resource_type\": \"TlsInspectionExternalProfile\",     \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",     \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\" } </pre> Profile with default settings: <pre> {     \"tls_config_setting\": \"HIGH_FIDELITY\",     \"invalid_cert_action\": \"ALLOW\",     \"decryption_fail_action\": \"BYPASS\",     \"crypto_enforcement\": \"TRANSPARENT\",     \"client_min_tls_version\": \"\",     \"client_max_tls_version\": \"\",     \"server_min_tls_version\": \"\",     \"server_max_tls_version\": \"\",     \"client_cipher_suite\": [],     \"server_cipher_suite\": [],     \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",     \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\",     \"ocsp_must_staple\": false,     \"resource_type\": \"TlsInspectionExternalProfile\",     \"id\": \"external-high-fidelity-profile\",     \"display_name\": \"external-high-fidelity-profile\",     \"path\": \"/infra/tls-inspection-action-profiles/external-high-fidelity-profile\",     \"relative_path\": \"external-high-fidelity-profile\",     \"parent_path\": \"/infra\",     \"unique_id\": \"bb6c8604-c8eb-44dd-aded-7407e0ca887c\",     \"marked_for_delete\": false,     \"overridden\": false,     \"trusted_ca_bundles\": [         \"/infra/cabundles/default_trusted_public_ca_bundle\"     ],     \"crls\": [         \"/infra/crls/nsx_default_public_crl\"     ],     \"idle_connection_timeout\": 5400,     \"_system_owned\": false,     \"_protection\": \"NOT_PROTECTED\",     \"_create_user\": \"admin\",     \"_create_time\": 1622225537386,     \"_last_modified_user\": \"admin\",     \"_last_modified_time\": 1622225537386,     \"_revision\": 0 } </pre>  3 - External Profile High Security Sample intent path:/infra/tls-inspection-action-profiles/external-high-security-profile Sample intent path: <pre> {     \"tls_config_setting\": \"HIGH_SECURITY\",     \"resource_type\": \"TlsInspectionExternalProfile\",     \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",     \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\" } </pre> Profile with default settings: <pre> {    \"tls_config_setting\": \"HIGH_SECURITY\",    \"invalid_cert_action\": \"BLOCK\",    \"decryption_fail_action\": \"BLOCK\",    \"crypto_enforcement\": \"ENFORCE\",    \"client_min_tls_version\": \"TLS_V1_2\",    \"client_max_tls_version\": \"TLS_V1_2\",    \"server_min_tls_version\": \"TLS_V1_2\",    \"server_max_tls_version\": \"TLS_V1_2\",    \"client_cipher_suite\": [        \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",        \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"    ],    \"server_cipher_suite\": [        \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",        \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"    ],    \"proxy_trusted_ca_cert\": \"/infra/certificates/caCert1\",    \"proxy_untrusted_ca_cert\": \"/infra/certificates/caCert2\",    \"ocsp_must_staple\": false,    \"resource_type\": \"TlsInspectionExternalProfile\",    \"id\": \"external-high-security-profile\",    \"display_name\": \"external-high-security-profile\",    \"path\": \"/infra/tls-inspection-action-profiles/external-high-security-profile\",    \"relative_path\": \"external-high-security-profile\",    \"parent_path\": \"/infra\",    \"unique_id\": \"e19cbc40-c679-4f32-9e40-aa5eedf7f254\",    \"marked_for_delete\": false,    \"overridden\": false,    \"trusted_ca_bundles\": [        \"/infra/cabundles/default_trusted_public_ca_bundle\"    ],    \"crls\": [        \"/infra/crls/nsx_default_public_crl\"    ],    \"idle_connection_timeout\": 5400,    \"_system_owned\": false,    \"_protection\": \"NOT_PROTECTED\",    \"_create_user\": \"admin\",    \"_create_time\": 1622141786963,    \"_last_modified_user\": \"admin\",    \"_last_modified_time\": 1622225387352,    \"_revision\": 4 } </pre>  4 - Internal Profile Balanced Sample intent path:/infra/tls-inspection-action-profiles/internal-balanced-profile Sample intent path: <pre> {     \"tls_config_setting\": \"BALANCED\",     \"resource_type\": \"TlsInspectionInternalProfile\",     \"server_certs_key\": [\"/infra/certificates/server-cert-1\"],     \"default_cert_key\": \"/infra/certificates/server-cert-1\" } </pre> Profile with default settings: <pre> {     \"tls_config_setting\": \"BALANCED\",     \"decryption_fail_action\": \"BYPASS\",     \"crypto_enforcement\": \"ENFORCE\",     \"client_min_tls_version\": \"TLS_V1_1\",     \"client_max_tls_version\": \"TLS_V1_2\",     \"server_min_tls_version\": \"TLS_V1_1\",     \"server_max_tls_version\": \"TLS_V1_2\",     \"client_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",         \"TLS_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_RSA_WITH_AES_256_CBC_SHA256\"     ],     \"server_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",         \"TLS_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_RSA_WITH_AES_128_CBC_SHA256\",         \"TLS_RSA_WITH_AES_256_GCM_SHA384\",         \"TLS_RSA_WITH_AES_256_CBC_SHA256\"     ],     \"server_certs_key\": [         \"/infra/certificates/server-cert-1\"     ],     \"default_cert_key\": \"/infra/certificates/server-cert-1\",     \"ocsp_must_staple\": false,     \"certificate_validation\": false,     \"resource_type\": \"TlsInspectionInternalProfile\",     \"id\": \"internal-balanced-profile\",     \"display_name\": \"internal-balanced-profile\",     \"path\": \"/infra/tls-inspection-action-profiles/internal-balanced-profile\",     \"relative_path\": \"internal-balanced-profile\",     \"parent_path\": \"/infra\",     \"unique_id\": \"b8486763-843a-4894-8dfd-5bceebb10cd3\",     \"marked_for_delete\": false,     \"overridden\": false,     \"trusted_ca_bundles\": [         \"/infra/cabundles/default_trusted_public_ca_bundle\"     ],     \"crls\": [         \"/infra/crls/nsx_default_public_crl\"     ],     \"idle_connection_timeout\": 5400,     \"_system_owned\": false,     \"_protection\": \"NOT_PROTECTED\",     \"_create_user\": \"admin\",     \"_create_time\": 1622071598527,     \"_last_modified_user\": \"admin\",     \"_last_modified_time\": 1622071598527,     \"_revision\": 0 } </pre>  5 - Internal Profile High Fidelity Sample intent path:/infra/tls-inspection-action-profiles/internal-high-fidelity-profile Sample intent path: <pre> {     \"tls_config_setting\": \"HIGH_FIDELITY\",     \"resource_type\": \"TlsInspectionInternalProfile\",     \"server_certs_key\": [\"/infra/certificates/server-cert-1\"],     \"default_cert_key\": \"/infra/certificates/server-cert-1\" } </pre> Profile with default settings: <pre> {     \"tls_config_setting\": \"HIGH_FIDELITY\",     \"decryption_fail_action\": \"BYPASS\",     \"crypto_enforcement\": \"TRANSPARENT\",     \"client_min_tls_version\": \"\",     \"client_max_tls_version\": \"\",     \"server_min_tls_version\": \"\",     \"server_max_tls_version\": \"\",     \"client_cipher_suite\": [],     \"server_cipher_suite\": [],     \"server_certs_key\": [         \"/infra/certificates/server-cert-1\"     ],     \"default_cert_key\": \"/infra/certificates/server-cert-1\",     \"ocsp_must_staple\": false,     \"certificate_validation\": false,     \"resource_type\": \"TlsInspectionInternalProfile\",     \"id\": \"internal-high-fidelity-profile\",     \"display_name\": \"internal-high-fidelity-profile\",     \"path\": \"/infra/tls-inspection-action-profiles/internal-high-fidelity-profile\",     \"relative_path\": \"internal-high-fidelity-profile\",     \"parent_path\": \"/infra\",     \"unique_id\": \"27609d17-e642-4a7a-b414-176b3f7eca8d\",     \"marked_for_delete\": false,     \"overridden\": false,     \"trusted_ca_bundles\": [         \"/infra/cabundles/default_trusted_public_ca_bundle\"     ],     \"crls\": [         \"/infra/crls/nsx_default_public_crl\"     ],     \"idle_connection_timeout\": 5400,     \"_system_owned\": false,     \"_protection\": \"NOT_PROTECTED\",     \"_create_user\": \"admin\",     \"_create_time\": 1622071452299,     \"_last_modified_user\": \"admin\",     \"_last_modified_time\": 1622071452299,     \"_revision\": 0 } </pre>  6 - Internal Profile High Security Sample intent path:/infra/tls-inspection-action-profiles/internal-high-security-profile Sample intent path: <pre> {     \"tls_config_setting\": \"HIGH_SECURITY\",     \"resource_type\": \"TlsInspectionInternalProfile\",     \"server_certs_key\": [\"/infra/certificates/server-cert-1\"],     \"default_cert_key\": \"/infra/certificates/server-cert-1\" } </pre>  Profile with default settings: <pre> {     \"tls_config_setting\": \"HIGH_SECURITY\",     \"decryption_fail_action\": \"BLOCK\",     \"crypto_enforcement\": \"ENFORCE\",     \"client_min_tls_version\": \"TLS_V1_2\",     \"client_max_tls_version\": \"TLS_V1_2\",     \"server_min_tls_version\": \"TLS_V1_2\",     \"server_max_tls_version\": \"TLS_V1_2\",     \"client_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"     ],     \"server_cipher_suite\": [         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"     ],     \"server_certs_key\": [         \"/infra/certificates/server-cert-1\"     ],     \"default_cert_key\": \"/infra/certificates/server-cert-1\",     \"ocsp_must_staple\": false,     \"certificate_validation\": false,     \"resource_type\": \"TlsInspectionInternalProfile\",     \"id\": \"internal-high-security-profile\",     \"display_name\": \"internal-high-security-profile\",     \"path\": \"/infra/tls-inspection-action-profiles/internal-high-security-profile\",     \"relative_path\": \"internal-high-security-profile\",     \"parent_path\": \"/infra\",     \"unique_id\": \"52e3e7e8-718d-4eaf-a177-501f196c421a\",     \"marked_for_delete\": false,     \"overridden\": false,     \"trusted_ca_bundles\": [         \"/infra/cabundles/default_trusted_public_ca_bundle\"     ],     \"crls\": [         \"/infra/crls/nsx_default_public_crl\"     ],     \"idle_connection_timeout\": 5400,     \"_system_owned\": false,     \"_protection\": \"NOT_PROTECTED\",     \"_create_user\": \"admin\",     \"_create_time\": 1622071359539,     \"_last_modified_user\": \"admin\",     \"_last_modified_time\": 1622071359539,     \"_revision\": 0 } </pre> 
    # @param action_profile_id 
    # @param tls_profile 
    # @param [Hash] opts the optional parameters
    # @return [TlsProfile]
    def patch_tls_profile(action_profile_id, tls_profile, opts = {})
      data, _status_code, _headers = patch_tls_profile_with_http_info(action_profile_id, tls_profile, opts)
      data
    end

    # Create a Tls profile.
    # Create a Tls profile with values provided. It creates profile based on the resource_type in the payload. Each action profile supports the following 3 pre-defined config setting defaults:     Balanced, High Fidelity and High Security.  1 - External Profile Balanced (default) Sample intent path: /infra/tls-inspection-action-profiles/external-balanced-profile API payload: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;BALANCED\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,     \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,     \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot; } &lt;/pre&gt; Profile with default settings: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;BALANCED\&quot;,     \&quot;invalid_cert_action\&quot;: \&quot;ALLOW\&quot;,     \&quot;decryption_fail_action\&quot;: \&quot;BYPASS\&quot;,     \&quot;crypto_enforcement\&quot;: \&quot;ENFORCE\&quot;,     \&quot;client_min_tls_version\&quot;: \&quot;TLS_V1_1\&quot;,     \&quot;client_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;server_min_tls_version\&quot;: \&quot;TLS_V1_1\&quot;,     \&quot;server_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;client_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_256_CBC_SHA256\&quot;     ],     \&quot;server_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_256_CBC_SHA256\&quot;     ],     \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,     \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot;,     \&quot;ocsp_must_staple\&quot;: false,     \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,     \&quot;id\&quot;: \&quot;external-balanced-profile\&quot;,     \&quot;display_name\&quot;: \&quot;external-balanced-profile\&quot;,     \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/external-balanced-profile\&quot;,     \&quot;relative_path\&quot;: \&quot;external-balanced-profile\&quot;,     \&quot;parent_path\&quot;: \&quot;/infra\&quot;,     \&quot;unique_id\&quot;: \&quot;bb236080-e49d-4475-9eb3-b749b075164a\&quot;,     \&quot;marked_for_delete\&quot;: false,     \&quot;overridden\&quot;: false,     \&quot;trusted_ca_bundles\&quot;: [         \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;     ],     \&quot;crls\&quot;: [         \&quot;/infra/crls/nsx_default_public_crl\&quot;     ],     \&quot;idle_connection_timeout\&quot;: 5400,     \&quot;_system_owned\&quot;: false,     \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,     \&quot;_create_user\&quot;: \&quot;admin\&quot;,     \&quot;_create_time\&quot;: 1622225641015,     \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,     \&quot;_last_modified_time\&quot;: 1622225641015,     \&quot;_revision\&quot;: 0 } &lt;/pre&gt;  2 - External Profile High Fidelity Sample intent path: /infra/tls-inspection-action-profiles/external-high-fidelity-profile Sample intent path: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_FIDELITY\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,     \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,     \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot; } &lt;/pre&gt; Profile with default settings: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_FIDELITY\&quot;,     \&quot;invalid_cert_action\&quot;: \&quot;ALLOW\&quot;,     \&quot;decryption_fail_action\&quot;: \&quot;BYPASS\&quot;,     \&quot;crypto_enforcement\&quot;: \&quot;TRANSPARENT\&quot;,     \&quot;client_min_tls_version\&quot;: \&quot;\&quot;,     \&quot;client_max_tls_version\&quot;: \&quot;\&quot;,     \&quot;server_min_tls_version\&quot;: \&quot;\&quot;,     \&quot;server_max_tls_version\&quot;: \&quot;\&quot;,     \&quot;client_cipher_suite\&quot;: [],     \&quot;server_cipher_suite\&quot;: [],     \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,     \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot;,     \&quot;ocsp_must_staple\&quot;: false,     \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,     \&quot;id\&quot;: \&quot;external-high-fidelity-profile\&quot;,     \&quot;display_name\&quot;: \&quot;external-high-fidelity-profile\&quot;,     \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/external-high-fidelity-profile\&quot;,     \&quot;relative_path\&quot;: \&quot;external-high-fidelity-profile\&quot;,     \&quot;parent_path\&quot;: \&quot;/infra\&quot;,     \&quot;unique_id\&quot;: \&quot;bb6c8604-c8eb-44dd-aded-7407e0ca887c\&quot;,     \&quot;marked_for_delete\&quot;: false,     \&quot;overridden\&quot;: false,     \&quot;trusted_ca_bundles\&quot;: [         \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;     ],     \&quot;crls\&quot;: [         \&quot;/infra/crls/nsx_default_public_crl\&quot;     ],     \&quot;idle_connection_timeout\&quot;: 5400,     \&quot;_system_owned\&quot;: false,     \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,     \&quot;_create_user\&quot;: \&quot;admin\&quot;,     \&quot;_create_time\&quot;: 1622225537386,     \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,     \&quot;_last_modified_time\&quot;: 1622225537386,     \&quot;_revision\&quot;: 0 } &lt;/pre&gt;  3 - External Profile High Security Sample intent path:/infra/tls-inspection-action-profiles/external-high-security-profile Sample intent path: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_SECURITY\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,     \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,     \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot; } &lt;/pre&gt; Profile with default settings: &lt;pre&gt; {    \&quot;tls_config_setting\&quot;: \&quot;HIGH_SECURITY\&quot;,    \&quot;invalid_cert_action\&quot;: \&quot;BLOCK\&quot;,    \&quot;decryption_fail_action\&quot;: \&quot;BLOCK\&quot;,    \&quot;crypto_enforcement\&quot;: \&quot;ENFORCE\&quot;,    \&quot;client_min_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,    \&quot;client_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,    \&quot;server_min_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,    \&quot;server_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,    \&quot;client_cipher_suite\&quot;: [        \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,        \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;    ],    \&quot;server_cipher_suite\&quot;: [        \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,        \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;    ],    \&quot;proxy_trusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert1\&quot;,    \&quot;proxy_untrusted_ca_cert\&quot;: \&quot;/infra/certificates/caCert2\&quot;,    \&quot;ocsp_must_staple\&quot;: false,    \&quot;resource_type\&quot;: \&quot;TlsInspectionExternalProfile\&quot;,    \&quot;id\&quot;: \&quot;external-high-security-profile\&quot;,    \&quot;display_name\&quot;: \&quot;external-high-security-profile\&quot;,    \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/external-high-security-profile\&quot;,    \&quot;relative_path\&quot;: \&quot;external-high-security-profile\&quot;,    \&quot;parent_path\&quot;: \&quot;/infra\&quot;,    \&quot;unique_id\&quot;: \&quot;e19cbc40-c679-4f32-9e40-aa5eedf7f254\&quot;,    \&quot;marked_for_delete\&quot;: false,    \&quot;overridden\&quot;: false,    \&quot;trusted_ca_bundles\&quot;: [        \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;    ],    \&quot;crls\&quot;: [        \&quot;/infra/crls/nsx_default_public_crl\&quot;    ],    \&quot;idle_connection_timeout\&quot;: 5400,    \&quot;_system_owned\&quot;: false,    \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,    \&quot;_create_user\&quot;: \&quot;admin\&quot;,    \&quot;_create_time\&quot;: 1622141786963,    \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,    \&quot;_last_modified_time\&quot;: 1622225387352,    \&quot;_revision\&quot;: 4 } &lt;/pre&gt;  4 - Internal Profile Balanced Sample intent path:/infra/tls-inspection-action-profiles/internal-balanced-profile Sample intent path: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;BALANCED\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;server_certs_key\&quot;: [\&quot;/infra/certificates/server-cert-1\&quot;],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot; } &lt;/pre&gt; Profile with default settings: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;BALANCED\&quot;,     \&quot;decryption_fail_action\&quot;: \&quot;BYPASS\&quot;,     \&quot;crypto_enforcement\&quot;: \&quot;ENFORCE\&quot;,     \&quot;client_min_tls_version\&quot;: \&quot;TLS_V1_1\&quot;,     \&quot;client_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;server_min_tls_version\&quot;: \&quot;TLS_V1_1\&quot;,     \&quot;server_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;client_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_256_CBC_SHA256\&quot;     ],     \&quot;server_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_128_CBC_SHA256\&quot;,         \&quot;TLS_RSA_WITH_AES_256_GCM_SHA384\&quot;,         \&quot;TLS_RSA_WITH_AES_256_CBC_SHA256\&quot;     ],     \&quot;server_certs_key\&quot;: [         \&quot;/infra/certificates/server-cert-1\&quot;     ],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot;,     \&quot;ocsp_must_staple\&quot;: false,     \&quot;certificate_validation\&quot;: false,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;id\&quot;: \&quot;internal-balanced-profile\&quot;,     \&quot;display_name\&quot;: \&quot;internal-balanced-profile\&quot;,     \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/internal-balanced-profile\&quot;,     \&quot;relative_path\&quot;: \&quot;internal-balanced-profile\&quot;,     \&quot;parent_path\&quot;: \&quot;/infra\&quot;,     \&quot;unique_id\&quot;: \&quot;b8486763-843a-4894-8dfd-5bceebb10cd3\&quot;,     \&quot;marked_for_delete\&quot;: false,     \&quot;overridden\&quot;: false,     \&quot;trusted_ca_bundles\&quot;: [         \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;     ],     \&quot;crls\&quot;: [         \&quot;/infra/crls/nsx_default_public_crl\&quot;     ],     \&quot;idle_connection_timeout\&quot;: 5400,     \&quot;_system_owned\&quot;: false,     \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,     \&quot;_create_user\&quot;: \&quot;admin\&quot;,     \&quot;_create_time\&quot;: 1622071598527,     \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,     \&quot;_last_modified_time\&quot;: 1622071598527,     \&quot;_revision\&quot;: 0 } &lt;/pre&gt;  5 - Internal Profile High Fidelity Sample intent path:/infra/tls-inspection-action-profiles/internal-high-fidelity-profile Sample intent path: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_FIDELITY\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;server_certs_key\&quot;: [\&quot;/infra/certificates/server-cert-1\&quot;],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot; } &lt;/pre&gt; Profile with default settings: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_FIDELITY\&quot;,     \&quot;decryption_fail_action\&quot;: \&quot;BYPASS\&quot;,     \&quot;crypto_enforcement\&quot;: \&quot;TRANSPARENT\&quot;,     \&quot;client_min_tls_version\&quot;: \&quot;\&quot;,     \&quot;client_max_tls_version\&quot;: \&quot;\&quot;,     \&quot;server_min_tls_version\&quot;: \&quot;\&quot;,     \&quot;server_max_tls_version\&quot;: \&quot;\&quot;,     \&quot;client_cipher_suite\&quot;: [],     \&quot;server_cipher_suite\&quot;: [],     \&quot;server_certs_key\&quot;: [         \&quot;/infra/certificates/server-cert-1\&quot;     ],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot;,     \&quot;ocsp_must_staple\&quot;: false,     \&quot;certificate_validation\&quot;: false,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;id\&quot;: \&quot;internal-high-fidelity-profile\&quot;,     \&quot;display_name\&quot;: \&quot;internal-high-fidelity-profile\&quot;,     \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/internal-high-fidelity-profile\&quot;,     \&quot;relative_path\&quot;: \&quot;internal-high-fidelity-profile\&quot;,     \&quot;parent_path\&quot;: \&quot;/infra\&quot;,     \&quot;unique_id\&quot;: \&quot;27609d17-e642-4a7a-b414-176b3f7eca8d\&quot;,     \&quot;marked_for_delete\&quot;: false,     \&quot;overridden\&quot;: false,     \&quot;trusted_ca_bundles\&quot;: [         \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;     ],     \&quot;crls\&quot;: [         \&quot;/infra/crls/nsx_default_public_crl\&quot;     ],     \&quot;idle_connection_timeout\&quot;: 5400,     \&quot;_system_owned\&quot;: false,     \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,     \&quot;_create_user\&quot;: \&quot;admin\&quot;,     \&quot;_create_time\&quot;: 1622071452299,     \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,     \&quot;_last_modified_time\&quot;: 1622071452299,     \&quot;_revision\&quot;: 0 } &lt;/pre&gt;  6 - Internal Profile High Security Sample intent path:/infra/tls-inspection-action-profiles/internal-high-security-profile Sample intent path: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_SECURITY\&quot;,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;server_certs_key\&quot;: [\&quot;/infra/certificates/server-cert-1\&quot;],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot; } &lt;/pre&gt;  Profile with default settings: &lt;pre&gt; {     \&quot;tls_config_setting\&quot;: \&quot;HIGH_SECURITY\&quot;,     \&quot;decryption_fail_action\&quot;: \&quot;BLOCK\&quot;,     \&quot;crypto_enforcement\&quot;: \&quot;ENFORCE\&quot;,     \&quot;client_min_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;client_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;server_min_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;server_max_tls_version\&quot;: \&quot;TLS_V1_2\&quot;,     \&quot;client_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;     ],     \&quot;server_cipher_suite\&quot;: [         \&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\&quot;,         \&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\&quot;     ],     \&quot;server_certs_key\&quot;: [         \&quot;/infra/certificates/server-cert-1\&quot;     ],     \&quot;default_cert_key\&quot;: \&quot;/infra/certificates/server-cert-1\&quot;,     \&quot;ocsp_must_staple\&quot;: false,     \&quot;certificate_validation\&quot;: false,     \&quot;resource_type\&quot;: \&quot;TlsInspectionInternalProfile\&quot;,     \&quot;id\&quot;: \&quot;internal-high-security-profile\&quot;,     \&quot;display_name\&quot;: \&quot;internal-high-security-profile\&quot;,     \&quot;path\&quot;: \&quot;/infra/tls-inspection-action-profiles/internal-high-security-profile\&quot;,     \&quot;relative_path\&quot;: \&quot;internal-high-security-profile\&quot;,     \&quot;parent_path\&quot;: \&quot;/infra\&quot;,     \&quot;unique_id\&quot;: \&quot;52e3e7e8-718d-4eaf-a177-501f196c421a\&quot;,     \&quot;marked_for_delete\&quot;: false,     \&quot;overridden\&quot;: false,     \&quot;trusted_ca_bundles\&quot;: [         \&quot;/infra/cabundles/default_trusted_public_ca_bundle\&quot;     ],     \&quot;crls\&quot;: [         \&quot;/infra/crls/nsx_default_public_crl\&quot;     ],     \&quot;idle_connection_timeout\&quot;: 5400,     \&quot;_system_owned\&quot;: false,     \&quot;_protection\&quot;: \&quot;NOT_PROTECTED\&quot;,     \&quot;_create_user\&quot;: \&quot;admin\&quot;,     \&quot;_create_time\&quot;: 1622071359539,     \&quot;_last_modified_user\&quot;: \&quot;admin\&quot;,     \&quot;_last_modified_time\&quot;: 1622071359539,     \&quot;_revision\&quot;: 0 } &lt;/pre&gt; 
    # @param action_profile_id 
    # @param tls_profile 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TlsProfile, Fixnum, Hash)>] TlsProfile data, response status code and response headers
    def patch_tls_profile_with_http_info(action_profile_id, tls_profile, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.patch_tls_profile ...'
      end
      # verify the required parameter 'action_profile_id' is set
      if @api_client.config.client_side_validation && action_profile_id.nil?
        fail ArgumentError, "Missing the required parameter 'action_profile_id' when calling TlsInspectionApi.patch_tls_profile"
      end
      # verify the required parameter 'tls_profile' is set
      if @api_client.config.client_side_validation && tls_profile.nil?
        fail ArgumentError, "Missing the required parameter 'tls_profile' when calling TlsInspectionApi.patch_tls_profile"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-action-profiles/{action-profile-id}'.sub('{' + 'action-profile-id' + '}', action_profile_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tls_profile)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsProfile')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#patch_tls_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update TLS rule
    # Update the TLS rule. Create new rule if a rule with the rule-id is not already present. Performance Note: If you want to edit several rules in a TLS policy, prefer below mentioned API for optimal performance. Pass all the rules which you wish to edit as embedded rules to it. Use this API - PATCH (or PUT) /infra/tls-inspection-policies/&lt;policy-id&gt; 
    # @param policy_id 
    # @param rule_id 
    # @param tls_rule 
    # @param [Hash] opts the optional parameters
    # @return [TlsRule]
    def patch_tls_rule(policy_id, rule_id, tls_rule, opts = {})
      data, _status_code, _headers = patch_tls_rule_with_http_info(policy_id, rule_id, tls_rule, opts)
      data
    end

    # Update TLS rule
    # Update the TLS rule. Create new rule if a rule with the rule-id is not already present. Performance Note: If you want to edit several rules in a TLS policy, prefer below mentioned API for optimal performance. Pass all the rules which you wish to edit as embedded rules to it. Use this API - PATCH (or PUT) /infra/tls-inspection-policies/&amp;lt;policy-id&amp;gt; 
    # @param policy_id 
    # @param rule_id 
    # @param tls_rule 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TlsRule, Fixnum, Hash)>] TlsRule data, response status code and response headers
    def patch_tls_rule_with_http_info(policy_id, rule_id, tls_rule, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.patch_tls_rule ...'
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling TlsInspectionApi.patch_tls_rule"
      end
      # verify the required parameter 'rule_id' is set
      if @api_client.config.client_side_validation && rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'rule_id' when calling TlsInspectionApi.patch_tls_rule"
      end
      # verify the required parameter 'tls_rule' is set
      if @api_client.config.client_side_validation && tls_rule.nil?
        fail ArgumentError, "Missing the required parameter 'tls_rule' when calling TlsInspectionApi.patch_tls_rule"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-policies/{policy-id}/rules/{rule-id}'.sub('{' + 'policy-id' + '}', policy_id.to_s).sub('{' + 'rule-id' + '}', rule_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tls_rule)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsRule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#patch_tls_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read tls policy
    # Read TLS policy. 
    # @param policy_id Firewall TLS inspection poicy id
    # @param [Hash] opts the optional parameters
    # @return [TlsPolicy]
    def read_tls_policy(policy_id, opts = {})
      data, _status_code, _headers = read_tls_policy_with_http_info(policy_id, opts)
      data
    end

    # Read tls policy
    # Read TLS policy. 
    # @param policy_id Firewall TLS inspection poicy id
    # @param [Hash] opts the optional parameters
    # @return [Array<(TlsPolicy, Fixnum, Hash)>] TlsPolicy data, response status code and response headers
    def read_tls_policy_with_http_info(policy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.read_tls_policy ...'
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling TlsInspectionApi.read_tls_policy"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-policies/{policy-id}'.sub('{' + 'policy-id' + '}', policy_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsPolicy')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#read_tls_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read rule
    # Read rule
    # @param policy_id 
    # @param rule_id 
    # @param [Hash] opts the optional parameters
    # @return [TlsRule]
    def read_tls_rule(policy_id, rule_id, opts = {})
      data, _status_code, _headers = read_tls_rule_with_http_info(policy_id, rule_id, opts)
      data
    end

    # Read rule
    # Read rule
    # @param policy_id 
    # @param rule_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TlsRule, Fixnum, Hash)>] TlsRule data, response status code and response headers
    def read_tls_rule_with_http_info(policy_id, rule_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TlsInspectionApi.read_tls_rule ...'
      end
      # verify the required parameter 'policy_id' is set
      if @api_client.config.client_side_validation && policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'policy_id' when calling TlsInspectionApi.read_tls_rule"
      end
      # verify the required parameter 'rule_id' is set
      if @api_client.config.client_side_validation && rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'rule_id' when calling TlsInspectionApi.read_tls_rule"
      end
      # resource path
      local_var_path = '/infra/tls-inspection-policies/{policy-id}/rules/{rule-id}'.sub('{' + 'policy-id' + '}', policy_id.to_s).sub('{' + 'rule-id' + '}', rule_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TlsRule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TlsInspectionApi#read_tls_rule\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
