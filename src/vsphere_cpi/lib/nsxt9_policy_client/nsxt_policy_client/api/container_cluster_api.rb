=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'uri'

module Nsxt9PolicyClient
  class ContainerClusterApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Add a container cluster as a span of this security policy
    # Add a container cluster as a span of this security policy. If there already exists another object containing the same container cluster path, an error will be thrown. The container cluster path cannot be modified If the path has to be modified, then delete this entity and add a new entity with the desired container cluster path 
    # @param domain_id 
    # @param security_policy_id 
    # @param container_cluster_id 
    # @param security_policy_container_cluster 
    # @param [Hash] opts the optional parameters
    # @return [SecurityPolicyContainerCluster]
    def add_container_cluster_span(domain_id, security_policy_id, container_cluster_id, security_policy_container_cluster, opts = {})
      data, _status_code, _headers = add_container_cluster_span_with_http_info(domain_id, security_policy_id, container_cluster_id, security_policy_container_cluster, opts)
      data
    end

    # Add a container cluster as a span of this security policy
    # Add a container cluster as a span of this security policy. If there already exists another object containing the same container cluster path, an error will be thrown. The container cluster path cannot be modified If the path has to be modified, then delete this entity and add a new entity with the desired container cluster path 
    # @param domain_id 
    # @param security_policy_id 
    # @param container_cluster_id 
    # @param security_policy_container_cluster 
    # @param [Hash] opts the optional parameters
    # @return [Array<(SecurityPolicyContainerCluster, Fixnum, Hash)>] SecurityPolicyContainerCluster data, response status code and response headers
    def add_container_cluster_span_with_http_info(domain_id, security_policy_id, container_cluster_id, security_policy_container_cluster, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContainerClusterApi.add_container_cluster_span ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling ContainerClusterApi.add_container_cluster_span"
      end
      # verify the required parameter 'security_policy_id' is set
      if @api_client.config.client_side_validation && security_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_policy_id' when calling ContainerClusterApi.add_container_cluster_span"
      end
      # verify the required parameter 'container_cluster_id' is set
      if @api_client.config.client_side_validation && container_cluster_id.nil?
        fail ArgumentError, "Missing the required parameter 'container_cluster_id' when calling ContainerClusterApi.add_container_cluster_span"
      end
      # verify the required parameter 'security_policy_container_cluster' is set
      if @api_client.config.client_side_validation && security_policy_container_cluster.nil?
        fail ArgumentError, "Missing the required parameter 'security_policy_container_cluster' when calling ContainerClusterApi.add_container_cluster_span"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/security-policies/{security-policy-id}/container-cluster-span/{container-cluster-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'security-policy-id' + '}', security_policy_id.to_s).sub('{' + 'container-cluster-id' + '}', container_cluster_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(security_policy_container_cluster)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SecurityPolicyContainerCluster')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContainerClusterApi#add_container_cluster_span\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Deletes a security policy from this domain
    # Deletes the security policy along with all the rules 
    # @param domain_id 
    # @param security_policy_id 
    # @param antrea_cluster_1 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_cluster_container_for_security_policy(domain_id, security_policy_id, antrea_cluster_1, opts = {})
      delete_cluster_container_for_security_policy_with_http_info(domain_id, security_policy_id, antrea_cluster_1, opts)
      nil
    end

    # Deletes a security policy from this domain
    # Deletes the security policy along with all the rules 
    # @param domain_id 
    # @param security_policy_id 
    # @param antrea_cluster_1 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_cluster_container_for_security_policy_with_http_info(domain_id, security_policy_id, antrea_cluster_1, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContainerClusterApi.delete_cluster_container_for_security_policy ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling ContainerClusterApi.delete_cluster_container_for_security_policy"
      end
      # verify the required parameter 'security_policy_id' is set
      if @api_client.config.client_side_validation && security_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_policy_id' when calling ContainerClusterApi.delete_cluster_container_for_security_policy"
      end
      # verify the required parameter 'antrea_cluster_1' is set
      if @api_client.config.client_side_validation && antrea_cluster_1.nil?
        fail ArgumentError, "Missing the required parameter 'antrea_cluster_1' when calling ContainerClusterApi.delete_cluster_container_for_security_policy"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/security-policies/{security-policy-id}/container-cluster-span/{antrea-cluster-1}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'security-policy-id' + '}', security_policy_id.to_s).sub('{' + 'antrea-cluster-1' + '}', antrea_cluster_1.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContainerClusterApi#delete_cluster_container_for_security_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all container cluster span of a security policy
    # List all container cluster span of a security policy 
    # @param domain_id 
    # @param security_policy_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [SecurityPolicyContainerClusterListResult]
    def list_container_clusters_for_security_policy(domain_id, security_policy_id, opts = {})
      data, _status_code, _headers = list_container_clusters_for_security_policy_with_http_info(domain_id, security_policy_id, opts)
      data
    end

    # List all container cluster span of a security policy
    # List all container cluster span of a security policy 
    # @param domain_id 
    # @param security_policy_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(SecurityPolicyContainerClusterListResult, Fixnum, Hash)>] SecurityPolicyContainerClusterListResult data, response status code and response headers
    def list_container_clusters_for_security_policy_with_http_info(domain_id, security_policy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContainerClusterApi.list_container_clusters_for_security_policy ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling ContainerClusterApi.list_container_clusters_for_security_policy"
      end
      # verify the required parameter 'security_policy_id' is set
      if @api_client.config.client_side_validation && security_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_policy_id' when calling ContainerClusterApi.list_container_clusters_for_security_policy"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling ContainerClusterApi.list_container_clusters_for_security_policy, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling ContainerClusterApi.list_container_clusters_for_security_policy, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/domains/{domain-id}/security-policies/{security-policy-id}/container-cluster-span'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'security-policy-id' + '}', security_policy_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SecurityPolicyContainerClusterListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContainerClusterApi#list_container_clusters_for_security_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add a container cluster as a span of this security policy
    # Add a container cluster as a span of this security policy. If there already exists another object containing the same container cluster path, an error will be thrown. The container cluster path cannot be modified If the path has to be modified, then delete this entity and add a new entity with the desired container cluster path 
    # @param domain_id 
    # @param security_policy_id 
    # @param container_cluster_id 
    # @param security_policy_container_cluster 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_container_cluster_span(domain_id, security_policy_id, container_cluster_id, security_policy_container_cluster, opts = {})
      patch_container_cluster_span_with_http_info(domain_id, security_policy_id, container_cluster_id, security_policy_container_cluster, opts)
      nil
    end

    # Add a container cluster as a span of this security policy
    # Add a container cluster as a span of this security policy. If there already exists another object containing the same container cluster path, an error will be thrown. The container cluster path cannot be modified If the path has to be modified, then delete this entity and add a new entity with the desired container cluster path 
    # @param domain_id 
    # @param security_policy_id 
    # @param container_cluster_id 
    # @param security_policy_container_cluster 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_container_cluster_span_with_http_info(domain_id, security_policy_id, container_cluster_id, security_policy_container_cluster, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContainerClusterApi.patch_container_cluster_span ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling ContainerClusterApi.patch_container_cluster_span"
      end
      # verify the required parameter 'security_policy_id' is set
      if @api_client.config.client_side_validation && security_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_policy_id' when calling ContainerClusterApi.patch_container_cluster_span"
      end
      # verify the required parameter 'container_cluster_id' is set
      if @api_client.config.client_side_validation && container_cluster_id.nil?
        fail ArgumentError, "Missing the required parameter 'container_cluster_id' when calling ContainerClusterApi.patch_container_cluster_span"
      end
      # verify the required parameter 'security_policy_container_cluster' is set
      if @api_client.config.client_side_validation && security_policy_container_cluster.nil?
        fail ArgumentError, "Missing the required parameter 'security_policy_container_cluster' when calling ContainerClusterApi.patch_container_cluster_span"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/security-policies/{security-policy-id}/container-cluster-span/{container-cluster-id}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'security-policy-id' + '}', security_policy_id.to_s).sub('{' + 'container-cluster-id' + '}', container_cluster_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(security_policy_container_cluster)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContainerClusterApi#patch_container_cluster_span\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read container cluster for a security policy
    # Read container cluster for a security policy. 
    # @param domain_id 
    # @param security_policy_id 
    # @param antrea_cluster_1 
    # @param [Hash] opts the optional parameters
    # @return [SecurityPolicyContainerCluster]
    def read_container_cluster_span_for_security_policy(domain_id, security_policy_id, antrea_cluster_1, opts = {})
      data, _status_code, _headers = read_container_cluster_span_for_security_policy_with_http_info(domain_id, security_policy_id, antrea_cluster_1, opts)
      data
    end

    # Read container cluster for a security policy
    # Read container cluster for a security policy. 
    # @param domain_id 
    # @param security_policy_id 
    # @param antrea_cluster_1 
    # @param [Hash] opts the optional parameters
    # @return [Array<(SecurityPolicyContainerCluster, Fixnum, Hash)>] SecurityPolicyContainerCluster data, response status code and response headers
    def read_container_cluster_span_for_security_policy_with_http_info(domain_id, security_policy_id, antrea_cluster_1, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContainerClusterApi.read_container_cluster_span_for_security_policy ...'
      end
      # verify the required parameter 'domain_id' is set
      if @api_client.config.client_side_validation && domain_id.nil?
        fail ArgumentError, "Missing the required parameter 'domain_id' when calling ContainerClusterApi.read_container_cluster_span_for_security_policy"
      end
      # verify the required parameter 'security_policy_id' is set
      if @api_client.config.client_side_validation && security_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'security_policy_id' when calling ContainerClusterApi.read_container_cluster_span_for_security_policy"
      end
      # verify the required parameter 'antrea_cluster_1' is set
      if @api_client.config.client_side_validation && antrea_cluster_1.nil?
        fail ArgumentError, "Missing the required parameter 'antrea_cluster_1' when calling ContainerClusterApi.read_container_cluster_span_for_security_policy"
      end
      # resource path
      local_var_path = '/infra/domains/{domain-id}/security-policies/{security-policy-id}/container-cluster-span/{antrea-cluster-1}'.sub('{' + 'domain-id' + '}', domain_id.to_s).sub('{' + 'security-policy-id' + '}', security_policy_id.to_s).sub('{' + 'antrea-cluster-1' + '}', antrea_cluster_1.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SecurityPolicyContainerCluster')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContainerClusterApi#read_container_cluster_span_for_security_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
