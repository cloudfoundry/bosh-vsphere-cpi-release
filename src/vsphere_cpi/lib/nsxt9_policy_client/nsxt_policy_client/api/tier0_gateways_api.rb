=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'uri'

module Nsxt9PolicyClient
  class Tier0GatewaysApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [ByodPolicyServiceInstance]
    def create_byod_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      data, _status_code, _headers = create_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts)
      data
    end

    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ByodPolicyServiceInstance, Fixnum, Hash)>] ByodPolicyServiceInstance data, response status code and response headers
    def create_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_byod_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_byod_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_byod_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.create_byod_policy_service_instance"
      end
      # verify the required parameter 'byod_policy_service_instance' is set
      if @api_client.config.client_side_validation && byod_policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'byod_policy_service_instance' when calling Tier0GatewaysApi.create_byod_policy_service_instance"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(byod_policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ByodPolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_byod_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or patch an L3Vpn
    # Create the new L3Vpn if it does not exist. If the L3Vpn already exists, merge with the the existing one. This is a patch. - If the passed L3Vpn is a policy-based one and has new L3VpnRules, add them to the existing L3VpnRules. - If the passed L3Vpn is a policy-based one and also has existing L3VpnRules, update the existing L3VpnRules. This API is deprecated. Please use the following APIs instead: - PATCH /infra/ipsec-vpn-tunnel-profiles/&lt;tunnel-profile-id&gt; to patch the IPSecVpnTunnelProfile. - PATCH /infra/ipsec-vpn-ike-profiles/&lt;ike-profile-id&gt; to patch the IPSecVpnIkeProfile. - PATCH /infra/ipsec-vpn-dpd-profiles/&lt;dpd-profile-id&gt; to patch the IPSecVpnDpdProfile. - PATCH /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to patch the IPSecVpnLocalEndpoint. - PATCH /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/&lt;l3vpn-id&gt; to patch the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/patched: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/local-endpoints/&lt;local-endpoint-id&gt;. If an object with the same   \"local_address\" already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def create_or_patch_l3_vpn(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      create_or_patch_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts)
      nil
    end

    # Create or patch an L3Vpn
    # Create the new L3Vpn if it does not exist. If the L3Vpn already exists, merge with the the existing one. This is a patch. - If the passed L3Vpn is a policy-based one and has new L3VpnRules, add them to the existing L3VpnRules. - If the passed L3Vpn is a policy-based one and also has existing L3VpnRules, update the existing L3VpnRules. This API is deprecated. Please use the following APIs instead: - PATCH /infra/ipsec-vpn-tunnel-profiles/&amp;lt;tunnel-profile-id&amp;gt; to patch the IPSecVpnTunnelProfile. - PATCH /infra/ipsec-vpn-ike-profiles/&amp;lt;ike-profile-id&amp;gt; to patch the IPSecVpnIkeProfile. - PATCH /infra/ipsec-vpn-dpd-profiles/&amp;lt;dpd-profile-id&amp;gt; to patch the IPSecVpnDpdProfile. - PATCH /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/   default/local-endpoints/&amp;lt;local-endpoint-id&amp;gt; to patch the IPSecVpnLocalEndpoint. - PATCH /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/   default/sessions/&amp;lt;l3vpn-id&amp;gt; to patch the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/patched: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/   ipsec-vpn-services/default/local-endpoints/&amp;lt;local-endpoint-id&amp;gt;. If an object with the same   \&quot;local_address\&quot; already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/   ipsec-vpn-services/default/sessions/L3VPN_&amp;lt;l3vpn-id&amp;gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def create_or_patch_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_patch_l3_vpn ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_patch_l3_vpn"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_or_patch_l3_vpn"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling Tier0GatewaysApi.create_or_patch_l3_vpn"
      end
      # verify the required parameter 'l3_vpn' is set
      if @api_client.config.client_side_validation && l3_vpn.nil?
        fail ArgumentError, "Missing the required parameter 'l3_vpn' when calling Tier0GatewaysApi.create_or_patch_l3_vpn"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l3_vpn)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_patch_l3_vpn\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [BgpNeighborConfig]
    def create_or_replace_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      data, _status_code, _headers = create_or_replace_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts)
      data
    end

    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(BgpNeighborConfig, Fixnum, Hash)>] BgpNeighborConfig data, response status code and response headers
    def create_or_replace_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_or_replace_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.create_or_replace_bgp_neighbor_config"
      end
      # verify the required parameter 'bgp_neighbor_config' is set
      if @api_client.config.client_side_validation && bgp_neighbor_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_neighbor_config' when calling Tier0GatewaysApi.create_or_replace_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_neighbor_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP routing config
    # If BGP routing config is not already present, create BGP routing config. If it already exists, replace the BGP routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [BgpRoutingConfig]
    def create_or_replace_bgp_routing_config(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      data, _status_code, _headers = create_or_replace_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts)
      data
    end

    # Create or update a BGP routing config
    # If BGP routing config is not already present, create BGP routing config. If it already exists, replace the BGP routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(BgpRoutingConfig, Fixnum, Hash)>] BgpRoutingConfig data, response status code and response headers
    def create_or_replace_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_or_replace_bgp_routing_config"
      end
      # verify the required parameter 'bgp_routing_config' is set
      if @api_client.config.client_side_validation && bgp_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_routing_config' when calling Tier0GatewaysApi.create_or_replace_bgp_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP troubleshoot config
    # If BGP troubleshoot config is not present in BGP configuration, create a new BGP troubleshoot config with default value. If it already exists, update the BGP troubleshoot config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [BgpTroubleshootConfig]
    def create_or_replace_bgp_troubleshoot_config(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts = {})
      data, _status_code, _headers = create_or_replace_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts)
      data
    end

    # Create or update a BGP troubleshoot config
    # If BGP troubleshoot config is not present in BGP configuration, create a new BGP troubleshoot config with default value. If it already exists, update the BGP troubleshoot config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(BgpTroubleshootConfig, Fixnum, Hash)>] BgpTroubleshootConfig data, response status code and response headers
    def create_or_replace_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_bgp_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_bgp_troubleshoot_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_or_replace_bgp_troubleshoot_config"
      end
      # verify the required parameter 'bgp_troubleshoot_config' is set
      if @api_client.config.client_side_validation && bgp_troubleshoot_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_troubleshoot_config' when calling Tier0GatewaysApi.create_or_replace_bgp_troubleshoot_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_troubleshoot_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpTroubleshootConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_bgp_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP community list
    # If a community list with the community-list-id is not already present, create a new community list. If it already exists, replace the community list instance with the new object. 
    # @param tier_0_id 
    # @param community_list_id 
    # @param community_list 
    # @param [Hash] opts the optional parameters
    # @return [CommunityList]
    def create_or_replace_community_list(tier_0_id, community_list_id, community_list, opts = {})
      data, _status_code, _headers = create_or_replace_community_list_with_http_info(tier_0_id, community_list_id, community_list, opts)
      data
    end

    # Create or update a BGP community list
    # If a community list with the community-list-id is not already present, create a new community list. If it already exists, replace the community list instance with the new object. 
    # @param tier_0_id 
    # @param community_list_id 
    # @param community_list 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CommunityList, Fixnum, Hash)>] CommunityList data, response status code and response headers
    def create_or_replace_community_list_with_http_info(tier_0_id, community_list_id, community_list, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_community_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_community_list"
      end
      # verify the required parameter 'community_list_id' is set
      if @api_client.config.client_side_validation && community_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'community_list_id' when calling Tier0GatewaysApi.create_or_replace_community_list"
      end
      # verify the required parameter 'community_list' is set
      if @api_client.config.client_side_validation && community_list.nil?
        fail ArgumentError, "Missing the required parameter 'community_list' when calling Tier0GatewaysApi.create_or_replace_community_list"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/community-lists/{community-list-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'community-list-id' + '}', community_list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(community_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CommunityList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_community_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or replace an L3Vpn
    # Create a new L3Vpn if the L3Vpn with given id does not already exist. If the L3Vpn with the given id already exists, replace the existing L3Vpn. This a full replace. This API is deprecated. Please use the following APIs instead: - PUT /infra/ipsec-vpn-tunnel-profiles/&lt;tunnel-profile-id&gt; to update the IPSecVpnTunnelProfile. - PUT /infra/ipsec-vpn-ike-profiles/&lt;ike-profile-id&gt; to update the IPSecVpnIkeProfile. - PUT /infra/ipsec-vpn-dpd-profiles/&lt;dpd-profile-id&gt; to update the IPSecVpnDpdProfile. - PUT /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to update the IPSecVpnLocalEndpoint. - PUT /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/&lt;l3vpn-id&gt; to update the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/updated: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/local-endpoints/&lt;local-endpoint-id&gt;. If an object with the same   \"local_address\" already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/   ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [L3Vpn]
    def create_or_replace_l3_vpn(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      data, _status_code, _headers = create_or_replace_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts)
      data
    end

    # Create or replace an L3Vpn
    # Create a new L3Vpn if the L3Vpn with given id does not already exist. If the L3Vpn with the given id already exists, replace the existing L3Vpn. This a full replace. This API is deprecated. Please use the following APIs instead: - PUT /infra/ipsec-vpn-tunnel-profiles/&amp;lt;tunnel-profile-id&amp;gt; to update the IPSecVpnTunnelProfile. - PUT /infra/ipsec-vpn-ike-profiles/&amp;lt;ike-profile-id&amp;gt; to update the IPSecVpnIkeProfile. - PUT /infra/ipsec-vpn-dpd-profiles/&amp;lt;dpd-profile-id&amp;gt; to update the IPSecVpnDpdProfile. - PUT /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/   default/local-endpoints/&amp;lt;local-endpoint-id&amp;gt; to update the IPSecVpnLocalEndpoint. - PUT /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/   default/sessions/&amp;lt;l3vpn-id&amp;gt; to update the IPSecVpnSession. If used, this deprecated API will result in the following objects being internally created/updated: - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/   ipsec-vpn-services/default/local-endpoints/&amp;lt;local-endpoint-id&amp;gt;. If an object with the same   \&quot;local_address\&quot; already exists, then it will be re-used. - IPSecVpnSession: /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/   ipsec-vpn-services/default/sessions/L3VPN_&amp;lt;l3vpn-id&amp;gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param l3_vpn 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L3Vpn, Fixnum, Hash)>] L3Vpn data, response status code and response headers
    def create_or_replace_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, l3_vpn, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_l3_vpn ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_l3_vpn"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_or_replace_l3_vpn"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling Tier0GatewaysApi.create_or_replace_l3_vpn"
      end
      # verify the required parameter 'l3_vpn' is set
      if @api_client.config.client_side_validation && l3_vpn.nil?
        fail ArgumentError, "Missing the required parameter 'l3_vpn' when calling Tier0GatewaysApi.create_or_replace_l3_vpn"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(l3_vpn)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3Vpn')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_l3_vpn\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a OSPF Area config
    # If OSPF Area config is not already present, create OSPF Area config. If it already exists, replace the OSPF Area config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param area_id 
    # @param ospf_area_config 
    # @param [Hash] opts the optional parameters
    # @return [OspfAreaConfig]
    def create_or_replace_ospf_area_config(tier_0_id, locale_service_id, area_id, ospf_area_config, opts = {})
      data, _status_code, _headers = create_or_replace_ospf_area_config_with_http_info(tier_0_id, locale_service_id, area_id, ospf_area_config, opts)
      data
    end

    # Create or update a OSPF Area config
    # If OSPF Area config is not already present, create OSPF Area config. If it already exists, replace the OSPF Area config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param area_id 
    # @param ospf_area_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(OspfAreaConfig, Fixnum, Hash)>] OspfAreaConfig data, response status code and response headers
    def create_or_replace_ospf_area_config_with_http_info(tier_0_id, locale_service_id, area_id, ospf_area_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_ospf_area_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_ospf_area_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_or_replace_ospf_area_config"
      end
      # verify the required parameter 'area_id' is set
      if @api_client.config.client_side_validation && area_id.nil?
        fail ArgumentError, "Missing the required parameter 'area_id' when calling Tier0GatewaysApi.create_or_replace_ospf_area_config"
      end
      # verify the required parameter 'ospf_area_config' is set
      if @api_client.config.client_side_validation && ospf_area_config.nil?
        fail ArgumentError, "Missing the required parameter 'ospf_area_config' when calling Tier0GatewaysApi.create_or_replace_ospf_area_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf/areas/{area-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'area-id' + '}', area_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ospf_area_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfAreaConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_ospf_area_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a OSPF routing config
    # If OSPF routing config is not already present, create OSPF routing config. If it already exists, replace the OSPF routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param ospf_routing_config 
    # @param [Hash] opts the optional parameters
    # @return [OspfRoutingConfig]
    def create_or_replace_ospf_routing_config(tier_0_id, locale_service_id, ospf_routing_config, opts = {})
      data, _status_code, _headers = create_or_replace_ospf_routing_config_with_http_info(tier_0_id, locale_service_id, ospf_routing_config, opts)
      data
    end

    # Create or update a OSPF routing config
    # If OSPF routing config is not already present, create OSPF routing config. If it already exists, replace the OSPF routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param ospf_routing_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(OspfRoutingConfig, Fixnum, Hash)>] OspfRoutingConfig data, response status code and response headers
    def create_or_replace_ospf_routing_config_with_http_info(tier_0_id, locale_service_id, ospf_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_ospf_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_ospf_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_or_replace_ospf_routing_config"
      end
      # verify the required parameter 'ospf_routing_config' is set
      if @api_client.config.client_side_validation && ospf_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'ospf_routing_config' when calling Tier0GatewaysApi.create_or_replace_ospf_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ospf_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_ospf_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update NAT Rule
    # Create or update NAT Rule on Tier-0 denoted by Tier-0 ID, under NAT section denoted by &lt;nat-id&gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) NAT rule cannot be applied to a loopback interface or a label referencing loopback interfaces. For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PUT API, the path returned in the PUT/GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param nat_rule_id Rule ID
    # @param policy_nat_rule 
    # @param [Hash] opts the optional parameters
    # @return [PolicyNatRule]
    def create_or_replace_policy_nat_rule_on_tier0(tier_0_id, nat_id, nat_rule_id, policy_nat_rule, opts = {})
      data, _status_code, _headers = create_or_replace_policy_nat_rule_on_tier0_with_http_info(tier_0_id, nat_id, nat_rule_id, policy_nat_rule, opts)
      data
    end

    # Create or update NAT Rule
    # Create or update NAT Rule on Tier-0 denoted by Tier-0 ID, under NAT section denoted by &amp;lt;nat-id&amp;gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) NAT rule cannot be applied to a loopback interface or a label referencing loopback interfaces. For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PUT API, the path returned in the PUT/GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param nat_rule_id Rule ID
    # @param policy_nat_rule 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyNatRule, Fixnum, Hash)>] PolicyNatRule data, response status code and response headers
    def create_or_replace_policy_nat_rule_on_tier0_with_http_info(tier_0_id, nat_id, nat_rule_id, policy_nat_rule, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_policy_nat_rule_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_policy_nat_rule_on_tier0"
      end
      # verify the required parameter 'nat_id' is set
      if @api_client.config.client_side_validation && nat_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_id' when calling Tier0GatewaysApi.create_or_replace_policy_nat_rule_on_tier0"
      end
      # verify the required parameter 'nat_rule_id' is set
      if @api_client.config.client_side_validation && nat_rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_rule_id' when calling Tier0GatewaysApi.create_or_replace_policy_nat_rule_on_tier0"
      end
      # verify the required parameter 'policy_nat_rule' is set
      if @api_client.config.client_side_validation && policy_nat_rule.nil?
        fail ArgumentError, "Missing the required parameter 'policy_nat_rule' when calling Tier0GatewaysApi.create_or_replace_policy_nat_rule_on_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/nat/{nat-id}/nat-rules/{nat-rule-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'nat-id' + '}', nat_id.to_s).sub('{' + 'nat-rule-id' + '}', nat_rule_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_nat_rule)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyNatRule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_policy_nat_rule_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a prefix list
    # If prefix list for prefix-list-id is not already present, create a prefix list. If it already exists, replace the prefix list for prefix-list-id. Note:    Updating existing prefixes require order to be  preserved to avoid traffic impact. During PATCH operation,    reordering of existing prefixes may impact routes and eventually datapath.    Order here is crucial and it all depends upon action. If action for every prefix is PERMIT then order may    not impact but if there is DENY prefix then change in ordering could lead to traffic impact. 
    # @param tier_0_id Tier-0 ID
    # @param prefix_list_id Prefix List ID
    # @param prefix_list 
    # @param [Hash] opts the optional parameters
    # @return [PrefixList]
    def create_or_replace_prefix_list(tier_0_id, prefix_list_id, prefix_list, opts = {})
      data, _status_code, _headers = create_or_replace_prefix_list_with_http_info(tier_0_id, prefix_list_id, prefix_list, opts)
      data
    end

    # Create or update a prefix list
    # If prefix list for prefix-list-id is not already present, create a prefix list. If it already exists, replace the prefix list for prefix-list-id. Note:    Updating existing prefixes require order to be  preserved to avoid traffic impact. During PATCH operation,    reordering of existing prefixes may impact routes and eventually datapath.    Order here is crucial and it all depends upon action. If action for every prefix is PERMIT then order may    not impact but if there is DENY prefix then change in ordering could lead to traffic impact. 
    # @param tier_0_id Tier-0 ID
    # @param prefix_list_id Prefix List ID
    # @param prefix_list 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PrefixList, Fixnum, Hash)>] PrefixList data, response status code and response headers
    def create_or_replace_prefix_list_with_http_info(tier_0_id, prefix_list_id, prefix_list, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_prefix_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_prefix_list"
      end
      # verify the required parameter 'prefix_list_id' is set
      if @api_client.config.client_side_validation && prefix_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'prefix_list_id' when calling Tier0GatewaysApi.create_or_replace_prefix_list"
      end
      # verify the required parameter 'prefix_list' is set
      if @api_client.config.client_side_validation && prefix_list.nil?
        fail ArgumentError, "Missing the required parameter 'prefix_list' when calling Tier0GatewaysApi.create_or_replace_prefix_list"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/prefix-lists/{prefix-list-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'prefix-list-id' + '}', prefix_list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(prefix_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PrefixList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_prefix_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a route map
    # If a route map with the route-map-id is not already present, create a new route map. If it already exists, replace the route map instance with the new object. 
    # @param tier_0_id 
    # @param route_map_id 
    # @param tier0_route_map 
    # @param [Hash] opts the optional parameters
    # @return [Tier0RouteMap]
    def create_or_replace_route_map(tier_0_id, route_map_id, tier0_route_map, opts = {})
      data, _status_code, _headers = create_or_replace_route_map_with_http_info(tier_0_id, route_map_id, tier0_route_map, opts)
      data
    end

    # Create or update a route map
    # If a route map with the route-map-id is not already present, create a new route map. If it already exists, replace the route map instance with the new object. 
    # @param tier_0_id 
    # @param route_map_id 
    # @param tier0_route_map 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0RouteMap, Fixnum, Hash)>] Tier0RouteMap data, response status code and response headers
    def create_or_replace_route_map_with_http_info(tier_0_id, route_map_id, tier0_route_map, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_route_map ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_route_map"
      end
      # verify the required parameter 'route_map_id' is set
      if @api_client.config.client_side_validation && route_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_map_id' when calling Tier0GatewaysApi.create_or_replace_route_map"
      end
      # verify the required parameter 'tier0_route_map' is set
      if @api_client.config.client_side_validation && tier0_route_map.nil?
        fail ArgumentError, "Missing the required parameter 'tier0_route_map' when calling Tier0GatewaysApi.create_or_replace_route_map"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/route-maps/{route-map-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-map-id' + '}', route_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0_route_map)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0RouteMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_route_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a StaticRouteBfdTroubleshootConfig
    # If a StaticRouteBfdTroubleshootConfig is not already present, create a new StaticRouteBfdTroubleshootConfig. If it already exists, update the StaticRouteBfdTroubleshootConfig. This operation will fully replace the object. 
    # @param tier_0_id Tier-0 ID
    # @param static_route_bfd_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [StaticRouteBfdTroubleshootConfig]
    def create_or_replace_static_route_bfd_troubleshoot_config(tier_0_id, static_route_bfd_troubleshoot_config, opts = {})
      data, _status_code, _headers = create_or_replace_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, static_route_bfd_troubleshoot_config, opts)
      data
    end

    # Create or update a StaticRouteBfdTroubleshootConfig
    # If a StaticRouteBfdTroubleshootConfig is not already present, create a new StaticRouteBfdTroubleshootConfig. If it already exists, update the StaticRouteBfdTroubleshootConfig. This operation will fully replace the object. 
    # @param tier_0_id Tier-0 ID
    # @param static_route_bfd_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(StaticRouteBfdTroubleshootConfig, Fixnum, Hash)>] StaticRouteBfdTroubleshootConfig data, response status code and response headers
    def create_or_replace_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, static_route_bfd_troubleshoot_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_static_route_bfd_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_static_route_bfd_troubleshoot_config"
      end
      # verify the required parameter 'static_route_bfd_troubleshoot_config' is set
      if @api_client.config.client_side_validation && static_route_bfd_troubleshoot_config.nil?
        fail ArgumentError, "Missing the required parameter 'static_route_bfd_troubleshoot_config' when calling Tier0GatewaysApi.create_or_replace_static_route_bfd_troubleshoot_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_route_bfd_troubleshoot_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRouteBfdTroubleshootConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_static_route_bfd_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0
    # If a Tier-0 with the tier-0-id is not already present, create a new Tier-0. If it already exists, replace the Tier-0 instance with the new object. 
    # @param tier_0_id 
    # @param tier0 
    # @param [Hash] opts the optional parameters
    # @return [Tier0]
    def create_or_replace_tier0(tier_0_id, tier0, opts = {})
      data, _status_code, _headers = create_or_replace_tier0_with_http_info(tier_0_id, tier0, opts)
      data
    end

    # Create or update a Tier-0
    # If a Tier-0 with the tier-0-id is not already present, create a new Tier-0. If it already exists, replace the Tier-0 instance with the new object. 
    # @param tier_0_id 
    # @param tier0 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0, Fixnum, Hash)>] Tier0 data, response status code and response headers
    def create_or_replace_tier0_with_http_info(tier_0_id, tier0, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_tier0"
      end
      # verify the required parameter 'tier0' is set
      if @api_client.config.client_side_validation && tier0.nil?
        fail ArgumentError, "Missing the required parameter 'tier0' when calling Tier0GatewaysApi.create_or_replace_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0
    # If a Tier-0 with the tier-0-id is not already present, create a new Tier-0. If it already exists, replace the Tier-0 instance with the new object. 
    # @param tier_0_id 
    # @param tier0 
    # @param [Hash] opts the optional parameters
    # @return [Tier0]
    def create_or_replace_tier0_0(tier_0_id, tier0, opts = {})
      data, _status_code, _headers = create_or_replace_tier0_0_with_http_info(tier_0_id, tier0, opts)
      data
    end

    # Create or update a Tier-0
    # If a Tier-0 with the tier-0-id is not already present, create a new Tier-0. If it already exists, replace the Tier-0 instance with the new object. 
    # @param tier_0_id 
    # @param tier0 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0, Fixnum, Hash)>] Tier0 data, response status code and response headers
    def create_or_replace_tier0_0_with_http_info(tier_0_id, tier0, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_tier0_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_tier0_0"
      end
      # verify the required parameter 'tier0' is set
      if @api_client.config.client_side_validation && tier0.nil?
        fail ArgumentError, "Missing the required parameter 'tier0' when calling Tier0GatewaysApi.create_or_replace_tier0_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_tier0_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0 interface
    # If an interface with the interface-id is not already present, create a new interface. If it already exists, replace the interface with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param tier0_interface 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [Tier0Interface]
    def create_or_replace_tier0_interface(tier_0_id, locale_service_id, interface_id, tier0_interface, opts = {})
      data, _status_code, _headers = create_or_replace_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, tier0_interface, opts)
      data
    end

    # Create or update a Tier-0 interface
    # If an interface with the interface-id is not already present, create a new interface. If it already exists, replace the interface with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param tier0_interface 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(Tier0Interface, Fixnum, Hash)>] Tier0Interface data, response status code and response headers
    def create_or_replace_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, tier0_interface, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_tier0_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_tier0_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_or_replace_tier0_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.create_or_replace_tier0_interface"
      end
      # verify the required parameter 'tier0_interface' is set
      if @api_client.config.client_side_validation && tier0_interface.nil?
        fail ArgumentError, "Missing the required parameter 'tier0_interface' when calling Tier0GatewaysApi.create_or_replace_tier0_interface"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0_interface)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0Interface')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_tier0_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0 locale-services
    # If a Tier-0 locale-services with the locale-services-id is not already present, create a new locale-services. If it already exists, replace the Tier-0 locale-services instance with the new object. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param locale_services 
    # @param [Hash] opts the optional parameters
    # @return [LocaleServices]
    def create_or_replace_tier0_locale_services(tier_0_id, locale_services_id, locale_services, opts = {})
      data, _status_code, _headers = create_or_replace_tier0_locale_services_with_http_info(tier_0_id, locale_services_id, locale_services, opts)
      data
    end

    # Create or update a Tier-0 locale-services
    # If a Tier-0 locale-services with the locale-services-id is not already present, create a new locale-services. If it already exists, replace the Tier-0 locale-services instance with the new object. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param locale_services 
    # @param [Hash] opts the optional parameters
    # @return [Array<(LocaleServices, Fixnum, Hash)>] LocaleServices data, response status code and response headers
    def create_or_replace_tier0_locale_services_with_http_info(tier_0_id, locale_services_id, locale_services, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_tier0_locale_services ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_tier0_locale_services"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.create_or_replace_tier0_locale_services"
      end
      # verify the required parameter 'locale_services' is set
      if @api_client.config.client_side_validation && locale_services.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services' when calling Tier0GatewaysApi.create_or_replace_tier0_locale_services"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(locale_services)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'LocaleServices')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_tier0_locale_services\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0 static routes
    # If static routes for route-id are not already present, create static routes. If it already exists, replace the static routes for route-id. 
    # @param tier_0_id 
    # @param route_id 
    # @param static_routes 
    # @param [Hash] opts the optional parameters
    # @return [StaticRoutes]
    def create_or_replace_tier0_static_routes(tier_0_id, route_id, static_routes, opts = {})
      data, _status_code, _headers = create_or_replace_tier0_static_routes_with_http_info(tier_0_id, route_id, static_routes, opts)
      data
    end

    # Create or update a Tier-0 static routes
    # If static routes for route-id are not already present, create static routes. If it already exists, replace the static routes for route-id. 
    # @param tier_0_id 
    # @param route_id 
    # @param static_routes 
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticRoutes, Fixnum, Hash)>] StaticRoutes data, response status code and response headers
    def create_or_replace_tier0_static_routes_with_http_info(tier_0_id, route_id, static_routes, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_replace_tier0_static_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_replace_tier0_static_routes"
      end
      # verify the required parameter 'route_id' is set
      if @api_client.config.client_side_validation && route_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_id' when calling Tier0GatewaysApi.create_or_replace_tier0_static_routes"
      end
      # verify the required parameter 'static_routes' is set
      if @api_client.config.client_side_validation && static_routes.nil?
        fail ArgumentError, "Missing the required parameter 'static_routes' when calling Tier0GatewaysApi.create_or_replace_tier0_static_routes"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/{route-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-id' + '}', route_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_routes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRoutes')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_replace_tier0_static_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or Update evpn configuration
    # Create or update evpn configuration. 
    # @param tier_0_id tier0 id
    # @param evpn_config 
    # @param [Hash] opts the optional parameters
    # @return [EvpnConfig]
    def create_or_update_evpn_config(tier_0_id, evpn_config, opts = {})
      data, _status_code, _headers = create_or_update_evpn_config_with_http_info(tier_0_id, evpn_config, opts)
      data
    end

    # Create or Update evpn configuration
    # Create or update evpn configuration. 
    # @param tier_0_id tier0 id
    # @param evpn_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(EvpnConfig, Fixnum, Hash)>] EvpnConfig data, response status code and response headers
    def create_or_update_evpn_config_with_http_info(tier_0_id, evpn_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_update_evpn_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_update_evpn_config"
      end
      # verify the required parameter 'evpn_config' is set
      if @api_client.config.client_side_validation && evpn_config.nil?
        fail ArgumentError, "Missing the required parameter 'evpn_config' when calling Tier0GatewaysApi.create_or_update_evpn_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/evpn'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(evpn_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EvpnConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_update_evpn_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or Update evpn tunnel endpoint configuration
    # Create or update evpn tunnel endpoint configuration. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param tunnel_endpoint_id tunnel endpoint id
    # @param evpn_tunnel_endpoint_config 
    # @param [Hash] opts the optional parameters
    # @return [EvpnTunnelEndpointConfig]
    def create_or_update_evpn_tunnel_endpoint_config(tier_0_id, locale_services_id, tunnel_endpoint_id, evpn_tunnel_endpoint_config, opts = {})
      data, _status_code, _headers = create_or_update_evpn_tunnel_endpoint_config_with_http_info(tier_0_id, locale_services_id, tunnel_endpoint_id, evpn_tunnel_endpoint_config, opts)
      data
    end

    # Create or Update evpn tunnel endpoint configuration
    # Create or update evpn tunnel endpoint configuration. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param tunnel_endpoint_id tunnel endpoint id
    # @param evpn_tunnel_endpoint_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(EvpnTunnelEndpointConfig, Fixnum, Hash)>] EvpnTunnelEndpointConfig data, response status code and response headers
    def create_or_update_evpn_tunnel_endpoint_config_with_http_info(tier_0_id, locale_services_id, tunnel_endpoint_id, evpn_tunnel_endpoint_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_update_evpn_tunnel_endpoint_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_update_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.create_or_update_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'tunnel_endpoint_id' is set
      if @api_client.config.client_side_validation && tunnel_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_endpoint_id' when calling Tier0GatewaysApi.create_or_update_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'evpn_tunnel_endpoint_config' is set
      if @api_client.config.client_side_validation && evpn_tunnel_endpoint_config.nil?
        fail ArgumentError, "Missing the required parameter 'evpn_tunnel_endpoint_config' when calling Tier0GatewaysApi.create_or_update_evpn_tunnel_endpoint_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/evpn-tunnel-endpoints/{tunnel-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s).sub('{' + 'tunnel-endpoint-id' + '}', tunnel_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(evpn_tunnel_endpoint_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EvpnTunnelEndpointConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_update_evpn_tunnel_endpoint_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update multicast configuration
    # Create or update a Tier-0 multicast configuration defining the multicast replication range, the IGMP or a PIM profile. It will update the configuration if there is already one in place. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param policy_multicast_config 
    # @param [Hash] opts the optional parameters
    # @return [PolicyMulticastConfig]
    def create_or_update_policy_multicast_config(tier_0_id, locale_services_id, policy_multicast_config, opts = {})
      data, _status_code, _headers = create_or_update_policy_multicast_config_with_http_info(tier_0_id, locale_services_id, policy_multicast_config, opts)
      data
    end

    # Create or update multicast configuration
    # Create or update a Tier-0 multicast configuration defining the multicast replication range, the IGMP or a PIM profile. It will update the configuration if there is already one in place. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param policy_multicast_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyMulticastConfig, Fixnum, Hash)>] PolicyMulticastConfig data, response status code and response headers
    def create_or_update_policy_multicast_config_with_http_info(tier_0_id, locale_services_id, policy_multicast_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_update_policy_multicast_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_update_policy_multicast_config"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.create_or_update_policy_multicast_config"
      end
      # verify the required parameter 'policy_multicast_config' is set
      if @api_client.config.client_side_validation && policy_multicast_config.nil?
        fail ArgumentError, "Missing the required parameter 'policy_multicast_config' when calling Tier0GatewaysApi.create_or_update_policy_multicast_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_multicast_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyMulticastConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_update_policy_multicast_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create a new Tier-0 Deployment Map under Tier-0
    # If the passed Tier-0 Deployment Map does not already exist, create a new Tier-0 Deployment Map. If it already exists, replace it. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param tier_0_deployment_map_id 
    # @param tier0_deployment_map 
    # @param [Hash] opts the optional parameters
    # @return [Tier0DeploymentMap]
    def create_or_update_tier0_deployment_map(tier_0_id, locale_service_id, tier_0_deployment_map_id, tier0_deployment_map, opts = {})
      data, _status_code, _headers = create_or_update_tier0_deployment_map_with_http_info(tier_0_id, locale_service_id, tier_0_deployment_map_id, tier0_deployment_map, opts)
      data
    end

    # Create a new Tier-0 Deployment Map under Tier-0
    # If the passed Tier-0 Deployment Map does not already exist, create a new Tier-0 Deployment Map. If it already exists, replace it. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param tier_0_deployment_map_id 
    # @param tier0_deployment_map 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0DeploymentMap, Fixnum, Hash)>] Tier0DeploymentMap data, response status code and response headers
    def create_or_update_tier0_deployment_map_with_http_info(tier_0_id, locale_service_id, tier_0_deployment_map_id, tier0_deployment_map, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_update_tier0_deployment_map ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_update_tier0_deployment_map"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_or_update_tier0_deployment_map"
      end
      # verify the required parameter 'tier_0_deployment_map_id' is set
      if @api_client.config.client_side_validation && tier_0_deployment_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_deployment_map_id' when calling Tier0GatewaysApi.create_or_update_tier0_deployment_map"
      end
      # verify the required parameter 'tier0_deployment_map' is set
      if @api_client.config.client_side_validation && tier0_deployment_map.nil?
        fail ArgumentError, "Missing the required parameter 'tier0_deployment_map' when calling Tier0GatewaysApi.create_or_update_tier0_deployment_map"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/tier-0-deployment-maps/{tier-0-deployment-map-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'tier-0-deployment-map-id' + '}', tier_0_deployment_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0_deployment_map)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0DeploymentMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_update_tier0_deployment_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or Update Tunnel(GRE as of now)
    # Create or Update Tunnel(GRE as of now)
    # @param tier_0_id tier0 id
    # @param locale_svc_id locale service id
    # @param tunnel_id tunnel id
    # @param tunnel 
    # @param [Hash] opts the optional parameters
    # @return [Tunnel]
    def create_or_update_tunnel(tier_0_id, locale_svc_id, tunnel_id, tunnel, opts = {})
      data, _status_code, _headers = create_or_update_tunnel_with_http_info(tier_0_id, locale_svc_id, tunnel_id, tunnel, opts)
      data
    end

    # Create or Update Tunnel(GRE as of now)
    # Create or Update Tunnel(GRE as of now)
    # @param tier_0_id tier0 id
    # @param locale_svc_id locale service id
    # @param tunnel_id tunnel id
    # @param tunnel 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tunnel, Fixnum, Hash)>] Tunnel data, response status code and response headers
    def create_or_update_tunnel_with_http_info(tier_0_id, locale_svc_id, tunnel_id, tunnel, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_update_tunnel ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_update_tunnel"
      end
      # verify the required parameter 'locale_svc_id' is set
      if @api_client.config.client_side_validation && locale_svc_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_svc_id' when calling Tier0GatewaysApi.create_or_update_tunnel"
      end
      # verify the required parameter 'tunnel_id' is set
      if @api_client.config.client_side_validation && tunnel_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_id' when calling Tier0GatewaysApi.create_or_update_tunnel"
      end
      # verify the required parameter 'tunnel' is set
      if @api_client.config.client_side_validation && tunnel.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel' when calling Tier0GatewaysApi.create_or_update_tunnel"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-svc-id}/tunnels/{tunnel-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-svc-id' + '}', locale_svc_id.to_s).sub('{' + 'tunnel-id' + '}', tunnel_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tunnel)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tunnel')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_update_tunnel\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update virtual endpoint
    # Create or update virtual endpoint. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param virtual_endpoint_id Virtual endpoint id
    # @param virtual_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [VirtualEndpoint]
    def create_or_update_virtual_endpoint(tier_0_id, locale_service_id, virtual_endpoint_id, virtual_endpoint, opts = {})
      data, _status_code, _headers = create_or_update_virtual_endpoint_with_http_info(tier_0_id, locale_service_id, virtual_endpoint_id, virtual_endpoint, opts)
      data
    end

    # Create or update virtual endpoint
    # Create or update virtual endpoint. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param virtual_endpoint_id Virtual endpoint id
    # @param virtual_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [Array<(VirtualEndpoint, Fixnum, Hash)>] VirtualEndpoint data, response status code and response headers
    def create_or_update_virtual_endpoint_with_http_info(tier_0_id, locale_service_id, virtual_endpoint_id, virtual_endpoint, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_or_update_virtual_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_or_update_virtual_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_or_update_virtual_endpoint"
      end
      # verify the required parameter 'virtual_endpoint_id' is set
      if @api_client.config.client_side_validation && virtual_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_endpoint_id' when calling Tier0GatewaysApi.create_or_update_virtual_endpoint"
      end
      # verify the required parameter 'virtual_endpoint' is set
      if @api_client.config.client_side_validation && virtual_endpoint.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_endpoint' when calling Tier0GatewaysApi.create_or_update_virtual_endpoint"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/endpoints/virtual-endpoints/{virtual-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'virtual-endpoint-id' + '}', virtual_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(virtual_endpoint)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualEndpoint')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_or_update_virtual_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance
    # Create service instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [PolicyServiceInstance]
    def create_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      data, _status_code, _headers = create_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts)
      data
    end

    # Create service instance
    # Create service instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyServiceInstance, Fixnum, Hash)>] PolicyServiceInstance data, response status code and response headers
    def create_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.create_policy_service_instance"
      end
      # verify the required parameter 'policy_service_instance' is set
      if @api_client.config.client_side_validation && policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'policy_service_instance' when calling Tier0GatewaysApi.create_policy_service_instance"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance endpoint
    # Create service instance endpoint with given request if not exist. Modification of service instance endpoint is not allowed. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [ServiceInstanceEndpoint]
    def create_service_instance_endpoint(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      data, _status_code, _headers = create_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts)
      data
    end

    # Create service instance endpoint
    # Create service instance endpoint with given request if not exist. Modification of service instance endpoint is not allowed. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceInstanceEndpoint, Fixnum, Hash)>] ServiceInstanceEndpoint data, response status code and response headers
    def create_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_service_instance_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_service_instance_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.create_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling Tier0GatewaysApi.create_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint' is set
      if @api_client.config.client_side_validation && service_instance_endpoint.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint' when calling Tier0GatewaysApi.create_service_instance_endpoint"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_instance_endpoint)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInstanceEndpoint')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_service_instance_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create a service interface
    # If an interface with the interface-id is not already present, create a new interface. Modification of service interface is not allowed. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param service_interface 
    # @param [Hash] opts the optional parameters
    # @return [ServiceInterface]
    def create_service_interface(tier_0_id, locale_service_id, interface_id, service_interface, opts = {})
      data, _status_code, _headers = create_service_interface_with_http_info(tier_0_id, locale_service_id, interface_id, service_interface, opts)
      data
    end

    # Create a service interface
    # If an interface with the interface-id is not already present, create a new interface. Modification of service interface is not allowed. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param service_interface 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceInterface, Fixnum, Hash)>] ServiceInterface data, response status code and response headers
    def create_service_interface_with_http_info(tier_0_id, locale_service_id, interface_id, service_interface, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.create_service_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.create_service_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.create_service_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.create_service_interface"
      end
      # verify the required parameter 'service_interface' is set
      if @api_client.config.client_side_validation && service_interface.nil?
        fail ArgumentError, "Missing the required parameter 'service_interface' when calling Tier0GatewaysApi.create_service_interface"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_interface)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInterface')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#create_service_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete BGP neighbor config
    # Delete BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def delete_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, opts = {})
      delete_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      nil
    end

    # Delete BGP neighbor config
    # Delete BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.delete_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete BYOD policy service instance
    # Delete BYOD policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_byod_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, opts = {})
      delete_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      nil
    end

    # Delete BYOD policy service instance
    # Delete BYOD policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_byod_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_byod_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_byod_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.delete_byod_policy_service_instance"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_byod_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete a BGP community list
    # Delete a BGP community list
    # @param tier_0_id 
    # @param community_list_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_community_list(tier_0_id, community_list_id, opts = {})
      delete_community_list_with_http_info(tier_0_id, community_list_id, opts)
      nil
    end

    # Delete a BGP community list
    # Delete a BGP community list
    # @param tier_0_id 
    # @param community_list_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_community_list_with_http_info(tier_0_id, community_list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_community_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_community_list"
      end
      # verify the required parameter 'community_list_id' is set
      if @api_client.config.client_side_validation && community_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'community_list_id' when calling Tier0GatewaysApi.delete_community_list"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/community-lists/{community-list-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'community-list-id' + '}', community_list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_community_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete evpn tunnel endpoint configuration
    # Delete evpn tunnel endpoint configuration.
    # @param config_id tier0 id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_evpn_tenant_config(config_id, opts = {})
      delete_evpn_tenant_config_with_http_info(config_id, opts)
      nil
    end

    # Delete evpn tunnel endpoint configuration
    # Delete evpn tunnel endpoint configuration.
    # @param config_id tier0 id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_evpn_tenant_config_with_http_info(config_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_evpn_tenant_config ...'
      end
      # verify the required parameter 'config_id' is set
      if @api_client.config.client_side_validation && config_id.nil?
        fail ArgumentError, "Missing the required parameter 'config_id' when calling Tier0GatewaysApi.delete_evpn_tenant_config"
      end
      # resource path
      local_var_path = '/infra/evpn-tenant-configs/{config-id}'.sub('{' + 'config-id' + '}', config_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_evpn_tenant_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete evpn tunnel endpoint configuration
    # Delete evpn tunnel endpoint configuration.
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param tunnel_endpoint_id tunnel endpoint id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_evpn_tunnel_endpoint_config(tier_0_id, locale_services_id, tunnel_endpoint_id, opts = {})
      delete_evpn_tunnel_endpoint_config_with_http_info(tier_0_id, locale_services_id, tunnel_endpoint_id, opts)
      nil
    end

    # Delete evpn tunnel endpoint configuration
    # Delete evpn tunnel endpoint configuration.
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param tunnel_endpoint_id tunnel endpoint id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_evpn_tunnel_endpoint_config_with_http_info(tier_0_id, locale_services_id, tunnel_endpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_evpn_tunnel_endpoint_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.delete_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'tunnel_endpoint_id' is set
      if @api_client.config.client_side_validation && tunnel_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_endpoint_id' when calling Tier0GatewaysApi.delete_evpn_tunnel_endpoint_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/evpn-tunnel-endpoints/{tunnel-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s).sub('{' + 'tunnel-endpoint-id' + '}', tunnel_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_evpn_tunnel_endpoint_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete an L3Vpn
    # Delete the L3Vpn with the given id. This API is deprecated. Please use the following APIs instead: - DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/sessions/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnSession. - DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/local-endpoints/&lt;local-endpoint-id&gt; to delete the associated IPSecVpnLocalEndpoint. - DELETE /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnTunnelProfile. - DELETE /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnIkeProfile. - DELETE /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt; to delete the associated IPSecVpnDpdProfile. If used, this deprecated API will result in the following objects being internally deleted: - IPSecVpnSession: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ ipsec-vpn-services/default/local-endpoints/&lt;local-endpoint-id&gt; when not used by other IPSecVpnSessions. - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_l3_vpn(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      delete_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      nil
    end

    # Delete an L3Vpn
    # Delete the L3Vpn with the given id. This API is deprecated. Please use the following APIs instead: - DELETE /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/ default/sessions/L3VPN_&amp;lt;l3vpn-id&amp;gt; to delete the associated IPSecVpnSession. - DELETE /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/ default/local-endpoints/&amp;lt;local-endpoint-id&amp;gt; to delete the associated IPSecVpnLocalEndpoint. - DELETE /infra/ipsec-vpn-tunnel-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt; to delete the associated IPSecVpnTunnelProfile. - DELETE /infra/ipsec-vpn-ike-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt; to delete the associated IPSecVpnIkeProfile. - DELETE /infra/ipsec-vpn-dpd-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt; to delete the associated IPSecVpnDpdProfile. If used, this deprecated API will result in the following objects being internally deleted: - IPSecVpnSession: /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ ipsec-vpn-services/default/sessions/L3VPN_&amp;lt;l3vpn-id&amp;gt;. - IPSecVpnLocalEndpoint: /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ ipsec-vpn-services/default/local-endpoints/&amp;lt;local-endpoint-id&amp;gt; when not used by other IPSecVpnSessions. - IPSecVpnTunnelProfile: /infra/ipsec-vpn-tunnel-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt;. - IPSecVpnIkeProfile: /infra/ipsec-vpn-ike-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt;. - IPSecVpnDpdProfile: /infra/ipsec-vpn-dpd-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt;. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_l3_vpn ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_l3_vpn"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_l3_vpn"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling Tier0GatewaysApi.delete_l3_vpn"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_l3_vpn\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete OSPF Area config
    # Delete OSPF Area config 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param area_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_ospf_area_config(tier_0_id, locale_service_id, area_id, opts = {})
      delete_ospf_area_config_with_http_info(tier_0_id, locale_service_id, area_id, opts)
      nil
    end

    # Delete OSPF Area config
    # Delete OSPF Area config 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param area_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_ospf_area_config_with_http_info(tier_0_id, locale_service_id, area_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_ospf_area_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_ospf_area_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_ospf_area_config"
      end
      # verify the required parameter 'area_id' is set
      if @api_client.config.client_side_validation && area_id.nil?
        fail ArgumentError, "Missing the required parameter 'area_id' when calling Tier0GatewaysApi.delete_ospf_area_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf/areas/{area-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'area-id' + '}', area_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_ospf_area_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete overridden BGP routing config
    # Deletes the specified overridden BgpRoutingConfig. If the BgpRoutingConfig is not overridden, it won't get deleted. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def delete_overridden_bgp_routing_config(tier_0_id, locale_service_id, opts = {})
      delete_overridden_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, opts)
      nil
    end

    # Delete overridden BGP routing config
    # Deletes the specified overridden BgpRoutingConfig. If the BgpRoutingConfig is not overridden, it won&#39;t get deleted. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_overridden_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_overridden_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_overridden_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_overridden_bgp_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_overridden_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete DNS configuration for tier-0 instance
    # Delete DNS configuration for tier-0 instance
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_dns_forwarder_on_tier0(tier_0_id, opts = {})
      delete_policy_dns_forwarder_on_tier0_with_http_info(tier_0_id, opts)
      nil
    end

    # Delete DNS configuration for tier-0 instance
    # Delete DNS configuration for tier-0 instance
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_dns_forwarder_on_tier0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_policy_dns_forwarder_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_policy_dns_forwarder_on_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/dns-forwarder'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_policy_dns_forwarder_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete inter-vrf routing config
    # Delete inter-vrf routing config.
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_inter_vrf_routing_config(tier_0_id, inter_vrf_routing_id, opts = {})
      delete_policy_inter_vrf_routing_config_with_http_info(tier_0_id, inter_vrf_routing_id, opts)
      nil
    end

    # Delete inter-vrf routing config
    # Delete inter-vrf routing config.
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_inter_vrf_routing_config_with_http_info(tier_0_id, inter_vrf_routing_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_policy_inter_vrf_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_policy_inter_vrf_routing_config"
      end
      # verify the required parameter 'inter_vrf_routing_id' is set
      if @api_client.config.client_side_validation && inter_vrf_routing_id.nil?
        fail ArgumentError, "Missing the required parameter 'inter_vrf_routing_id' when calling Tier0GatewaysApi.delete_policy_inter_vrf_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/inter-vrf-routing/{inter-vrf-routing-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'inter-vrf-routing-id' + '}', inter_vrf_routing_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_policy_inter_vrf_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete NAT Rule
    # Delete NAT Rule from Tier-0 denoted by Tier-0 ID, under NAT section denoted by &lt;nat-id&gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) For more details related to NAT section please refer to PolicyNAT schema.
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param nat_rule_id Rule ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_nat_rule_from_tier0(tier_0_id, nat_id, nat_rule_id, opts = {})
      delete_policy_nat_rule_from_tier0_with_http_info(tier_0_id, nat_id, nat_rule_id, opts)
      nil
    end

    # Delete NAT Rule
    # Delete NAT Rule from Tier-0 denoted by Tier-0 ID, under NAT section denoted by &amp;lt;nat-id&amp;gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) For more details related to NAT section please refer to PolicyNAT schema.
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param nat_rule_id Rule ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_nat_rule_from_tier0_with_http_info(tier_0_id, nat_id, nat_rule_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_policy_nat_rule_from_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_policy_nat_rule_from_tier0"
      end
      # verify the required parameter 'nat_id' is set
      if @api_client.config.client_side_validation && nat_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_id' when calling Tier0GatewaysApi.delete_policy_nat_rule_from_tier0"
      end
      # verify the required parameter 'nat_rule_id' is set
      if @api_client.config.client_side_validation && nat_rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_rule_id' when calling Tier0GatewaysApi.delete_policy_nat_rule_from_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/nat/{nat-id}/nat-rules/{nat-rule-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'nat-id' + '}', nat_id.to_s).sub('{' + 'nat-rule-id' + '}', nat_rule_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_policy_nat_rule_from_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete policy service instance
    # Delete policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, opts = {})
      delete_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      nil
    end

    # Delete policy service instance
    # Delete policy service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.delete_policy_service_instance"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete service instance endpoint
    # Delete service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_policy_service_instance_endpoint(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      delete_policy_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts)
      nil
    end

    # Delete service instance endpoint
    # Delete service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_policy_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_policy_service_instance_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_policy_service_instance_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_policy_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.delete_policy_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling Tier0GatewaysApi.delete_policy_service_instance_endpoint"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_policy_service_instance_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete a prefix list
    # Delete a prefix list
    # @param tier_0_id 
    # @param prefix_list_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_prefix_list(tier_0_id, prefix_list_id, opts = {})
      delete_prefix_list_with_http_info(tier_0_id, prefix_list_id, opts)
      nil
    end

    # Delete a prefix list
    # Delete a prefix list
    # @param tier_0_id 
    # @param prefix_list_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_prefix_list_with_http_info(tier_0_id, prefix_list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_prefix_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_prefix_list"
      end
      # verify the required parameter 'prefix_list_id' is set
      if @api_client.config.client_side_validation && prefix_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'prefix_list_id' when calling Tier0GatewaysApi.delete_prefix_list"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/prefix-lists/{prefix-list-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'prefix-list-id' + '}', prefix_list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_prefix_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete service interface
    # Delete service interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_service_interface(tier_0_id, locale_service_id, interface_id, opts = {})
      delete_service_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      nil
    end

    # Delete service interface
    # Delete service interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_service_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_service_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_service_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_service_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.delete_service_interface"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_service_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete this StaticRouteBfdPeer and all the entities contained by it.
    # Delete this StaticRouteBfdPeer and all the entities contained by it.
    # @param tier_0_id Tier-0 ID
    # @param bfd_peer_id BFD peer ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_static_route_bfd_peer(tier_0_id, bfd_peer_id, opts = {})
      delete_static_route_bfd_peer_with_http_info(tier_0_id, bfd_peer_id, opts)
      nil
    end

    # Delete this StaticRouteBfdPeer and all the entities contained by it.
    # Delete this StaticRouteBfdPeer and all the entities contained by it.
    # @param tier_0_id Tier-0 ID
    # @param bfd_peer_id BFD peer ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_static_route_bfd_peer_with_http_info(tier_0_id, bfd_peer_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_static_route_bfd_peer ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_static_route_bfd_peer"
      end
      # verify the required parameter 'bfd_peer_id' is set
      if @api_client.config.client_side_validation && bfd_peer_id.nil?
        fail ArgumentError, "Missing the required parameter 'bfd_peer_id' when calling Tier0GatewaysApi.delete_static_route_bfd_peer"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/{bfd-peer-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'bfd-peer-id' + '}', bfd_peer_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_static_route_bfd_peer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Tier-0
    # Delete Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tier0(tier_0_id, opts = {})
      delete_tier0_with_http_info(tier_0_id, opts)
      nil
    end

    # Delete Tier-0
    # Delete Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tier0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Tier-0
    # Delete Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tier0_0(tier_0_id, opts = {})
      delete_tier0_0_with_http_info(tier_0_id, opts)
      nil
    end

    # Delete Tier-0
    # Delete Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tier0_0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_tier0_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_tier0_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_tier0_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Tier-0 Deployment Map
    # Delete Tier-0 Deployment Map
    # @param tier_0_id 
    # @param locale_service_id 
    # @param tier_0_deployment_map_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tier0_deployment_map(tier_0_id, locale_service_id, tier_0_deployment_map_id, opts = {})
      delete_tier0_deployment_map_with_http_info(tier_0_id, locale_service_id, tier_0_deployment_map_id, opts)
      nil
    end

    # Delete Tier-0 Deployment Map
    # Delete Tier-0 Deployment Map
    # @param tier_0_id 
    # @param locale_service_id 
    # @param tier_0_deployment_map_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tier0_deployment_map_with_http_info(tier_0_id, locale_service_id, tier_0_deployment_map_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_tier0_deployment_map ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_tier0_deployment_map"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_tier0_deployment_map"
      end
      # verify the required parameter 'tier_0_deployment_map_id' is set
      if @api_client.config.client_side_validation && tier_0_deployment_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_deployment_map_id' when calling Tier0GatewaysApi.delete_tier0_deployment_map"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/tier-0-deployment-maps/{tier-0-deployment-map-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'tier-0-deployment-map-id' + '}', tier_0_deployment_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_tier0_deployment_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Tier-0 interface
    # Delete Tier-0 interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def delete_tier0_interface(tier_0_id, locale_service_id, interface_id, opts = {})
      delete_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      nil
    end

    # Delete Tier-0 interface
    # Delete Tier-0 interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_tier0_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_tier0_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_tier0_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.delete_tier0_interface"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_tier0_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Tier-0 Interface group
    # Delete Tier-0 Interface group
    # @param tier_0_id 
    # @param locale_service_id 
    # @param label_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tier0_interface_group(tier_0_id, locale_service_id, label_id, opts = {})
      delete_tier0_interface_group_with_http_info(tier_0_id, locale_service_id, label_id, opts)
      nil
    end

    # Delete Tier-0 Interface group
    # Delete Tier-0 Interface group
    # @param tier_0_id 
    # @param locale_service_id 
    # @param label_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tier0_interface_group_with_http_info(tier_0_id, locale_service_id, label_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_tier0_interface_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_tier0_interface_group"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_tier0_interface_group"
      end
      # verify the required parameter 'label_id' is set
      if @api_client.config.client_side_validation && label_id.nil?
        fail ArgumentError, "Missing the required parameter 'label_id' when calling Tier0GatewaysApi.delete_tier0_interface_group"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interface-groups/{label-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'label-id' + '}', label_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_tier0_interface_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Tier-0 locale-services
    # Delete Tier-0 locale-services
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tier0_locale_services(tier_0_id, locale_services_id, opts = {})
      delete_tier0_locale_services_with_http_info(tier_0_id, locale_services_id, opts)
      nil
    end

    # Delete Tier-0 locale-services
    # Delete Tier-0 locale-services
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tier0_locale_services_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_tier0_locale_services ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_tier0_locale_services"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.delete_tier0_locale_services"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_tier0_locale_services\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Tier-0 static routes
    # Delete Tier-0 static routes
    # @param tier_0_id 
    # @param route_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tier0_static_routes(tier_0_id, route_id, opts = {})
      delete_tier0_static_routes_with_http_info(tier_0_id, route_id, opts)
      nil
    end

    # Delete Tier-0 static routes
    # Delete Tier-0 static routes
    # @param tier_0_id 
    # @param route_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tier0_static_routes_with_http_info(tier_0_id, route_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_tier0_static_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_tier0_static_routes"
      end
      # verify the required parameter 'route_id' is set
      if @api_client.config.client_side_validation && route_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_id' when calling Tier0GatewaysApi.delete_tier0_static_routes"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/{route-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-id' + '}', route_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_tier0_static_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Tunnel(GRE as of now) by given tunnel Id
    # Delete Tunnel(GRE as of now) by given tunnel Id
    # @param tier_0_id tier0 id
    # @param locale_svc_id locale service id
    # @param tunnel_id tunnel id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_tunnel(tier_0_id, locale_svc_id, tunnel_id, opts = {})
      delete_tunnel_with_http_info(tier_0_id, locale_svc_id, tunnel_id, opts)
      nil
    end

    # Delete Tunnel(GRE as of now) by given tunnel Id
    # Delete Tunnel(GRE as of now) by given tunnel Id
    # @param tier_0_id tier0 id
    # @param locale_svc_id locale service id
    # @param tunnel_id tunnel id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_tunnel_with_http_info(tier_0_id, locale_svc_id, tunnel_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_tunnel ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_tunnel"
      end
      # verify the required parameter 'locale_svc_id' is set
      if @api_client.config.client_side_validation && locale_svc_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_svc_id' when calling Tier0GatewaysApi.delete_tunnel"
      end
      # verify the required parameter 'tunnel_id' is set
      if @api_client.config.client_side_validation && tunnel_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_id' when calling Tier0GatewaysApi.delete_tunnel"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-svc-id}/tunnels/{tunnel-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-svc-id' + '}', locale_svc_id.to_s).sub('{' + 'tunnel-id' + '}', tunnel_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_tunnel\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete virtual endpoint
    # Delete virtual endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param virtual_endpoint_id Virtual endpoint id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_virtual_endpoint(tier_0_id, locale_service_id, virtual_endpoint_id, opts = {})
      delete_virtual_endpoint_with_http_info(tier_0_id, locale_service_id, virtual_endpoint_id, opts)
      nil
    end

    # Delete virtual endpoint
    # Delete virtual endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param virtual_endpoint_id Virtual endpoint id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_virtual_endpoint_with_http_info(tier_0_id, locale_service_id, virtual_endpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.delete_virtual_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.delete_virtual_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.delete_virtual_endpoint"
      end
      # verify the required parameter 'virtual_endpoint_id' is set
      if @api_client.config.client_side_validation && virtual_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_endpoint_id' when calling Tier0GatewaysApi.delete_virtual_endpoint"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/endpoints/virtual-endpoints/{virtual-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'virtual-endpoint-id' + '}', virtual_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#delete_virtual_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Recover of Tier0 and linked tier1 gateway(s).
    # API to recover specified Tier0 gateway and linked tier1 gateway from primary site path to new primary site path. This will update intent of affected Tier-0 and Tier-1 gateway. 
    # @param gateway_site_failover_action_config 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def gateway_site_failover_action(gateway_site_failover_action_config, opts = {})
      gateway_site_failover_action_with_http_info(gateway_site_failover_action_config, opts)
      nil
    end

    # Recover of Tier0 and linked tier1 gateway(s).
    # API to recover specified Tier0 gateway and linked tier1 gateway from primary site path to new primary site path. This will update intent of affected Tier-0 and Tier-1 gateway. 
    # @param gateway_site_failover_action_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def gateway_site_failover_action_with_http_info(gateway_site_failover_action_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.gateway_site_failover_action ...'
      end
      # verify the required parameter 'gateway_site_failover_action_config' is set
      if @api_client.config.client_side_validation && gateway_site_failover_action_config.nil?
        fail ArgumentError, "Missing the required parameter 'gateway_site_failover_action_config' when calling Tier0GatewaysApi.gateway_site_failover_action"
      end
      # resource path
      local_var_path = '/infra/tier-0s?action=site_failover'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(gateway_site_failover_action_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#gateway_site_failover_action\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List advertised networks
    # Returns information about all networks which advertised to TIER0 LR. 
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyAdvertisedNetworksListResult]
    def get_advertised_networks(tier_0_id, inter_vrf_routing_id, opts = {})
      data, _status_code, _headers = get_advertised_networks_with_http_info(tier_0_id, inter_vrf_routing_id, opts)
      data
    end

    # List advertised networks
    # Returns information about all networks which advertised to TIER0 LR. 
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyAdvertisedNetworksListResult, Fixnum, Hash)>] PolicyAdvertisedNetworksListResult data, response status code and response headers
    def get_advertised_networks_with_http_info(tier_0_id, inter_vrf_routing_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_advertised_networks ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_advertised_networks"
      end
      # verify the required parameter 'inter_vrf_routing_id' is set
      if @api_client.config.client_side_validation && inter_vrf_routing_id.nil?
        fail ArgumentError, "Missing the required parameter 'inter_vrf_routing_id' when calling Tier0GatewaysApi.get_advertised_networks"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_advertised_networks, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_advertised_networks, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/inter-vrf-routing/{inter-vrf-routing-id}/advertised-networks'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'inter-vrf-routing-id' + '}', inter_vrf_routing_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyAdvertisedNetworksListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_advertised_networks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List advertised networks in CSV format
    # List advertised networks in CSV format. 
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyAdvertisedNetworkInCsvFormat]
    def get_advertised_networks_in_csv_format(tier_0_id, inter_vrf_routing_id, opts = {})
      data, _status_code, _headers = get_advertised_networks_in_csv_format_with_http_info(tier_0_id, inter_vrf_routing_id, opts)
      data
    end

    # List advertised networks in CSV format
    # List advertised networks in CSV format. 
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyAdvertisedNetworkInCsvFormat, Fixnum, Hash)>] PolicyAdvertisedNetworkInCsvFormat data, response status code and response headers
    def get_advertised_networks_in_csv_format_with_http_info(tier_0_id, inter_vrf_routing_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_advertised_networks_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_advertised_networks_in_csv_format"
      end
      # verify the required parameter 'inter_vrf_routing_id' is set
      if @api_client.config.client_side_validation && inter_vrf_routing_id.nil?
        fail ArgumentError, "Missing the required parameter 'inter_vrf_routing_id' when calling Tier0GatewaysApi.get_advertised_networks_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_advertised_networks_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_advertised_networks_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/inter-vrf-routing/{inter-vrf-routing-id}/advertised-networks?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'inter-vrf-routing-id' + '}', inter_vrf_routing_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyAdvertisedNetworkInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_advertised_networks_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table for downlink router port on tier-0 router
    # Get ARP table for downlink router port on tier-0 router. <br> This API is deprecated because it is duplicate. Please use /infra/segments/&lt;segment-id&gt;/arp-table Segment ID is the ID of the  segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def get_downlink_port_arp_table_for_infra_segment(segment_id, opts = {})
      data, _status_code, _headers = get_downlink_port_arp_table_for_infra_segment_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table for downlink router port on tier-0 router
    # Get ARP table for downlink router port on tier-0 router. &lt;br&gt; This API is deprecated because it is duplicate. Please use /infra/segments/&amp;lt;segment-id&amp;gt;/arp-table Segment ID is the ID of the  segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def get_downlink_port_arp_table_for_infra_segment_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_downlink_port_arp_table_for_infra_segment ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.get_downlink_port_arp_table_for_infra_segment"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_downlink_port_arp_table_for_infra_segment, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_downlink_port_arp_table_for_infra_segment, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/segments/{segment-id}/gateway-interface-arp-table'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_downlink_port_arp_table_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table for downlink router port on tier-0 router in CSV
    # Get ARP table for downlink router port on tier-0 router in CSV. <br> This API is deprecated because it is duplicate. Please use /infra/segments/&lt;segment-id&gt;/arp-table?format=csv Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def get_downlink_port_arp_table_for_infra_segment_in_csv(segment_id, opts = {})
      data, _status_code, _headers = get_downlink_port_arp_table_for_infra_segment_in_csv_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table for downlink router port on tier-0 router in CSV
    # Get ARP table for downlink router port on tier-0 router in CSV. &lt;br&gt; This API is deprecated because it is duplicate. Please use /infra/segments/&amp;lt;segment-id&amp;gt;/arp-table?format&#x3D;csv Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def get_downlink_port_arp_table_for_infra_segment_in_csv_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_downlink_port_arp_table_for_infra_segment_in_csv ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.get_downlink_port_arp_table_for_infra_segment_in_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_downlink_port_arp_table_for_infra_segment_in_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_downlink_port_arp_table_for_infra_segment_in_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/segments/{segment-id}/gateway-interface-arp-table?format=csv'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_downlink_port_arp_table_for_infra_segment_in_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get DAD state for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [InterfaceDADState]
    def get_downlink_port_dad_state_for_infra_segment(segment_id, opts = {})
      data, _status_code, _headers = get_downlink_port_dad_state_for_infra_segment_with_http_info(segment_id, opts)
      data
    end

    # Get DAD state for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [Array<(InterfaceDADState, Fixnum, Hash)>] InterfaceDADState data, response status code and response headers
    def get_downlink_port_dad_state_for_infra_segment_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_downlink_port_dad_state_for_infra_segment ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.get_downlink_port_dad_state_for_infra_segment"
      end
      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/infra/segments/{segment-id}/gateway-interface-dad-state'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceDADState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_downlink_port_dad_state_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyInterfaceStatistics]
    def get_downlink_port_statistics_for_infra_segment(segment_id, opts = {})
      data, _status_code, _headers = get_downlink_port_statistics_for_infra_segment_with_http_info(segment_id, opts)
      data
    end

    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyInterfaceStatistics, Fixnum, Hash)>] PolicyInterfaceStatistics data, response status code and response headers
    def get_downlink_port_statistics_for_infra_segment_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_downlink_port_statistics_for_infra_segment ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.get_downlink_port_statistics_for_infra_segment"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_downlink_port_statistics_for_infra_segment, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_downlink_port_statistics_for_infra_segment, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/segments/{segment-id}/gateway-interface-statistics'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_downlink_port_statistics_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [PolicyInterfaceStatisticsSummary]
    def get_downlink_port_statistics_summary_for_infra_segment(segment_id, opts = {})
      data, _status_code, _headers = get_downlink_port_statistics_summary_for_infra_segment_with_http_info(segment_id, opts)
      data
    end

    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [Array<(PolicyInterfaceStatisticsSummary, Fixnum, Hash)>] PolicyInterfaceStatisticsSummary data, response status code and response headers
    def get_downlink_port_statistics_summary_for_infra_segment_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_downlink_port_statistics_summary_for_infra_segment ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.get_downlink_port_statistics_summary_for_infra_segment"
      end
      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/infra/segments/{segment-id}/gateway-interface-statistics/summary'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatisticsSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_downlink_port_statistics_summary_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from segment interface (downlink)
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def get_infra_segment_interface_arp_table(segment_id, opts = {})
      data, _status_code, _headers = get_infra_segment_interface_arp_table_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table from segment interface (downlink)
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def get_infra_segment_interface_arp_table_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_infra_segment_interface_arp_table ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.get_infra_segment_interface_arp_table"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_infra_segment_interface_arp_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_infra_segment_interface_arp_table, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/segments/{segment-id}/arp-table'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_infra_segment_interface_arp_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from segment interface (downlink) in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def get_infra_segment_interface_arp_table_csv(segment_id, opts = {})
      data, _status_code, _headers = get_infra_segment_interface_arp_table_csv_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table from segment interface (downlink) in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def get_infra_segment_interface_arp_table_csv_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_infra_segment_interface_arp_table_csv ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.get_infra_segment_interface_arp_table_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_infra_segment_interface_arp_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_infra_segment_interface_arp_table_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/segments/{segment-id}/arp-table?format=csv'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_infra_segment_interface_arp_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get OSPF database information
    # Get OSPF database information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :area_id OSPF area identifier
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyOspfDatabaseListResult]
    def get_ospf_database(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = get_ospf_database_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get OSPF database information
    # Get OSPF database information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :area_id OSPF area identifier
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyOspfDatabaseListResult, Fixnum, Hash)>] PolicyOspfDatabaseListResult data, response status code and response headers
    def get_ospf_database_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_ospf_database ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_ospf_database"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_ospf_database"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_ospf_database, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_ospf_database, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf/database'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'area_id'] = opts[:'area_id'] if !opts[:'area_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyOspfDatabaseListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_ospf_database\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get OSPF Database information in CSV format
    # Get OSPF Database information in CSV format. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :area_id OSPF area identifier
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [OspfDatabaseListResultInCsvFormat]
    def get_ospf_database_in_csv_format(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = get_ospf_database_in_csv_format_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get OSPF Database information in CSV format
    # Get OSPF Database information in CSV format. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :area_id OSPF area identifier
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(OspfDatabaseListResultInCsvFormat, Fixnum, Hash)>] OspfDatabaseListResultInCsvFormat data, response status code and response headers
    def get_ospf_database_in_csv_format_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_ospf_database_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_ospf_database_in_csv_format"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_ospf_database_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_ospf_database_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_ospf_database_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf/database?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'area_id'] = opts[:'area_id'] if !opts[:'area_id'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfDatabaseListResultInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_ospf_database_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get OSPF neighbor information
    # Get OSPF neighbor information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :neighbor_address IPv4 or IPv6 address
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [OspfNeighborsStatusListResult]
    def get_ospf_neighbors(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = get_ospf_neighbors_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get OSPF neighbor information
    # Get OSPF neighbor information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :neighbor_address IPv4 or IPv6 address
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(OspfNeighborsStatusListResult, Fixnum, Hash)>] OspfNeighborsStatusListResult data, response status code and response headers
    def get_ospf_neighbors_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_ospf_neighbors ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_ospf_neighbors"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_ospf_neighbors"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_ospf_neighbors, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_ospf_neighbors, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf/neighbors'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'neighbor_address'] = opts[:'neighbor_address'] if !opts[:'neighbor_address'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfNeighborsStatusListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_ospf_neighbors\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get OSPF route information
    # Get OSPF route information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix CIDR network address
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [OspfRoutesListResult]
    def get_ospf_routes(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = get_ospf_routes_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get OSPF route information
    # Get OSPF route information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix CIDR network address
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(OspfRoutesListResult, Fixnum, Hash)>] OspfRoutesListResult data, response status code and response headers
    def get_ospf_routes_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_ospf_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_ospf_routes"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_ospf_routes"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_ospf_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_ospf_routes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf/routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'network_prefix'] = opts[:'network_prefix'] if !opts[:'network_prefix'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_ospf_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get OSPF route information in CSV format
    # Get OSPF route information in CSV format. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix CIDR network address
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [OspfRoutesListResultInCsvFormat]
    def get_ospf_routes_in_csv_format(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = get_ospf_routes_in_csv_format_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get OSPF route information in CSV format
    # Get OSPF route information in CSV format. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix CIDR network address
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(OspfRoutesListResultInCsvFormat, Fixnum, Hash)>] OspfRoutesListResultInCsvFormat data, response status code and response headers
    def get_ospf_routes_in_csv_format_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_ospf_routes_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_ospf_routes_in_csv_format"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_ospf_routes_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_ospf_routes_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_ospf_routes_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf/routes?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'network_prefix'] = opts[:'network_prefix'] if !opts[:'network_prefix'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfRoutesListResultInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_ospf_routes_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IGMP Memberships
    # Get Igmp Memberships. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [IgmpMemberships]
    def get_policy_igmp_memberships(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = get_policy_igmp_memberships_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Get IGMP Memberships
    # Get Igmp Memberships. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(IgmpMemberships, Fixnum, Hash)>] IgmpMemberships data, response status code and response headers
    def get_policy_igmp_memberships_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_igmp_memberships ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_igmp_memberships"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.get_policy_igmp_memberships"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_igmp_memberships, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_igmp_memberships, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast/igmp-memberships'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'IgmpMemberships')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_igmp_memberships\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get IGMP Memberships in CSV format
    # Get Igmp Memberships in CSV format. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [IgmpMembershipsInCsvFormat]
    def get_policy_igmp_memberships_in_csv_format(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = get_policy_igmp_memberships_in_csv_format_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Get IGMP Memberships in CSV format
    # Get Igmp Memberships in CSV format. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(IgmpMembershipsInCsvFormat, Fixnum, Hash)>] IgmpMembershipsInCsvFormat data, response status code and response headers
    def get_policy_igmp_memberships_in_csv_format_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_igmp_memberships_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_igmp_memberships_in_csv_format"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.get_policy_igmp_memberships_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_igmp_memberships_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_igmp_memberships_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast/igmp-memberships?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'IgmpMembershipsInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_igmp_memberships_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Multicast Forwarding
    # Get Multicast Forwarding. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyMulticastForwarding]
    def get_policy_multicast_forwarding(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = get_policy_multicast_forwarding_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Get Multicast Forwarding
    # Get Multicast Forwarding. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyMulticastForwarding, Fixnum, Hash)>] PolicyMulticastForwarding data, response status code and response headers
    def get_policy_multicast_forwarding_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_multicast_forwarding ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_multicast_forwarding"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.get_policy_multicast_forwarding"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_multicast_forwarding, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_multicast_forwarding, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast/forwarding'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyMulticastForwarding')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_multicast_forwarding\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Multicast Forwarding In Csv Format
    # Get Multicast Forwarding In CSV Format. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyMulticastForwardingInCsvFormat]
    def get_policy_multicast_forwarding_in_csv_format(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = get_policy_multicast_forwarding_in_csv_format_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Get Multicast Forwarding In Csv Format
    # Get Multicast Forwarding In CSV Format. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyMulticastForwardingInCsvFormat, Fixnum, Hash)>] PolicyMulticastForwardingInCsvFormat data, response status code and response headers
    def get_policy_multicast_forwarding_in_csv_format_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_multicast_forwarding_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_multicast_forwarding_in_csv_format"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.get_policy_multicast_forwarding_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_multicast_forwarding_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_multicast_forwarding_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast/forwarding?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyMulticastForwardingInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_multicast_forwarding_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Multicast Routes
    # Get Multicast Routes. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyMulticastRoutes]
    def get_policy_multicast_routes(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = get_policy_multicast_routes_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Get Multicast Routes
    # Get Multicast Routes. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyMulticastRoutes, Fixnum, Hash)>] PolicyMulticastRoutes data, response status code and response headers
    def get_policy_multicast_routes_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_multicast_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_multicast_routes"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.get_policy_multicast_routes"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_multicast_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_multicast_routes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast/routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyMulticastRoutes')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_multicast_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Multicast Routes in Csv Format
    # Get Multicast Routes in CSV Format. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyMulticastRoutesInCsvFormat]
    def get_policy_multicast_routes_in_csv_format(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = get_policy_multicast_routes_in_csv_format_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Get Multicast Routes in Csv Format
    # Get Multicast Routes in CSV Format. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyMulticastRoutesInCsvFormat, Fixnum, Hash)>] PolicyMulticastRoutesInCsvFormat data, response status code and response headers
    def get_policy_multicast_routes_in_csv_format_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_multicast_routes_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_multicast_routes_in_csv_format"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.get_policy_multicast_routes_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_multicast_routes_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_multicast_routes_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast/routes?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyMulticastRoutesInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_multicast_routes_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get NAT Rule
    # Get NAT Rule from Tier-0 denoted by Tier-0 ID, under NAT section denoted by &lt;nat-id&gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PUT/PATCH API, the path returned in the GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param nat_rule_id Rule ID
    # @param [Hash] opts the optional parameters
    # @return [PolicyNatRule]
    def get_policy_nat_rule_from_tier0(tier_0_id, nat_id, nat_rule_id, opts = {})
      data, _status_code, _headers = get_policy_nat_rule_from_tier0_with_http_info(tier_0_id, nat_id, nat_rule_id, opts)
      data
    end

    # Get NAT Rule
    # Get NAT Rule from Tier-0 denoted by Tier-0 ID, under NAT section denoted by &amp;lt;nat-id&amp;gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PUT/PATCH API, the path returned in the GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param nat_rule_id Rule ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyNatRule, Fixnum, Hash)>] PolicyNatRule data, response status code and response headers
    def get_policy_nat_rule_from_tier0_with_http_info(tier_0_id, nat_id, nat_rule_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_nat_rule_from_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_nat_rule_from_tier0"
      end
      # verify the required parameter 'nat_id' is set
      if @api_client.config.client_side_validation && nat_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_id' when calling Tier0GatewaysApi.get_policy_nat_rule_from_tier0"
      end
      # verify the required parameter 'nat_rule_id' is set
      if @api_client.config.client_side_validation && nat_rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_rule_id' when calling Tier0GatewaysApi.get_policy_nat_rule_from_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/nat/{nat-id}/nat-rules/{nat-rule-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'nat-id' + '}', nat_id.to_s).sub('{' + 'nat-rule-id' + '}', nat_rule_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyNatRule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_nat_rule_from_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get PIM Rendezvous Point Mappings
    # Get PIM Rendezvous Point Mappings. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PimRpMappings]
    def get_policy_pim_rp_mappings(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = get_policy_pim_rp_mappings_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Get PIM Rendezvous Point Mappings
    # Get PIM Rendezvous Point Mappings. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PimRpMappings, Fixnum, Hash)>] PimRpMappings data, response status code and response headers
    def get_policy_pim_rp_mappings_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_pim_rp_mappings ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_pim_rp_mappings"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.get_policy_pim_rp_mappings"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_pim_rp_mappings, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_pim_rp_mappings, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast/pim-rp-mappings'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PimRpMappings')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_pim_rp_mappings\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get PIM Rendezvous Point Mappings In CSV Format
    # Get PIM Rendezvous Point Mappings In CSV Format. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PimRpMappingsInCsvFormat]
    def get_policy_pim_rp_mappings_in_csv_format(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = get_policy_pim_rp_mappings_in_csv_format_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Get PIM Rendezvous Point Mappings In CSV Format
    # Get PIM Rendezvous Point Mappings In CSV Format. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PimRpMappingsInCsvFormat, Fixnum, Hash)>] PimRpMappingsInCsvFormat data, response status code and response headers
    def get_policy_pim_rp_mappings_in_csv_format_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_pim_rp_mappings_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_pim_rp_mappings_in_csv_format"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.get_policy_pim_rp_mappings_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_pim_rp_mappings_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_pim_rp_mappings_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast/pim-rp-mappings?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PimRpMappingsInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_pim_rp_mappings_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Policy Tunnel(GRE as of now)
    # Get Policy Tunnel(GRE as of now)
    # @param tier_0_id tier0 id
    # @param locale_svc_id locale service id
    # @param tunnel_id tunnel id
    # @param [Hash] opts the optional parameters
    # @return [Tunnel]
    def get_policy_tunnel(tier_0_id, locale_svc_id, tunnel_id, opts = {})
      data, _status_code, _headers = get_policy_tunnel_with_http_info(tier_0_id, locale_svc_id, tunnel_id, opts)
      data
    end

    # Get Policy Tunnel(GRE as of now)
    # Get Policy Tunnel(GRE as of now)
    # @param tier_0_id tier0 id
    # @param locale_svc_id locale service id
    # @param tunnel_id tunnel id
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tunnel, Fixnum, Hash)>] Tunnel data, response status code and response headers
    def get_policy_tunnel_with_http_info(tier_0_id, locale_svc_id, tunnel_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_tunnel ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_tunnel"
      end
      # verify the required parameter 'locale_svc_id' is set
      if @api_client.config.client_side_validation && locale_svc_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_svc_id' when calling Tier0GatewaysApi.get_policy_tunnel"
      end
      # verify the required parameter 'tunnel_id' is set
      if @api_client.config.client_side_validation && tunnel_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_id' when calling Tier0GatewaysApi.get_policy_tunnel"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-svc-id}/tunnels/{tunnel-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-svc-id' + '}', locale_svc_id.to_s).sub('{' + 'tunnel-id' + '}', tunnel_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tunnel')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_tunnel\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get policy Tunnel(GRE as of now) statistics for given tunnel-id
    # Get policy Tunnel(GRE as of now) statistics for given tunnel-id
    # @param tier_0_id 
    # @param locale_svc_id 
    # @param tunnel_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [TunnelTrafficStatistics]
    def get_policy_tunnel_statistics(tier_0_id, locale_svc_id, tunnel_id, opts = {})
      data, _status_code, _headers = get_policy_tunnel_statistics_with_http_info(tier_0_id, locale_svc_id, tunnel_id, opts)
      data
    end

    # Get policy Tunnel(GRE as of now) statistics for given tunnel-id
    # Get policy Tunnel(GRE as of now) statistics for given tunnel-id
    # @param tier_0_id 
    # @param locale_svc_id 
    # @param tunnel_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [Array<(TunnelTrafficStatistics, Fixnum, Hash)>] TunnelTrafficStatistics data, response status code and response headers
    def get_policy_tunnel_statistics_with_http_info(tier_0_id, locale_svc_id, tunnel_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_tunnel_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_tunnel_statistics"
      end
      # verify the required parameter 'locale_svc_id' is set
      if @api_client.config.client_side_validation && locale_svc_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_svc_id' when calling Tier0GatewaysApi.get_policy_tunnel_statistics"
      end
      # verify the required parameter 'tunnel_id' is set
      if @api_client.config.client_side_validation && tunnel_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_id' when calling Tier0GatewaysApi.get_policy_tunnel_statistics"
      end
      if @api_client.config.client_side_validation && opts[:'bgp_neighbor_type'] && !['INTER_SR', 'USER'].include?(opts[:'bgp_neighbor_type'])
        fail ArgumentError, 'invalid value for "bgp_neighbor_type", must be one of INTER_SR, USER'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_tunnel_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_tunnel_statistics, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      if @api_client.config.client_side_validation && opts[:'stats_type'] && !['DATAPATH_STATS'].include?(opts[:'stats_type'])
        fail ArgumentError, 'invalid value for "stats_type", must be one of DATAPATH_STATS'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-svc-id}/tunnels/{tunnel-id}/statistics'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-svc-id' + '}', locale_svc_id.to_s).sub('{' + 'tunnel-id' + '}', tunnel_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'bgp_neighbor_type'] = opts[:'bgp_neighbor_type'] if !opts[:'bgp_neighbor_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'stats_type'] = opts[:'stats_type'] if !opts[:'stats_type'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TunnelTrafficStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_tunnel_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get policy Tunnel(GRE as of now) statistics summary for given tunnel-id
    # Get policy Tunnel(GRE as of now) statistics summary for given tunnel-id
    # @param tier_0_id 
    # @param locale_svc_id 
    # @param tunnel_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [AggregateTunnelTrafficStatistics]
    def get_policy_tunnel_statistics_summary(tier_0_id, locale_svc_id, tunnel_id, opts = {})
      data, _status_code, _headers = get_policy_tunnel_statistics_summary_with_http_info(tier_0_id, locale_svc_id, tunnel_id, opts)
      data
    end

    # Get policy Tunnel(GRE as of now) statistics summary for given tunnel-id
    # Get policy Tunnel(GRE as of now) statistics summary for given tunnel-id
    # @param tier_0_id 
    # @param locale_svc_id 
    # @param tunnel_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(AggregateTunnelTrafficStatistics, Fixnum, Hash)>] AggregateTunnelTrafficStatistics data, response status code and response headers
    def get_policy_tunnel_statistics_summary_with_http_info(tier_0_id, locale_svc_id, tunnel_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_tunnel_statistics_summary ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_tunnel_statistics_summary"
      end
      # verify the required parameter 'locale_svc_id' is set
      if @api_client.config.client_side_validation && locale_svc_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_svc_id' when calling Tier0GatewaysApi.get_policy_tunnel_statistics_summary"
      end
      # verify the required parameter 'tunnel_id' is set
      if @api_client.config.client_side_validation && tunnel_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_id' when calling Tier0GatewaysApi.get_policy_tunnel_statistics_summary"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_tunnel_statistics_summary, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_tunnel_statistics_summary, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-svc-id}/tunnels/{tunnel-id}/statistics/summary'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-svc-id' + '}', locale_svc_id.to_s).sub('{' + 'tunnel-id' + '}', tunnel_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AggregateTunnelTrafficStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_tunnel_statistics_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get policy Tunnel(GRE as of now) status for given tunnel-id
    # Get policy Tunnel(GRE as of now) status for given tunnel-id
    # @param tier_0_id 
    # @param locale_svc_id 
    # @param tunnel_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [TunnelStatus]
    def get_policy_tunnel_status(tier_0_id, locale_svc_id, tunnel_id, opts = {})
      data, _status_code, _headers = get_policy_tunnel_status_with_http_info(tier_0_id, locale_svc_id, tunnel_id, opts)
      data
    end

    # Get policy Tunnel(GRE as of now) status for given tunnel-id
    # Get policy Tunnel(GRE as of now) status for given tunnel-id
    # @param tier_0_id 
    # @param locale_svc_id 
    # @param tunnel_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [Array<(TunnelStatus, Fixnum, Hash)>] TunnelStatus data, response status code and response headers
    def get_policy_tunnel_status_with_http_info(tier_0_id, locale_svc_id, tunnel_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_policy_tunnel_status ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_policy_tunnel_status"
      end
      # verify the required parameter 'locale_svc_id' is set
      if @api_client.config.client_side_validation && locale_svc_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_svc_id' when calling Tier0GatewaysApi.get_policy_tunnel_status"
      end
      # verify the required parameter 'tunnel_id' is set
      if @api_client.config.client_side_validation && tunnel_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_id' when calling Tier0GatewaysApi.get_policy_tunnel_status"
      end
      if @api_client.config.client_side_validation && opts[:'bgp_neighbor_type'] && !['INTER_SR', 'USER'].include?(opts[:'bgp_neighbor_type'])
        fail ArgumentError, 'invalid value for "bgp_neighbor_type", must be one of INTER_SR, USER'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_tunnel_status, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_policy_tunnel_status, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      if @api_client.config.client_side_validation && opts[:'stats_type'] && !['DATAPATH_STATS'].include?(opts[:'stats_type'])
        fail ArgumentError, 'invalid value for "stats_type", must be one of DATAPATH_STATS'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-svc-id}/tunnels/{tunnel-id}/status'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-svc-id' + '}', locale_svc_id.to_s).sub('{' + 'tunnel-id' + '}', tunnel_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'bgp_neighbor_type'] = opts[:'bgp_neighbor_type'] if !opts[:'bgp_neighbor_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'stats_type'] = opts[:'stats_type'] if !opts[:'stats_type'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TunnelStatus')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_policy_tunnel_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a route map
    # Read a route map
    # @param tier_0_id 
    # @param route_map_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0RouteMap]
    def get_route_map(tier_0_id, route_map_id, opts = {})
      data, _status_code, _headers = get_route_map_with_http_info(tier_0_id, route_map_id, opts)
      data
    end

    # Read a route map
    # Read a route map
    # @param tier_0_id 
    # @param route_map_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0RouteMap, Fixnum, Hash)>] Tier0RouteMap data, response status code and response headers
    def get_route_map_with_http_info(tier_0_id, route_map_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_route_map ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_route_map"
      end
      # verify the required parameter 'route_map_id' is set
      if @api_client.config.client_side_validation && route_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_map_id' when calling Tier0GatewaysApi.get_route_map"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/route-maps/{route-map-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-map-id' + '}', route_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0RouteMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_route_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier-0 Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0  <br> This API is deprecated. Please use /infra/tier-0s/&lt;tier-0-id&gt;/arp-proxies 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [PolicyArpProxyTableListResult]
    def get_tier0_arp_proxies(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = get_tier0_arp_proxies_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get Tier-0 Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0  &lt;br&gt; This API is deprecated. Please use /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/arp-proxies 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [Array<(PolicyArpProxyTableListResult, Fixnum, Hash)>] PolicyArpProxyTableListResult data, response status code and response headers
    def get_tier0_arp_proxies_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_arp_proxies ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_arp_proxies"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_arp_proxies"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_arp_proxies, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_arp_proxies, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/arp-proxies'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyArpProxyTableListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_arp_proxies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor advertised routes
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled. The query parameter \"source=cached\" is not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRoutesListResult]
    def get_tier0_bgp_neighbor_advertised_routes(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_advertised_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get BGP neighbor advertised routes
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled. The query parameter \&quot;source&#x3D;cached\&quot; is not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRoutesListResult, Fixnum, Hash)>] BgpNeighborRoutesListResult data, response status code and response headers
    def get_tier0_bgp_neighbor_advertised_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/advertised-routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_bgp_neighbor_advertised_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor advertised routes in CSV format
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled in CSV format. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRouteDetailsInCsvFormat]
    def get_tier0_bgp_neighbor_advertised_routes_in_csv_format(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_advertised_routes_in_csv_format_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get BGP neighbor advertised routes in CSV format
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled in CSV format. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRouteDetailsInCsvFormat, Fixnum, Hash)>] BgpNeighborRouteDetailsInCsvFormat data, response status code and response headers
    def get_tier0_bgp_neighbor_advertised_routes_in_csv_format_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_advertised_routes_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/advertised-routes?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRouteDetailsInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_bgp_neighbor_advertised_routes_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routes learned by BGP neighbor
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRoutesListResult]
    def get_tier0_bgp_neighbor_routes(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get routes learned by BGP neighbor
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRoutesListResult, Fixnum, Hash)>] BgpNeighborRoutesListResult data, response status code and response headers
    def get_tier0_bgp_neighbor_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_bgp_neighbor_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_bgp_neighbor_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routes learned by BGP neighbor in CSV format
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRouteDetailsInCsvFormat]
    def get_tier0_bgp_neighbor_routes_in_csv_format(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbor_routes_in_csv_format_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get routes learned by BGP neighbor in CSV format
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRouteDetailsInCsvFormat, Fixnum, Hash)>] BgpNeighborRouteDetailsInCsvFormat data, response status code and response headers
    def get_tier0_bgp_neighbor_routes_in_csv_format_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_bgp_neighbor_routes_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes_in_csv_format"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes_in_csv_format"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes_in_csv_format, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbor_routes_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/routes?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRouteDetailsInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_bgp_neighbor_routes_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor status for the Tier0
    # Returns the status of all the BGP neighbors for the given Tier0. To get BGP neighbor status for a particular enforcement point, parameter \"enforcement_point_path=&lt;enforcement_point_path&gt;\" needs to be specified. If an enforcement_point is unspecified, then bgp neighbor status for all enforcement points is fetched. To get BGP neighbors status for the logical router from particular edge node, parameter \"edge_path=&lt;edge_path&gt;\" needs to be specified. If an edge_path is unspecified, then bgp neighbor status for all edges is fetched. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [PolicyBgpNeighborsStatusListResult]
    def get_tier0_bgp_neighbors_status(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = get_tier0_bgp_neighbors_status_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get BGP neighbor status for the Tier0
    # Returns the status of all the BGP neighbors for the given Tier0. To get BGP neighbor status for a particular enforcement point, parameter \&quot;enforcement_point_path&#x3D;&amp;lt;enforcement_point_path&amp;gt;\&quot; needs to be specified. If an enforcement_point is unspecified, then bgp neighbor status for all enforcement points is fetched. To get BGP neighbors status for the logical router from particular edge node, parameter \&quot;edge_path&#x3D;&amp;lt;edge_path&amp;gt;\&quot; needs to be specified. If an edge_path is unspecified, then bgp neighbor status for all edges is fetched. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [Array<(PolicyBgpNeighborsStatusListResult, Fixnum, Hash)>] PolicyBgpNeighborsStatusListResult data, response status code and response headers
    def get_tier0_bgp_neighbors_status_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_bgp_neighbors_status ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbors_status"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_bgp_neighbors_status"
      end
      if @api_client.config.client_side_validation && opts[:'bgp_neighbor_type'] && !['INTER_SR', 'USER'].include?(opts[:'bgp_neighbor_type'])
        fail ArgumentError, 'invalid value for "bgp_neighbor_type", must be one of INTER_SR, USER'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbors_status, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_bgp_neighbors_status, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      if @api_client.config.client_side_validation && opts[:'stats_type'] && !['DATAPATH_STATS'].include?(opts[:'stats_type'])
        fail ArgumentError, 'invalid value for "stats_type", must be one of DATAPATH_STATS'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/status'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'bgp_neighbor_type'] = opts[:'bgp_neighbor_type'] if !opts[:'bgp_neighbor_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'stats_type'] = opts[:'stats_type'] if !opts[:'stats_type'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyBgpNeighborsStatusListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_bgp_neighbors_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 DNS forwarder statistics
    # Get statistics of tier-0 DNS forwarder. - no enforcement point path specified: Statistics will be evaluated on each enforcement point. - {enforcement_point_path}: Statistics are evaluated only on the given enforcement point. 
    # @param tier_0_id Tier-0 id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [AggregateDNSForwarderStatistics]
    def get_tier0_dns_forwarder_statistics(tier_0_id, opts = {})
      data, _status_code, _headers = get_tier0_dns_forwarder_statistics_with_http_info(tier_0_id, opts)
      data
    end

    # Get tier-0 DNS forwarder statistics
    # Get statistics of tier-0 DNS forwarder. - no enforcement point path specified: Statistics will be evaluated on each enforcement point. - {enforcement_point_path}: Statistics are evaluated only on the given enforcement point. 
    # @param tier_0_id Tier-0 id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(AggregateDNSForwarderStatistics, Fixnum, Hash)>] AggregateDNSForwarderStatistics data, response status code and response headers
    def get_tier0_dns_forwarder_statistics_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_dns_forwarder_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_dns_forwarder_statistics"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/dns-forwarder/statistics'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AggregateDNSForwarderStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_dns_forwarder_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get current status of tier-0 DNS forwarder
    # Get current status of tier-0 DNS forwarder. - no enforcement point path specified: Status will be evaluated on each enforcement point. - {enforcement_point_path}: Status will be evaluated only on the given enforcement point. 
    # @param tier_0_id Tier-0 id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [AggregateDNSForwarderStatus]
    def get_tier0_dns_forwarder_status(tier_0_id, opts = {})
      data, _status_code, _headers = get_tier0_dns_forwarder_status_with_http_info(tier_0_id, opts)
      data
    end

    # Get current status of tier-0 DNS forwarder
    # Get current status of tier-0 DNS forwarder. - no enforcement point path specified: Status will be evaluated on each enforcement point. - {enforcement_point_path}: Status will be evaluated only on the given enforcement point. 
    # @param tier_0_id Tier-0 id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(AggregateDNSForwarderStatus, Fixnum, Hash)>] AggregateDNSForwarderStatus data, response status code and response headers
    def get_tier0_dns_forwarder_status_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_dns_forwarder_status ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_dns_forwarder_status"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/dns-forwarder/status'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AggregateDNSForwarderStatus')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_dns_forwarder_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get forwarding table from tier-0
    # Get forwarding table from tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RoutingTableListResult]
    def get_tier0_forwarding_table(tier_0_id, opts = {})
      data, _status_code, _headers = get_tier0_forwarding_table_with_http_info(tier_0_id, opts)
      data
    end

    # Get forwarding table from tier-0
    # Get forwarding table from tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RoutingTableListResult, Fixnum, Hash)>] RoutingTableListResult data, response status code and response headers
    def get_tier0_forwarding_table_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_forwarding_table ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_forwarding_table"
      end
      if @api_client.config.client_side_validation && opts[:'component_type'] && !['DR_ROUTES'].include?(opts[:'component_type'])
        fail ArgumentError, 'invalid value for "component_type", must be one of DR_ROUTES'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_forwarding_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_forwarding_table, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'route_source'] && !['BGP', 'STATIC', 'CONNECTED', 'OSPF'].include?(opts[:'route_source'])
        fail ArgumentError, 'invalid value for "route_source", must be one of BGP, STATIC, CONNECTED, OSPF'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/forwarding-table'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'component_type'] = opts[:'component_type'] if !opts[:'component_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_id'] = opts[:'edge_id'] if !opts[:'edge_id'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'network_prefix'] = opts[:'network_prefix'] if !opts[:'network_prefix'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'route_source'] = opts[:'route_source'] if !opts[:'route_source'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RoutingTableListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_forwarding_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get forwarding table from tier-0 in CSV format
    # Get forwarding table from tier-0 gateway in CSV format. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GatewayRouteTableInCsvFormat]
    def get_tier0_forwarding_table_csv(tier_0_id, opts = {})
      data, _status_code, _headers = get_tier0_forwarding_table_csv_with_http_info(tier_0_id, opts)
      data
    end

    # Get forwarding table from tier-0 in CSV format
    # Get forwarding table from tier-0 gateway in CSV format. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GatewayRouteTableInCsvFormat, Fixnum, Hash)>] GatewayRouteTableInCsvFormat data, response status code and response headers
    def get_tier0_forwarding_table_csv_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_forwarding_table_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_forwarding_table_csv"
      end
      if @api_client.config.client_side_validation && opts[:'component_type'] && !['DR_ROUTES'].include?(opts[:'component_type'])
        fail ArgumentError, 'invalid value for "component_type", must be one of DR_ROUTES'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_forwarding_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_forwarding_table_csv, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'route_source'] && !['BGP', 'STATIC', 'CONNECTED', 'OSPF'].include?(opts[:'route_source'])
        fail ArgumentError, 'invalid value for "route_source", must be one of BGP, STATIC, CONNECTED, OSPF'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/forwarding-table?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'component_type'] = opts[:'component_type'] if !opts[:'component_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_id'] = opts[:'edge_id'] if !opts[:'edge_id'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'network_prefix'] = opts[:'network_prefix'] if !opts[:'network_prefix'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'route_source'] = opts[:'route_source'] if !opts[:'route_source'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GatewayRouteTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_forwarding_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier-0 Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [PolicyArpProxyTableListResult]
    def get_tier0_gateway_arp_proxies(tier_0_id, opts = {})
      data, _status_code, _headers = get_tier0_gateway_arp_proxies_with_http_info(tier_0_id, opts)
      data
    end

    # Get Tier-0 Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [Array<(PolicyArpProxyTableListResult, Fixnum, Hash)>] PolicyArpProxyTableListResult data, response status code and response headers
    def get_tier0_gateway_arp_proxies_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_gateway_arp_proxies ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_gateway_arp_proxies"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_gateway_arp_proxies, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_gateway_arp_proxies, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/arp-proxies'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyArpProxyTableListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_gateway_arp_proxies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier-0 Address Resolution Protocol Proxies in CSV format
    # Returns ARP proxy table for a tier-0 in CSV format 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [PolicyArpProxyTableCsvListResult]
    def get_tier0_gateway_arp_proxies_in_csv(tier_0_id, opts = {})
      data, _status_code, _headers = get_tier0_gateway_arp_proxies_in_csv_with_http_info(tier_0_id, opts)
      data
    end

    # Get Tier-0 Address Resolution Protocol Proxies in CSV format
    # Returns ARP proxy table for a tier-0 in CSV format 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [Array<(PolicyArpProxyTableCsvListResult, Fixnum, Hash)>] PolicyArpProxyTableCsvListResult data, response status code and response headers
    def get_tier0_gateway_arp_proxies_in_csv_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_gateway_arp_proxies_in_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_gateway_arp_proxies_in_csv"
      end
      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/arp-proxies?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyArpProxyTableCsvListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_gateway_arp_proxies_in_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier-0 Interface Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0 interface. Interfaces can be of types - EXTERNAL and SERVICE. Interfaces of type LOOBACK and downlink are not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [PolicyArpProxyTableListResult]
    def get_tier0_interface_arp_proxies(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_arp_proxies_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get Tier-0 Interface Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0 interface. Interfaces can be of types - EXTERNAL and SERVICE. Interfaces of type LOOBACK and downlink are not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [Array<(PolicyArpProxyTableListResult, Fixnum, Hash)>] PolicyArpProxyTableListResult data, response status code and response headers
    def get_tier0_interface_arp_proxies_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_interface_arp_proxies ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_proxies"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_proxies"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_proxies"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_arp_proxies, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_arp_proxies, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-proxy'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyArpProxyTableListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_interface_arp_proxies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier-0 Interface Address Resolution Protocol Proxies in CSV format
    # Returns ARP proxy table for a tier-0 interface in CSV format. Interfaces can be of types - EXTERNAL and SERVICE. Interfaces of type LOOBACK and downlink are not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [PolicyArpProxyTableCsvListResult]
    def get_tier0_interface_arp_proxies_in_csv(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_arp_proxies_in_csv_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get Tier-0 Interface Address Resolution Protocol Proxies in CSV format
    # Returns ARP proxy table for a tier-0 interface in CSV format. Interfaces can be of types - EXTERNAL and SERVICE. Interfaces of type LOOBACK and downlink are not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [Array<(PolicyArpProxyTableCsvListResult, Fixnum, Hash)>] PolicyArpProxyTableCsvListResult data, response status code and response headers
    def get_tier0_interface_arp_proxies_in_csv_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_interface_arp_proxies_in_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_proxies_in_csv"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_proxies_in_csv"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_proxies_in_csv"
      end
      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-proxy?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyArpProxyTableCsvListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_interface_arp_proxies_in_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from tier-0 interface
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the tier-0 interface, on a edge node if a query parameter \"edge_path=&lt;policy-edge-path&gt;\" is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def get_tier0_interface_arp_table(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_arp_table_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get ARP table from tier-0 interface
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the tier-0 interface, on a edge node if a query parameter \&quot;edge_path&#x3D;&amp;lt;policy-edge-path&amp;gt;\&quot; is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def get_tier0_interface_arp_table_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_interface_arp_table ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_table"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_table"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_table"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_arp_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_arp_table, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-table'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_interface_arp_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from tier-0 interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 interface, on a edge node if a query parameter \"edge_path=&lt;policy-edge-path&gt;\" is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def get_tier0_interface_arp_table_csv(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_arp_table_csv_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get ARP table from tier-0 interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 interface, on a edge node if a query parameter \&quot;edge_path&#x3D;&amp;lt;policy-edge-path&amp;gt;\&quot; is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def get_tier0_interface_arp_table_csv_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_interface_arp_table_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_table_csv"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_table_csv"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.get_tier0_interface_arp_table_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_arp_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_arp_table_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-table?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_interface_arp_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get DAD status by interface
    # Get tier-0 interface DAD state information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [InterfaceDADState]
    def get_tier0_interface_dad_state(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_dad_state_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get DAD status by interface
    # Get tier-0 interface DAD state information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(InterfaceDADState, Fixnum, Hash)>] InterfaceDADState data, response status code and response headers
    def get_tier0_interface_dad_state_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_interface_dad_state ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_interface_dad_state"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_interface_dad_state"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.get_tier0_interface_dad_state"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/dad-state'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceDADState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_interface_dad_state\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 interface group statistics information
    # Get tier-0 interface group statistics information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_group_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [PolicyInterfaceGroupStatistics]
    def get_tier0_interface_group_statistics(tier_0_id, locale_service_id, interface_group_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_group_statistics_with_http_info(tier_0_id, locale_service_id, interface_group_id, opts)
      data
    end

    # Get tier-0 interface group statistics information
    # Get tier-0 interface group statistics information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_group_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [Array<(PolicyInterfaceGroupStatistics, Fixnum, Hash)>] PolicyInterfaceGroupStatistics data, response status code and response headers
    def get_tier0_interface_group_statistics_with_http_info(tier_0_id, locale_service_id, interface_group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_interface_group_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_interface_group_statistics"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_interface_group_statistics"
      end
      # verify the required parameter 'interface_group_id' is set
      if @api_client.config.client_side_validation && interface_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_group_id' when calling Tier0GatewaysApi.get_tier0_interface_group_statistics"
      end
      if @api_client.config.client_side_validation && opts[:'bgp_neighbor_type'] && !['INTER_SR', 'USER'].include?(opts[:'bgp_neighbor_type'])
        fail ArgumentError, 'invalid value for "bgp_neighbor_type", must be one of INTER_SR, USER'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_group_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_group_statistics, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      if @api_client.config.client_side_validation && opts[:'stats_type'] && !['DATAPATH_STATS'].include?(opts[:'stats_type'])
        fail ArgumentError, 'invalid value for "stats_type", must be one of DATAPATH_STATS'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interface-groups/{interface-group-id}/statistics'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-group-id' + '}', interface_group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'bgp_neighbor_type'] = opts[:'bgp_neighbor_type'] if !opts[:'bgp_neighbor_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'stats_type'] = opts[:'stats_type'] if !opts[:'stats_type'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceGroupStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_interface_group_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 interface statistics information
    # Get tier-0 interface statistics information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [PolicyInterfaceStatistics]
    def get_tier0_interface_statistics(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_statistics_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get tier-0 interface statistics information
    # Get tier-0 interface statistics information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [Array<(PolicyInterfaceStatistics, Fixnum, Hash)>] PolicyInterfaceStatistics data, response status code and response headers
    def get_tier0_interface_statistics_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_interface_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_interface_statistics"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_interface_statistics"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.get_tier0_interface_statistics"
      end
      if @api_client.config.client_side_validation && opts[:'bgp_neighbor_type'] && !['INTER_SR', 'USER'].include?(opts[:'bgp_neighbor_type'])
        fail ArgumentError, 'invalid value for "bgp_neighbor_type", must be one of INTER_SR, USER'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_statistics, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      if @api_client.config.client_side_validation && opts[:'stats_type'] && !['DATAPATH_STATS'].include?(opts[:'stats_type'])
        fail ArgumentError, 'invalid value for "stats_type", must be one of DATAPATH_STATS'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/statistics'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'bgp_neighbor_type'] = opts[:'bgp_neighbor_type'] if !opts[:'bgp_neighbor_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'stats_type'] = opts[:'stats_type'] if !opts[:'stats_type'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_interface_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 interface statistics summary information
    # Get tier-0 interface statistics summary information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyInterfaceStatisticsSummary]
    def get_tier0_interface_statistics_summary(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier0_interface_statistics_summary_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get tier-0 interface statistics summary information
    # Get tier-0 interface statistics summary information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyInterfaceStatisticsSummary, Fixnum, Hash)>] PolicyInterfaceStatisticsSummary data, response status code and response headers
    def get_tier0_interface_statistics_summary_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_interface_statistics_summary ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_interface_statistics_summary"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier0_interface_statistics_summary"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.get_tier0_interface_statistics_summary"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_statistics_summary, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_interface_statistics_summary, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/statistics/summary'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatisticsSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_interface_statistics_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get total number of IPv4 or IPv6 routes on a Tier0
    # Get total number of IPv4 or IPv6 routes on a Tier0 
    # @param tier_0_id 
    # @param edge_path Policy path of edge node
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_child_vrf Count all the child VRF routes or not.
    # @return [Tier0NumberOfRoutesResult]
    def get_tier0_number_of_routes(tier_0_id, edge_path, opts = {})
      data, _status_code, _headers = get_tier0_number_of_routes_with_http_info(tier_0_id, edge_path, opts)
      data
    end

    # Get total number of IPv4 or IPv6 routes on a Tier0
    # Get total number of IPv4 or IPv6 routes on a Tier0 
    # @param tier_0_id 
    # @param edge_path Policy path of edge node
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_child_vrf Count all the child VRF routes or not.
    # @return [Array<(Tier0NumberOfRoutesResult, Fixnum, Hash)>] Tier0NumberOfRoutesResult data, response status code and response headers
    def get_tier0_number_of_routes_with_http_info(tier_0_id, edge_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_number_of_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_number_of_routes"
      end
      # verify the required parameter 'edge_path' is set
      if @api_client.config.client_side_validation && edge_path.nil?
        fail ArgumentError, "Missing the required parameter 'edge_path' when calling Tier0GatewaysApi.get_tier0_number_of_routes"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/number-of-routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'edge_path'] = edge_path
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_child_vrf'] = opts[:'include_child_vrf'] if !opts[:'include_child_vrf'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0NumberOfRoutesResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_number_of_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 router link arp information
    # Get tier-0 interface arp information. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def get_tier0_router_link_arp_table(tier_0_id, tier1_path, opts = {})
      data, _status_code, _headers = get_tier0_router_link_arp_table_with_http_info(tier_0_id, tier1_path, opts)
      data
    end

    # Get tier-0 router link arp information
    # Get tier-0 interface arp information. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def get_tier0_router_link_arp_table_with_http_info(tier_0_id, tier1_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_router_link_arp_table ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_router_link_arp_table"
      end
      # verify the required parameter 'tier1_path' is set
      if @api_client.config.client_side_validation && tier1_path.nil?
        fail ArgumentError, "Missing the required parameter 'tier1_path' when calling Tier0GatewaysApi.get_tier0_router_link_arp_table"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_router_link_arp_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_router_link_arp_table, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/tier-1-interface/arp-table'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'tier1_path'] = tier1_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_router_link_arp_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from tier-0 router link interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 router link interface, on a edge node. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def get_tier0_router_link_arp_table_csv(tier_0_id, tier1_path, opts = {})
      data, _status_code, _headers = get_tier0_router_link_arp_table_csv_with_http_info(tier_0_id, tier1_path, opts)
      data
    end

    # Get ARP table from tier-0 router link interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 router link interface, on a edge node. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def get_tier0_router_link_arp_table_csv_with_http_info(tier_0_id, tier1_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_router_link_arp_table_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_router_link_arp_table_csv"
      end
      # verify the required parameter 'tier1_path' is set
      if @api_client.config.client_side_validation && tier1_path.nil?
        fail ArgumentError, "Missing the required parameter 'tier1_path' when calling Tier0GatewaysApi.get_tier0_router_link_arp_table_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_router_link_arp_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_router_link_arp_table_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/tier-1-interface/arp-table?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'tier1_path'] = tier1_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_router_link_arp_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 router link statistics information
    # Get tier-0 router link statistics information for a given linked tier-1 interface. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyInterfaceStatistics]
    def get_tier0_router_link_statistics(tier_0_id, tier1_path, opts = {})
      data, _status_code, _headers = get_tier0_router_link_statistics_with_http_info(tier_0_id, tier1_path, opts)
      data
    end

    # Get tier-0 router link statistics information
    # Get tier-0 router link statistics information for a given linked tier-1 interface. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyInterfaceStatistics, Fixnum, Hash)>] PolicyInterfaceStatistics data, response status code and response headers
    def get_tier0_router_link_statistics_with_http_info(tier_0_id, tier1_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_router_link_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_router_link_statistics"
      end
      # verify the required parameter 'tier1_path' is set
      if @api_client.config.client_side_validation && tier1_path.nil?
        fail ArgumentError, "Missing the required parameter 'tier1_path' when calling Tier0GatewaysApi.get_tier0_router_link_statistics"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_router_link_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_router_link_statistics, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/tier-1-interface/statistics'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'tier1_path'] = tier1_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_router_link_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 router link statistics summary information
    # Get tier-0 router link statistics summary information. In case tier 1 is A/A, and the edge cluster is not the response will have interface_policy_path and logical_router_port_id empty because all logical router  port stats are aggregated from all edge nodes. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyInterfaceStatisticsSummary]
    def get_tier0_router_link_summary_statistics(tier_0_id, tier1_path, opts = {})
      data, _status_code, _headers = get_tier0_router_link_summary_statistics_with_http_info(tier_0_id, tier1_path, opts)
      data
    end

    # Get tier-0 router link statistics summary information
    # Get tier-0 router link statistics summary information. In case tier 1 is A/A, and the edge cluster is not the response will have interface_policy_path and logical_router_port_id empty because all logical router  port stats are aggregated from all edge nodes. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyInterfaceStatisticsSummary, Fixnum, Hash)>] PolicyInterfaceStatisticsSummary data, response status code and response headers
    def get_tier0_router_link_summary_statistics_with_http_info(tier_0_id, tier1_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_router_link_summary_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_router_link_summary_statistics"
      end
      # verify the required parameter 'tier1_path' is set
      if @api_client.config.client_side_validation && tier1_path.nil?
        fail ArgumentError, "Missing the required parameter 'tier1_path' when calling Tier0GatewaysApi.get_tier0_router_link_summary_statistics"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_router_link_summary_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_router_link_summary_statistics, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/tier-1-interface/statistics/summary'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'tier1_path'] = tier1_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatisticsSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_router_link_summary_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routing table from tier-0
    # Get routing table from tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RoutingTableListResult]
    def get_tier0_routes(tier_0_id, opts = {})
      data, _status_code, _headers = get_tier0_routes_with_http_info(tier_0_id, opts)
      data
    end

    # Get routing table from tier-0
    # Get routing table from tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RoutingTableListResult, Fixnum, Hash)>] RoutingTableListResult data, response status code and response headers
    def get_tier0_routes_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_routes"
      end
      if @api_client.config.client_side_validation && opts[:'component_type'] && !['DR_ROUTES'].include?(opts[:'component_type'])
        fail ArgumentError, 'invalid value for "component_type", must be one of DR_ROUTES'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_routes, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'route_source'] && !['BGP', 'STATIC', 'CONNECTED', 'OSPF'].include?(opts[:'route_source'])
        fail ArgumentError, 'invalid value for "route_source", must be one of BGP, STATIC, CONNECTED, OSPF'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/routing-table'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'component_type'] = opts[:'component_type'] if !opts[:'component_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_id'] = opts[:'edge_id'] if !opts[:'edge_id'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'network_prefix'] = opts[:'network_prefix'] if !opts[:'network_prefix'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'route_source'] = opts[:'route_source'] if !opts[:'route_source'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RoutingTableListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routing table from tier-0 in CSV format
    # Get routing table from tier-0 gateway in CSV format. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GatewayRouteTableInCsvFormat]
    def get_tier0_routes_csv(tier_0_id, opts = {})
      data, _status_code, _headers = get_tier0_routes_csv_with_http_info(tier_0_id, opts)
      data
    end

    # Get routing table from tier-0 in CSV format
    # Get routing table from tier-0 gateway in CSV format. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GatewayRouteTableInCsvFormat, Fixnum, Hash)>] GatewayRouteTableInCsvFormat data, response status code and response headers
    def get_tier0_routes_csv_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_routes_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_routes_csv"
      end
      if @api_client.config.client_side_validation && opts[:'component_type'] && !['DR_ROUTES'].include?(opts[:'component_type'])
        fail ArgumentError, 'invalid value for "component_type", must be one of DR_ROUTES'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_routes_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_routes_csv, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'route_source'] && !['BGP', 'STATIC', 'CONNECTED', 'OSPF'].include?(opts[:'route_source'])
        fail ArgumentError, 'invalid value for "route_source", must be one of BGP, STATIC, CONNECTED, OSPF'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/routing-table?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'component_type'] = opts[:'component_type'] if !opts[:'component_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_id'] = opts[:'edge_id'] if !opts[:'edge_id'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'network_prefix'] = opts[:'network_prefix'] if !opts[:'network_prefix'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'route_source'] = opts[:'route_source'] if !opts[:'route_source'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GatewayRouteTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_routes_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier0 state
    # Returns 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :interface_path Interface path for interface specific state such as IPv6 DAD state
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :type Returns specific information based on the value specified.
    # @return [Tier0GatewayState]
    def get_tier0_state(tier_0_id, opts = {})
      data, _status_code, _headers = get_tier0_state_with_http_info(tier_0_id, opts)
      data
    end

    # Get Tier0 state
    # Returns 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :interface_path Interface path for interface specific state such as IPv6 DAD state
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :type Returns specific information based on the value specified.
    # @return [Array<(Tier0GatewayState, Fixnum, Hash)>] Tier0GatewayState data, response status code and response headers
    def get_tier0_state_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier0_state ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.get_tier0_state"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_state, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.get_tier0_state, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      if @api_client.config.client_side_validation && opts[:'type'] && !['GATEWAY_STATE', 'GATEWAY_STATUS', 'IPV6_STATUS', 'RD_PER_EDGE_MAPPING'].include?(opts[:'type'])
        fail ArgumentError, 'invalid value for "type", must be one of GATEWAY_STATE, GATEWAY_STATUS, IPV6_STATUS, RD_PER_EDGE_MAPPING'
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/state'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'interface_path'] = opts[:'interface_path'] if !opts[:'interface_path'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'type'] = opts[:'type'] if !opts[:'type'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0GatewayState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier0_state\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get DAD status by interface
    # Get tier-1 interface DAD state information. 
    # @param tier_1_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [InterfaceDADState]
    def get_tier1_interface_dad_state(tier_1_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = get_tier1_interface_dad_state_with_http_info(tier_1_id, locale_service_id, interface_id, opts)
      data
    end

    # Get DAD status by interface
    # Get tier-1 interface DAD state information. 
    # @param tier_1_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(InterfaceDADState, Fixnum, Hash)>] InterfaceDADState data, response status code and response headers
    def get_tier1_interface_dad_state_with_http_info(tier_1_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.get_tier1_interface_dad_state ...'
      end
      # verify the required parameter 'tier_1_id' is set
      if @api_client.config.client_side_validation && tier_1_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_1_id' when calling Tier0GatewaysApi.get_tier1_interface_dad_state"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.get_tier1_interface_dad_state"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.get_tier1_interface_dad_state"
      end
      # resource path
      local_var_path = '/infra/tier-1s/{tier-1-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/dad-state'.sub('{' + 'tier-1-id' + '}', tier_1_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceDADState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#get_tier1_interface_dad_state\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [BgpNeighborConfig]
    def global_infra_create_or_replace_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      data, _status_code, _headers = global_infra_create_or_replace_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts)
      data
    end

    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(BgpNeighborConfig, Fixnum, Hash)>] BgpNeighborConfig data, response status code and response headers
    def global_infra_create_or_replace_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_create_or_replace_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_bgp_neighbor_config"
      end
      # verify the required parameter 'bgp_neighbor_config' is set
      if @api_client.config.client_side_validation && bgp_neighbor_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_neighbor_config' when calling Tier0GatewaysApi.global_infra_create_or_replace_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_neighbor_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_create_or_replace_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP routing config
    # If BGP routing config is not already present, create BGP routing config. If it already exists, replace the BGP routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [BgpRoutingConfig]
    def global_infra_create_or_replace_bgp_routing_config(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      data, _status_code, _headers = global_infra_create_or_replace_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts)
      data
    end

    # Create or update a BGP routing config
    # If BGP routing config is not already present, create BGP routing config. If it already exists, replace the BGP routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(BgpRoutingConfig, Fixnum, Hash)>] BgpRoutingConfig data, response status code and response headers
    def global_infra_create_or_replace_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_create_or_replace_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_bgp_routing_config"
      end
      # verify the required parameter 'bgp_routing_config' is set
      if @api_client.config.client_side_validation && bgp_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_routing_config' when calling Tier0GatewaysApi.global_infra_create_or_replace_bgp_routing_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_create_or_replace_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP troubleshoot config
    # If BGP troubleshoot config is not present in BGP configuration, create a new BGP troubleshoot config with default value. If it already exists, update the BGP troubleshoot config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [BgpTroubleshootConfig]
    def global_infra_create_or_replace_bgp_troubleshoot_config(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts = {})
      data, _status_code, _headers = global_infra_create_or_replace_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts)
      data
    end

    # Create or update a BGP troubleshoot config
    # If BGP troubleshoot config is not present in BGP configuration, create a new BGP troubleshoot config with default value. If it already exists, update the BGP troubleshoot config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(BgpTroubleshootConfig, Fixnum, Hash)>] BgpTroubleshootConfig data, response status code and response headers
    def global_infra_create_or_replace_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_create_or_replace_bgp_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_bgp_troubleshoot_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_bgp_troubleshoot_config"
      end
      # verify the required parameter 'bgp_troubleshoot_config' is set
      if @api_client.config.client_side_validation && bgp_troubleshoot_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_troubleshoot_config' when calling Tier0GatewaysApi.global_infra_create_or_replace_bgp_troubleshoot_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_troubleshoot_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpTroubleshootConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_create_or_replace_bgp_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a StaticRouteBfdTroubleshootConfig
    # If a StaticRouteBfdTroubleshootConfig is not already present, create a new StaticRouteBfdTroubleshootConfig. If it already exists, update the StaticRouteBfdTroubleshootConfig. This operation will fully replace the object. 
    # @param tier_0_id Tier-0 ID
    # @param static_route_bfd_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [StaticRouteBfdTroubleshootConfig]
    def global_infra_create_or_replace_static_route_bfd_troubleshoot_config(tier_0_id, static_route_bfd_troubleshoot_config, opts = {})
      data, _status_code, _headers = global_infra_create_or_replace_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, static_route_bfd_troubleshoot_config, opts)
      data
    end

    # Create or update a StaticRouteBfdTroubleshootConfig
    # If a StaticRouteBfdTroubleshootConfig is not already present, create a new StaticRouteBfdTroubleshootConfig. If it already exists, update the StaticRouteBfdTroubleshootConfig. This operation will fully replace the object. 
    # @param tier_0_id Tier-0 ID
    # @param static_route_bfd_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(StaticRouteBfdTroubleshootConfig, Fixnum, Hash)>] StaticRouteBfdTroubleshootConfig data, response status code and response headers
    def global_infra_create_or_replace_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, static_route_bfd_troubleshoot_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_create_or_replace_static_route_bfd_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_static_route_bfd_troubleshoot_config"
      end
      # verify the required parameter 'static_route_bfd_troubleshoot_config' is set
      if @api_client.config.client_side_validation && static_route_bfd_troubleshoot_config.nil?
        fail ArgumentError, "Missing the required parameter 'static_route_bfd_troubleshoot_config' when calling Tier0GatewaysApi.global_infra_create_or_replace_static_route_bfd_troubleshoot_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_route_bfd_troubleshoot_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRouteBfdTroubleshootConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_create_or_replace_static_route_bfd_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0 interface
    # If an interface with the interface-id is not already present, create a new interface. If it already exists, replace the interface with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param tier0_interface 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [Tier0Interface]
    def global_infra_create_or_replace_tier0_interface(tier_0_id, locale_service_id, interface_id, tier0_interface, opts = {})
      data, _status_code, _headers = global_infra_create_or_replace_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, tier0_interface, opts)
      data
    end

    # Create or update a Tier-0 interface
    # If an interface with the interface-id is not already present, create a new interface. If it already exists, replace the interface with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param tier0_interface 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(Tier0Interface, Fixnum, Hash)>] Tier0Interface data, response status code and response headers
    def global_infra_create_or_replace_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, tier0_interface, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_create_or_replace_tier0_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_tier0_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_tier0_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_tier0_interface"
      end
      # verify the required parameter 'tier0_interface' is set
      if @api_client.config.client_side_validation && tier0_interface.nil?
        fail ArgumentError, "Missing the required parameter 'tier0_interface' when calling Tier0GatewaysApi.global_infra_create_or_replace_tier0_interface"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0_interface)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0Interface')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_create_or_replace_tier0_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0 static routes
    # If static routes for route-id are not already present, create static routes. If it already exists, replace the static routes for route-id. 
    # @param tier_0_id 
    # @param route_id 
    # @param static_routes 
    # @param [Hash] opts the optional parameters
    # @return [StaticRoutes]
    def global_infra_create_or_replace_tier0_static_routes(tier_0_id, route_id, static_routes, opts = {})
      data, _status_code, _headers = global_infra_create_or_replace_tier0_static_routes_with_http_info(tier_0_id, route_id, static_routes, opts)
      data
    end

    # Create or update a Tier-0 static routes
    # If static routes for route-id are not already present, create static routes. If it already exists, replace the static routes for route-id. 
    # @param tier_0_id 
    # @param route_id 
    # @param static_routes 
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticRoutes, Fixnum, Hash)>] StaticRoutes data, response status code and response headers
    def global_infra_create_or_replace_tier0_static_routes_with_http_info(tier_0_id, route_id, static_routes, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_create_or_replace_tier0_static_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_tier0_static_routes"
      end
      # verify the required parameter 'route_id' is set
      if @api_client.config.client_side_validation && route_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_id' when calling Tier0GatewaysApi.global_infra_create_or_replace_tier0_static_routes"
      end
      # verify the required parameter 'static_routes' is set
      if @api_client.config.client_side_validation && static_routes.nil?
        fail ArgumentError, "Missing the required parameter 'static_routes' when calling Tier0GatewaysApi.global_infra_create_or_replace_tier0_static_routes"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/static-routes/{route-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-id' + '}', route_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_routes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRoutes')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_create_or_replace_tier0_static_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete BGP neighbor config
    # Delete BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def global_infra_delete_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, opts = {})
      global_infra_delete_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      nil
    end

    # Delete BGP neighbor config
    # Delete BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_delete_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_delete_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_delete_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_delete_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.global_infra_delete_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_delete_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete overridden BGP routing config
    # Deletes the specified overridden BgpRoutingConfig. If the BgpRoutingConfig is not overridden, it won't get deleted. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def global_infra_delete_overridden_bgp_routing_config(tier_0_id, locale_service_id, opts = {})
      global_infra_delete_overridden_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, opts)
      nil
    end

    # Delete overridden BGP routing config
    # Deletes the specified overridden BgpRoutingConfig. If the BgpRoutingConfig is not overridden, it won&#39;t get deleted. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_delete_overridden_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_delete_overridden_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_delete_overridden_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_delete_overridden_bgp_routing_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_delete_overridden_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete Tier-0 interface
    # Delete Tier-0 interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def global_infra_delete_tier0_interface(tier_0_id, locale_service_id, interface_id, opts = {})
      global_infra_delete_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      nil
    end

    # Delete Tier-0 interface
    # Delete Tier-0 interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_delete_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_delete_tier0_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_delete_tier0_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_delete_tier0_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_delete_tier0_interface"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_delete_tier0_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table for downlink router port on tier-0 router
    # Get ARP table for downlink router port on tier-0 router. <br> This API is deprecated because it is duplicate. Please use /infra/segments/&lt;segment-id&gt;/arp-table Segment ID is the ID of the  segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def global_infra_get_downlink_port_arp_table_for_infra_segment(segment_id, opts = {})
      data, _status_code, _headers = global_infra_get_downlink_port_arp_table_for_infra_segment_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table for downlink router port on tier-0 router
    # Get ARP table for downlink router port on tier-0 router. &lt;br&gt; This API is deprecated because it is duplicate. Please use /infra/segments/&amp;lt;segment-id&amp;gt;/arp-table Segment ID is the ID of the  segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def global_infra_get_downlink_port_arp_table_for_infra_segment_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_downlink_port_arp_table_for_infra_segment ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.global_infra_get_downlink_port_arp_table_for_infra_segment"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_downlink_port_arp_table_for_infra_segment, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_downlink_port_arp_table_for_infra_segment, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/gateway-interface-arp-table'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_downlink_port_arp_table_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table for downlink router port on tier-0 router in CSV
    # Get ARP table for downlink router port on tier-0 router in CSV. <br> This API is deprecated because it is duplicate. Please use /infra/segments/&lt;segment-id&gt;/arp-table?format=csv Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def global_infra_get_downlink_port_arp_table_for_infra_segment_in_csv(segment_id, opts = {})
      data, _status_code, _headers = global_infra_get_downlink_port_arp_table_for_infra_segment_in_csv_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table for downlink router port on tier-0 router in CSV
    # Get ARP table for downlink router port on tier-0 router in CSV. &lt;br&gt; This API is deprecated because it is duplicate. Please use /infra/segments/&amp;lt;segment-id&amp;gt;/arp-table?format&#x3D;csv Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def global_infra_get_downlink_port_arp_table_for_infra_segment_in_csv_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_downlink_port_arp_table_for_infra_segment_in_csv ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.global_infra_get_downlink_port_arp_table_for_infra_segment_in_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_downlink_port_arp_table_for_infra_segment_in_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_downlink_port_arp_table_for_infra_segment_in_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/gateway-interface-arp-table?format=csv'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_downlink_port_arp_table_for_infra_segment_in_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get DAD state for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [InterfaceDADState]
    def global_infra_get_downlink_port_dad_state_for_infra_segment(segment_id, opts = {})
      data, _status_code, _headers = global_infra_get_downlink_port_dad_state_for_infra_segment_with_http_info(segment_id, opts)
      data
    end

    # Get DAD state for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [Array<(InterfaceDADState, Fixnum, Hash)>] InterfaceDADState data, response status code and response headers
    def global_infra_get_downlink_port_dad_state_for_infra_segment_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_downlink_port_dad_state_for_infra_segment ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.global_infra_get_downlink_port_dad_state_for_infra_segment"
      end
      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/gateway-interface-dad-state'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceDADState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_downlink_port_dad_state_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyInterfaceStatistics]
    def global_infra_get_downlink_port_statistics_for_infra_segment(segment_id, opts = {})
      data, _status_code, _headers = global_infra_get_downlink_port_statistics_for_infra_segment_with_http_info(segment_id, opts)
      data
    end

    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyInterfaceStatistics, Fixnum, Hash)>] PolicyInterfaceStatistics data, response status code and response headers
    def global_infra_get_downlink_port_statistics_for_infra_segment_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_downlink_port_statistics_for_infra_segment ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.global_infra_get_downlink_port_statistics_for_infra_segment"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_downlink_port_statistics_for_infra_segment, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_downlink_port_statistics_for_infra_segment, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/gateway-interface-statistics'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_downlink_port_statistics_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [PolicyInterfaceStatisticsSummary]
    def global_infra_get_downlink_port_statistics_summary_for_infra_segment(segment_id, opts = {})
      data, _status_code, _headers = global_infra_get_downlink_port_statistics_summary_for_infra_segment_with_http_info(segment_id, opts)
      data
    end

    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [Array<(PolicyInterfaceStatisticsSummary, Fixnum, Hash)>] PolicyInterfaceStatisticsSummary data, response status code and response headers
    def global_infra_get_downlink_port_statistics_summary_for_infra_segment_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_downlink_port_statistics_summary_for_infra_segment ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.global_infra_get_downlink_port_statistics_summary_for_infra_segment"
      end
      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/gateway-interface-statistics/summary'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatisticsSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_downlink_port_statistics_summary_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from segment interface (downlink)
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def global_infra_get_infra_segment_interface_arp_table(segment_id, opts = {})
      data, _status_code, _headers = global_infra_get_infra_segment_interface_arp_table_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table from segment interface (downlink)
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def global_infra_get_infra_segment_interface_arp_table_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_infra_segment_interface_arp_table ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.global_infra_get_infra_segment_interface_arp_table"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_infra_segment_interface_arp_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_infra_segment_interface_arp_table, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/arp-table'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_infra_segment_interface_arp_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from segment interface (downlink) in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def global_infra_get_infra_segment_interface_arp_table_csv(segment_id, opts = {})
      data, _status_code, _headers = global_infra_get_infra_segment_interface_arp_table_csv_with_http_info(segment_id, opts)
      data
    end

    # Get ARP table from segment interface (downlink) in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def global_infra_get_infra_segment_interface_arp_table_csv_with_http_info(segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_infra_segment_interface_arp_table_csv ...'
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.global_infra_get_infra_segment_interface_arp_table_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_infra_segment_interface_arp_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_infra_segment_interface_arp_table_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/segments/{segment-id}/arp-table?format=csv'.sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_infra_segment_interface_arp_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get NAT Rule
    # Get NAT Rule from Tier-0 denoted by Tier-0 ID, under NAT section denoted by &lt;nat-id&gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PUT/PATCH API, the path returned in the GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param nat_rule_id Rule ID
    # @param [Hash] opts the optional parameters
    # @return [PolicyNatRule]
    def global_infra_get_policy_nat_rule_from_tier0(tier_0_id, nat_id, nat_rule_id, opts = {})
      data, _status_code, _headers = global_infra_get_policy_nat_rule_from_tier0_with_http_info(tier_0_id, nat_id, nat_rule_id, opts)
      data
    end

    # Get NAT Rule
    # Get NAT Rule from Tier-0 denoted by Tier-0 ID, under NAT section denoted by &amp;lt;nat-id&amp;gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PUT/PATCH API, the path returned in the GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param nat_rule_id Rule ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyNatRule, Fixnum, Hash)>] PolicyNatRule data, response status code and response headers
    def global_infra_get_policy_nat_rule_from_tier0_with_http_info(tier_0_id, nat_id, nat_rule_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_policy_nat_rule_from_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_policy_nat_rule_from_tier0"
      end
      # verify the required parameter 'nat_id' is set
      if @api_client.config.client_side_validation && nat_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_id' when calling Tier0GatewaysApi.global_infra_get_policy_nat_rule_from_tier0"
      end
      # verify the required parameter 'nat_rule_id' is set
      if @api_client.config.client_side_validation && nat_rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_rule_id' when calling Tier0GatewaysApi.global_infra_get_policy_nat_rule_from_tier0"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/nat/{nat-id}/nat-rules/{nat-rule-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'nat-id' + '}', nat_id.to_s).sub('{' + 'nat-rule-id' + '}', nat_rule_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyNatRule')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_policy_nat_rule_from_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a route map
    # Read a route map
    # @param tier_0_id 
    # @param route_map_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0RouteMap]
    def global_infra_get_route_map(tier_0_id, route_map_id, opts = {})
      data, _status_code, _headers = global_infra_get_route_map_with_http_info(tier_0_id, route_map_id, opts)
      data
    end

    # Read a route map
    # Read a route map
    # @param tier_0_id 
    # @param route_map_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0RouteMap, Fixnum, Hash)>] Tier0RouteMap data, response status code and response headers
    def global_infra_get_route_map_with_http_info(tier_0_id, route_map_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_route_map ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_route_map"
      end
      # verify the required parameter 'route_map_id' is set
      if @api_client.config.client_side_validation && route_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_map_id' when calling Tier0GatewaysApi.global_infra_get_route_map"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/route-maps/{route-map-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-map-id' + '}', route_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0RouteMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_route_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier-0 Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0  <br> This API is deprecated. Please use /infra/tier-0s/&lt;tier-0-id&gt;/arp-proxies 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [PolicyArpProxyTableListResult]
    def global_infra_get_tier0_arp_proxies(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_arp_proxies_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get Tier-0 Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0  &lt;br&gt; This API is deprecated. Please use /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/arp-proxies 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [Array<(PolicyArpProxyTableListResult, Fixnum, Hash)>] PolicyArpProxyTableListResult data, response status code and response headers
    def global_infra_get_tier0_arp_proxies_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_arp_proxies ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_arp_proxies"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_arp_proxies"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_arp_proxies, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_arp_proxies, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/arp-proxies'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyArpProxyTableListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_arp_proxies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor advertised routes
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled. The query parameter \"source=cached\" is not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRoutesListResult]
    def global_infra_get_tier0_bgp_neighbor_advertised_routes(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_bgp_neighbor_advertised_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get BGP neighbor advertised routes
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled. The query parameter \&quot;source&#x3D;cached\&quot; is not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRoutesListResult, Fixnum, Hash)>] BgpNeighborRoutesListResult data, response status code and response headers
    def global_infra_get_tier0_bgp_neighbor_advertised_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/advertised-routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_bgp_neighbor_advertised_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor advertised routes in CSV format
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled in CSV format. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRouteDetailsInCsvFormat]
    def global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get BGP neighbor advertised routes in CSV format
    # Returns routes advertised by BGP neighbor from all edge transport nodes on which this neighbor is currently enabled in CSV format. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRouteDetailsInCsvFormat, Fixnum, Hash)>] BgpNeighborRouteDetailsInCsvFormat data, response status code and response headers
    def global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/advertised-routes?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRouteDetailsInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_bgp_neighbor_advertised_routes_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routes learned by BGP neighbor
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRoutesListResult]
    def global_infra_get_tier0_bgp_neighbor_routes(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_bgp_neighbor_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get routes learned by BGP neighbor
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRoutesListResult, Fixnum, Hash)>] BgpNeighborRoutesListResult data, response status code and response headers
    def global_infra_get_tier0_bgp_neighbor_routes_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_bgp_neighbor_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routes learned by BGP neighbor in CSV format
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve (default to 1000)
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborRouteDetailsInCsvFormat]
    def global_infra_get_tier0_bgp_neighbor_routes_in_csv_format(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_bgp_neighbor_routes_in_csv_format_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Get routes learned by BGP neighbor in CSV format
    # Returns routes learned by BGP neighbor from all edge nodes on which this neighbor is currently enabled. Routes from all enforcement points are returned. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count Number of routes to retrieve
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborRouteDetailsInCsvFormat, Fixnum, Hash)>] BgpNeighborRouteDetailsInCsvFormat data, response status code and response headers
    def global_infra_get_tier0_bgp_neighbor_routes_in_csv_format_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes_in_csv_format ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes_in_csv_format"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes_in_csv_format"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes_in_csv_format"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes_in_csv_format, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes_in_csv_format, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbor_routes_in_csv_format, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}/routes?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborRouteDetailsInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_bgp_neighbor_routes_in_csv_format\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get BGP neighbor status for the Tier0
    # Returns the status of all the BGP neighbors for the given Tier0. To get BGP neighbor status for a particular enforcement point, parameter \"enforcement_point_path=&lt;enforcement_point_path&gt;\" needs to be specified. If an enforcement_point is unspecified, then bgp neighbor status for all enforcement points is fetched. To get BGP neighbors status for the logical router from particular edge node, parameter \"edge_path=&lt;edge_path&gt;\" needs to be specified. If an edge_path is unspecified, then bgp neighbor status for all edges is fetched. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [PolicyBgpNeighborsStatusListResult]
    def global_infra_get_tier0_bgp_neighbors_status(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_bgp_neighbors_status_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Get BGP neighbor status for the Tier0
    # Returns the status of all the BGP neighbors for the given Tier0. To get BGP neighbor status for a particular enforcement point, parameter \&quot;enforcement_point_path&#x3D;&amp;lt;enforcement_point_path&amp;gt;\&quot; needs to be specified. If an enforcement_point is unspecified, then bgp neighbor status for all enforcement points is fetched. To get BGP neighbors status for the logical router from particular edge node, parameter \&quot;edge_path&#x3D;&amp;lt;edge_path&amp;gt;\&quot; needs to be specified. If an edge_path is unspecified, then bgp neighbor status for all edges is fetched. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [Array<(PolicyBgpNeighborsStatusListResult, Fixnum, Hash)>] PolicyBgpNeighborsStatusListResult data, response status code and response headers
    def global_infra_get_tier0_bgp_neighbors_status_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbors_status ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbors_status"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbors_status"
      end
      if @api_client.config.client_side_validation && opts[:'bgp_neighbor_type'] && !['INTER_SR', 'USER'].include?(opts[:'bgp_neighbor_type'])
        fail ArgumentError, 'invalid value for "bgp_neighbor_type", must be one of INTER_SR, USER'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbors_status, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_bgp_neighbors_status, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      if @api_client.config.client_side_validation && opts[:'stats_type'] && !['DATAPATH_STATS'].include?(opts[:'stats_type'])
        fail ArgumentError, 'invalid value for "stats_type", must be one of DATAPATH_STATS'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/status'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'bgp_neighbor_type'] = opts[:'bgp_neighbor_type'] if !opts[:'bgp_neighbor_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'stats_type'] = opts[:'stats_type'] if !opts[:'stats_type'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyBgpNeighborsStatusListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_bgp_neighbors_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 DNS forwarder statistics
    # Get statistics of tier-0 DNS forwarder. - no enforcement point path specified: Statistics will be evaluated on each enforcement point. - {enforcement_point_path}: Statistics are evaluated only on the given enforcement point. 
    # @param tier_0_id Tier-0 id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [AggregateDNSForwarderStatistics]
    def global_infra_get_tier0_dns_forwarder_statistics(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_dns_forwarder_statistics_with_http_info(tier_0_id, opts)
      data
    end

    # Get tier-0 DNS forwarder statistics
    # Get statistics of tier-0 DNS forwarder. - no enforcement point path specified: Statistics will be evaluated on each enforcement point. - {enforcement_point_path}: Statistics are evaluated only on the given enforcement point. 
    # @param tier_0_id Tier-0 id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(AggregateDNSForwarderStatistics, Fixnum, Hash)>] AggregateDNSForwarderStatistics data, response status code and response headers
    def global_infra_get_tier0_dns_forwarder_statistics_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_dns_forwarder_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_dns_forwarder_statistics"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/dns-forwarder/statistics'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AggregateDNSForwarderStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_dns_forwarder_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get current status of tier-0 DNS forwarder
    # Get current status of tier-0 DNS forwarder. - no enforcement point path specified: Status will be evaluated on each enforcement point. - {enforcement_point_path}: Status will be evaluated only on the given enforcement point. 
    # @param tier_0_id Tier-0 id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [AggregateDNSForwarderStatus]
    def global_infra_get_tier0_dns_forwarder_status(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_dns_forwarder_status_with_http_info(tier_0_id, opts)
      data
    end

    # Get current status of tier-0 DNS forwarder
    # Get current status of tier-0 DNS forwarder. - no enforcement point path specified: Status will be evaluated on each enforcement point. - {enforcement_point_path}: Status will be evaluated only on the given enforcement point. 
    # @param tier_0_id Tier-0 id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(AggregateDNSForwarderStatus, Fixnum, Hash)>] AggregateDNSForwarderStatus data, response status code and response headers
    def global_infra_get_tier0_dns_forwarder_status_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_dns_forwarder_status ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_dns_forwarder_status"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/dns-forwarder/status'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AggregateDNSForwarderStatus')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_dns_forwarder_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get forwarding table from tier-0
    # Get forwarding table from tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RoutingTableListResult]
    def global_infra_get_tier0_forwarding_table(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_forwarding_table_with_http_info(tier_0_id, opts)
      data
    end

    # Get forwarding table from tier-0
    # Get forwarding table from tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RoutingTableListResult, Fixnum, Hash)>] RoutingTableListResult data, response status code and response headers
    def global_infra_get_tier0_forwarding_table_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_forwarding_table ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_forwarding_table"
      end
      if @api_client.config.client_side_validation && opts[:'component_type'] && !['DR_ROUTES'].include?(opts[:'component_type'])
        fail ArgumentError, 'invalid value for "component_type", must be one of DR_ROUTES'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_forwarding_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_forwarding_table, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'route_source'] && !['BGP', 'STATIC', 'CONNECTED', 'OSPF'].include?(opts[:'route_source'])
        fail ArgumentError, 'invalid value for "route_source", must be one of BGP, STATIC, CONNECTED, OSPF'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/forwarding-table'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'component_type'] = opts[:'component_type'] if !opts[:'component_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_id'] = opts[:'edge_id'] if !opts[:'edge_id'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'network_prefix'] = opts[:'network_prefix'] if !opts[:'network_prefix'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'route_source'] = opts[:'route_source'] if !opts[:'route_source'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RoutingTableListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_forwarding_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get forwarding table from tier-0 in CSV format
    # Get forwarding table from tier-0 gateway in CSV format. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GatewayRouteTableInCsvFormat]
    def global_infra_get_tier0_forwarding_table_csv(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_forwarding_table_csv_with_http_info(tier_0_id, opts)
      data
    end

    # Get forwarding table from tier-0 in CSV format
    # Get forwarding table from tier-0 gateway in CSV format. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GatewayRouteTableInCsvFormat, Fixnum, Hash)>] GatewayRouteTableInCsvFormat data, response status code and response headers
    def global_infra_get_tier0_forwarding_table_csv_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_forwarding_table_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_forwarding_table_csv"
      end
      if @api_client.config.client_side_validation && opts[:'component_type'] && !['DR_ROUTES'].include?(opts[:'component_type'])
        fail ArgumentError, 'invalid value for "component_type", must be one of DR_ROUTES'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_forwarding_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_forwarding_table_csv, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'route_source'] && !['BGP', 'STATIC', 'CONNECTED', 'OSPF'].include?(opts[:'route_source'])
        fail ArgumentError, 'invalid value for "route_source", must be one of BGP, STATIC, CONNECTED, OSPF'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/forwarding-table?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'component_type'] = opts[:'component_type'] if !opts[:'component_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_id'] = opts[:'edge_id'] if !opts[:'edge_id'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'network_prefix'] = opts[:'network_prefix'] if !opts[:'network_prefix'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'route_source'] = opts[:'route_source'] if !opts[:'route_source'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GatewayRouteTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_forwarding_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier-0 Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [PolicyArpProxyTableListResult]
    def global_infra_get_tier0_gateway_arp_proxies(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_gateway_arp_proxies_with_http_info(tier_0_id, opts)
      data
    end

    # Get Tier-0 Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [Array<(PolicyArpProxyTableListResult, Fixnum, Hash)>] PolicyArpProxyTableListResult data, response status code and response headers
    def global_infra_get_tier0_gateway_arp_proxies_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_gateway_arp_proxies ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_gateway_arp_proxies"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_gateway_arp_proxies, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_gateway_arp_proxies, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/arp-proxies'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyArpProxyTableListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_gateway_arp_proxies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier-0 Address Resolution Protocol Proxies in CSV format
    # Returns ARP proxy table for a tier-0 in CSV format 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [PolicyArpProxyTableCsvListResult]
    def global_infra_get_tier0_gateway_arp_proxies_in_csv(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_gateway_arp_proxies_in_csv_with_http_info(tier_0_id, opts)
      data
    end

    # Get Tier-0 Address Resolution Protocol Proxies in CSV format
    # Returns ARP proxy table for a tier-0 in CSV format 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [Array<(PolicyArpProxyTableCsvListResult, Fixnum, Hash)>] PolicyArpProxyTableCsvListResult data, response status code and response headers
    def global_infra_get_tier0_gateway_arp_proxies_in_csv_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_gateway_arp_proxies_in_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_gateway_arp_proxies_in_csv"
      end
      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/arp-proxies?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyArpProxyTableCsvListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_gateway_arp_proxies_in_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier-0 Interface Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0 interface. Interfaces can be of types - EXTERNAL and SERVICE. Interfaces of type LOOBACK and downlink are not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [PolicyArpProxyTableListResult]
    def global_infra_get_tier0_interface_arp_proxies(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_interface_arp_proxies_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get Tier-0 Interface Address Resolution Protocol Proxies
    # Returns ARP proxy table for a tier-0 interface. Interfaces can be of types - EXTERNAL and SERVICE. Interfaces of type LOOBACK and downlink are not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [Array<(PolicyArpProxyTableListResult, Fixnum, Hash)>] PolicyArpProxyTableListResult data, response status code and response headers
    def global_infra_get_tier0_interface_arp_proxies_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_interface_arp_proxies ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_proxies"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_proxies"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_proxies"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_proxies, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_proxies, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-proxy'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyArpProxyTableListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_interface_arp_proxies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier-0 Interface Address Resolution Protocol Proxies in CSV format
    # Returns ARP proxy table for a tier-0 interface in CSV format. Interfaces can be of types - EXTERNAL and SERVICE. Interfaces of type LOOBACK and downlink are not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [PolicyArpProxyTableCsvListResult]
    def global_infra_get_tier0_interface_arp_proxies_in_csv(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_interface_arp_proxies_in_csv_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get Tier-0 Interface Address Resolution Protocol Proxies in CSV format
    # Returns ARP proxy table for a tier-0 interface in CSV format. Interfaces can be of types - EXTERNAL and SERVICE. Interfaces of type LOOBACK and downlink are not supported. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @option opts [String] :transport_node_id TransportNode Id
    # @return [Array<(PolicyArpProxyTableCsvListResult, Fixnum, Hash)>] PolicyArpProxyTableCsvListResult data, response status code and response headers
    def global_infra_get_tier0_interface_arp_proxies_in_csv_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_interface_arp_proxies_in_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_proxies_in_csv"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_proxies_in_csv"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_proxies_in_csv"
      end
      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-proxy?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyArpProxyTableCsvListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_interface_arp_proxies_in_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from tier-0 interface
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the tier-0 interface, on a edge node if a query parameter \"edge_path=&lt;policy-edge-path&gt;\" is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def global_infra_get_tier0_interface_arp_table(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_interface_arp_table_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get ARP table from tier-0 interface
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the tier-0 interface, on a edge node if a query parameter \&quot;edge_path&#x3D;&amp;lt;policy-edge-path&amp;gt;\&quot; is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def global_infra_get_tier0_interface_arp_table_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-table'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_interface_arp_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from tier-0 interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 interface, on a edge node if a query parameter \"edge_path=&lt;policy-edge-path&gt;\" is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def global_infra_get_tier0_interface_arp_table_csv(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_interface_arp_table_csv_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get ARP table from tier-0 interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 interface, on a edge node if a query parameter \&quot;edge_path&#x3D;&amp;lt;policy-edge-path&amp;gt;\&quot; is given. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def global_infra_get_tier0_interface_arp_table_csv_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table_csv"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table_csv"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_arp_table_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/arp-table?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_interface_arp_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get DAD status by interface
    # Get tier-0 interface DAD state information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [InterfaceDADState]
    def global_infra_get_tier0_interface_dad_state(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_interface_dad_state_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get DAD status by interface
    # Get tier-0 interface DAD state information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(InterfaceDADState, Fixnum, Hash)>] InterfaceDADState data, response status code and response headers
    def global_infra_get_tier0_interface_dad_state_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_interface_dad_state ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_dad_state"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_dad_state"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_dad_state"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/dad-state'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceDADState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_interface_dad_state\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 interface group statistics information
    # Get tier-0 interface group statistics information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_group_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [PolicyInterfaceGroupStatistics]
    def global_infra_get_tier0_interface_group_statistics(tier_0_id, locale_service_id, interface_group_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_interface_group_statistics_with_http_info(tier_0_id, locale_service_id, interface_group_id, opts)
      data
    end

    # Get tier-0 interface group statistics information
    # Get tier-0 interface group statistics information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_group_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [Array<(PolicyInterfaceGroupStatistics, Fixnum, Hash)>] PolicyInterfaceGroupStatistics data, response status code and response headers
    def global_infra_get_tier0_interface_group_statistics_with_http_info(tier_0_id, locale_service_id, interface_group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_interface_group_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_group_statistics"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_group_statistics"
      end
      # verify the required parameter 'interface_group_id' is set
      if @api_client.config.client_side_validation && interface_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_group_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_group_statistics"
      end
      if @api_client.config.client_side_validation && opts[:'bgp_neighbor_type'] && !['INTER_SR', 'USER'].include?(opts[:'bgp_neighbor_type'])
        fail ArgumentError, 'invalid value for "bgp_neighbor_type", must be one of INTER_SR, USER'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_group_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_group_statistics, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      if @api_client.config.client_side_validation && opts[:'stats_type'] && !['DATAPATH_STATS'].include?(opts[:'stats_type'])
        fail ArgumentError, 'invalid value for "stats_type", must be one of DATAPATH_STATS'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interface-groups/{interface-group-id}/statistics'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-group-id' + '}', interface_group_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'bgp_neighbor_type'] = opts[:'bgp_neighbor_type'] if !opts[:'bgp_neighbor_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'stats_type'] = opts[:'stats_type'] if !opts[:'stats_type'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceGroupStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_interface_group_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 interface statistics information
    # Get tier-0 interface statistics information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [PolicyInterfaceStatistics]
    def global_infra_get_tier0_interface_statistics(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_interface_statistics_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get tier-0 interface statistics information
    # Get tier-0 interface statistics information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bgp_neighbor_type Bgp neighbor type
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :stats_type Segment statistics type
    # @option opts [String] :transport_node_id Transport Node Id
    # @return [Array<(PolicyInterfaceStatistics, Fixnum, Hash)>] PolicyInterfaceStatistics data, response status code and response headers
    def global_infra_get_tier0_interface_statistics_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_interface_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_statistics"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_statistics"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_statistics"
      end
      if @api_client.config.client_side_validation && opts[:'bgp_neighbor_type'] && !['INTER_SR', 'USER'].include?(opts[:'bgp_neighbor_type'])
        fail ArgumentError, 'invalid value for "bgp_neighbor_type", must be one of INTER_SR, USER'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_statistics, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      if @api_client.config.client_side_validation && opts[:'stats_type'] && !['DATAPATH_STATS'].include?(opts[:'stats_type'])
        fail ArgumentError, 'invalid value for "stats_type", must be one of DATAPATH_STATS'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/statistics'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'bgp_neighbor_type'] = opts[:'bgp_neighbor_type'] if !opts[:'bgp_neighbor_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'stats_type'] = opts[:'stats_type'] if !opts[:'stats_type'].nil?
      query_params[:'transport_node_id'] = opts[:'transport_node_id'] if !opts[:'transport_node_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_interface_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 interface statistics summary information
    # Get tier-0 interface statistics summary information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyInterfaceStatisticsSummary]
    def global_infra_get_tier0_interface_statistics_summary(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_interface_statistics_summary_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Get tier-0 interface statistics summary information
    # Get tier-0 interface statistics summary information. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyInterfaceStatisticsSummary, Fixnum, Hash)>] PolicyInterfaceStatisticsSummary data, response status code and response headers
    def global_infra_get_tier0_interface_statistics_summary_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_interface_statistics_summary ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_statistics_summary"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_statistics_summary"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_get_tier0_interface_statistics_summary"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_statistics_summary, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_interface_statistics_summary, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/statistics/summary'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatisticsSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_interface_statistics_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get total number of IPv4 or IPv6 routes on a Tier0
    # Get total number of IPv4 or IPv6 routes on a Tier0 
    # @param tier_0_id 
    # @param edge_path Policy path of edge node
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_child_vrf Count all the child VRF routes or not.
    # @return [Tier0NumberOfRoutesResult]
    def global_infra_get_tier0_number_of_routes(tier_0_id, edge_path, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_number_of_routes_with_http_info(tier_0_id, edge_path, opts)
      data
    end

    # Get total number of IPv4 or IPv6 routes on a Tier0
    # Get total number of IPv4 or IPv6 routes on a Tier0 
    # @param tier_0_id 
    # @param edge_path Policy path of edge node
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_child_vrf Count all the child VRF routes or not.
    # @return [Array<(Tier0NumberOfRoutesResult, Fixnum, Hash)>] Tier0NumberOfRoutesResult data, response status code and response headers
    def global_infra_get_tier0_number_of_routes_with_http_info(tier_0_id, edge_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_number_of_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_number_of_routes"
      end
      # verify the required parameter 'edge_path' is set
      if @api_client.config.client_side_validation && edge_path.nil?
        fail ArgumentError, "Missing the required parameter 'edge_path' when calling Tier0GatewaysApi.global_infra_get_tier0_number_of_routes"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/number-of-routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'edge_path'] = edge_path
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_child_vrf'] = opts[:'include_child_vrf'] if !opts[:'include_child_vrf'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0NumberOfRoutesResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_number_of_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 router link arp information
    # Get tier-0 interface arp information. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def global_infra_get_tier0_router_link_arp_table(tier_0_id, tier1_path, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_router_link_arp_table_with_http_info(tier_0_id, tier1_path, opts)
      data
    end

    # Get tier-0 router link arp information
    # Get tier-0 interface arp information. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def global_infra_get_tier0_router_link_arp_table_with_http_info(tier_0_id, tier1_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_router_link_arp_table ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_arp_table"
      end
      # verify the required parameter 'tier1_path' is set
      if @api_client.config.client_side_validation && tier1_path.nil?
        fail ArgumentError, "Missing the required parameter 'tier1_path' when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_arp_table"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_arp_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_arp_table, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/tier-1-interface/arp-table'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'tier1_path'] = tier1_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_router_link_arp_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from tier-0 router link interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 router link interface, on a edge node. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def global_infra_get_tier0_router_link_arp_table_csv(tier_0_id, tier1_path, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_router_link_arp_table_csv_with_http_info(tier_0_id, tier1_path, opts)
      data
    end

    # Get ARP table from tier-0 router link interface in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the tier-0 router link interface, on a edge node. The edge_path parameter is mandatory if the interface type is not EXTERNAL. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def global_infra_get_tier0_router_link_arp_table_csv_with_http_info(tier_0_id, tier1_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_router_link_arp_table_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_arp_table_csv"
      end
      # verify the required parameter 'tier1_path' is set
      if @api_client.config.client_side_validation && tier1_path.nil?
        fail ArgumentError, "Missing the required parameter 'tier1_path' when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_arp_table_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_arp_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_arp_table_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/tier-1-interface/arp-table?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'tier1_path'] = tier1_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_router_link_arp_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 router link statistics information
    # Get tier-0 router link statistics information for a given linked tier-1 interface. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyInterfaceStatistics]
    def global_infra_get_tier0_router_link_statistics(tier_0_id, tier1_path, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_router_link_statistics_with_http_info(tier_0_id, tier1_path, opts)
      data
    end

    # Get tier-0 router link statistics information
    # Get tier-0 router link statistics information for a given linked tier-1 interface. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyInterfaceStatistics, Fixnum, Hash)>] PolicyInterfaceStatistics data, response status code and response headers
    def global_infra_get_tier0_router_link_statistics_with_http_info(tier_0_id, tier1_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_router_link_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_statistics"
      end
      # verify the required parameter 'tier1_path' is set
      if @api_client.config.client_side_validation && tier1_path.nil?
        fail ArgumentError, "Missing the required parameter 'tier1_path' when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_statistics"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_statistics, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/tier-1-interface/statistics'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'tier1_path'] = tier1_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_router_link_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get tier-0 router link statistics summary information
    # Get tier-0 router link statistics summary information. In case tier 1 is A/A, and the edge cluster is not the response will have interface_policy_path and logical_router_port_id empty because all logical router  port stats are aggregated from all edge nodes. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyInterfaceStatisticsSummary]
    def global_infra_get_tier0_router_link_summary_statistics(tier_0_id, tier1_path, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_router_link_summary_statistics_with_http_info(tier_0_id, tier1_path, opts)
      data
    end

    # Get tier-0 router link statistics summary information
    # Get tier-0 router link statistics summary information. In case tier 1 is A/A, and the edge cluster is not the response will have interface_policy_path and logical_router_port_id empty because all logical router  port stats are aggregated from all edge nodes. 
    # @param tier_0_id 
    # @param tier1_path Policy path of tier1
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyInterfaceStatisticsSummary, Fixnum, Hash)>] PolicyInterfaceStatisticsSummary data, response status code and response headers
    def global_infra_get_tier0_router_link_summary_statistics_with_http_info(tier_0_id, tier1_path, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_router_link_summary_statistics ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_summary_statistics"
      end
      # verify the required parameter 'tier1_path' is set
      if @api_client.config.client_side_validation && tier1_path.nil?
        fail ArgumentError, "Missing the required parameter 'tier1_path' when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_summary_statistics"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_summary_statistics, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_router_link_summary_statistics, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/tier-1-interface/statistics/summary'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'tier1_path'] = tier1_path
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatisticsSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_router_link_summary_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routing table from tier-0
    # Get routing table from tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [RoutingTableListResult]
    def global_infra_get_tier0_routes(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_routes_with_http_info(tier_0_id, opts)
      data
    end

    # Get routing table from tier-0
    # Get routing table from tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(RoutingTableListResult, Fixnum, Hash)>] RoutingTableListResult data, response status code and response headers
    def global_infra_get_tier0_routes_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_routes"
      end
      if @api_client.config.client_side_validation && opts[:'component_type'] && !['DR_ROUTES'].include?(opts[:'component_type'])
        fail ArgumentError, 'invalid value for "component_type", must be one of DR_ROUTES'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_routes, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'route_source'] && !['BGP', 'STATIC', 'CONNECTED', 'OSPF'].include?(opts[:'route_source'])
        fail ArgumentError, 'invalid value for "route_source", must be one of BGP, STATIC, CONNECTED, OSPF'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/routing-table'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'component_type'] = opts[:'component_type'] if !opts[:'component_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_id'] = opts[:'edge_id'] if !opts[:'edge_id'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'network_prefix'] = opts[:'network_prefix'] if !opts[:'network_prefix'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'route_source'] = opts[:'route_source'] if !opts[:'route_source'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RoutingTableListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get routing table from tier-0 in CSV format
    # Get routing table from tier-0 gateway in CSV format. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [GatewayRouteTableInCsvFormat]
    def global_infra_get_tier0_routes_csv(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_routes_csv_with_http_info(tier_0_id, opts)
      data
    end

    # Get routing table from tier-0 in CSV format
    # Get routing table from tier-0 gateway in CSV format. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :component_type Define the DR routes.
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_id UUID of edge node
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :network_prefix IPAddress or CIDR Block
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [String] :route_source Filter routes based on the source from which route is learned
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(GatewayRouteTableInCsvFormat, Fixnum, Hash)>] GatewayRouteTableInCsvFormat data, response status code and response headers
    def global_infra_get_tier0_routes_csv_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_routes_csv ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_routes_csv"
      end
      if @api_client.config.client_side_validation && opts[:'component_type'] && !['DR_ROUTES'].include?(opts[:'component_type'])
        fail ArgumentError, 'invalid value for "component_type", must be one of DR_ROUTES'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_routes_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_routes_csv, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'route_source'] && !['BGP', 'STATIC', 'CONNECTED', 'OSPF'].include?(opts[:'route_source'])
        fail ArgumentError, 'invalid value for "route_source", must be one of BGP, STATIC, CONNECTED, OSPF'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/routing-table?format=csv'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'component_type'] = opts[:'component_type'] if !opts[:'component_type'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_id'] = opts[:'edge_id'] if !opts[:'edge_id'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'network_prefix'] = opts[:'network_prefix'] if !opts[:'network_prefix'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'route_source'] = opts[:'route_source'] if !opts[:'route_source'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GatewayRouteTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_routes_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Tier0 state
    # Returns 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :interface_path Interface path for interface specific state such as IPv6 DAD state
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :type Returns specific information based on the value specified.
    # @return [Tier0GatewayState]
    def global_infra_get_tier0_state(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier0_state_with_http_info(tier_0_id, opts)
      data
    end

    # Get Tier0 state
    # Returns 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :interface_path Interface path for interface specific state such as IPv6 DAD state
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @option opts [String] :source Data source type.
    # @option opts [String] :type Returns specific information based on the value specified.
    # @return [Array<(Tier0GatewayState, Fixnum, Hash)>] Tier0GatewayState data, response status code and response headers
    def global_infra_get_tier0_state_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier0_state ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_get_tier0_state"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_state, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_get_tier0_state, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      if @api_client.config.client_side_validation && opts[:'type'] && !['GATEWAY_STATE', 'GATEWAY_STATUS', 'IPV6_STATUS', 'RD_PER_EDGE_MAPPING'].include?(opts[:'type'])
        fail ArgumentError, 'invalid value for "type", must be one of GATEWAY_STATE, GATEWAY_STATUS, IPV6_STATUS, RD_PER_EDGE_MAPPING'
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/state'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'interface_path'] = opts[:'interface_path'] if !opts[:'interface_path'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?
      query_params[:'type'] = opts[:'type'] if !opts[:'type'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0GatewayState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier0_state\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get DAD status by interface
    # Get tier-1 interface DAD state information. 
    # @param tier_1_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [InterfaceDADState]
    def global_infra_get_tier1_interface_dad_state(tier_1_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = global_infra_get_tier1_interface_dad_state_with_http_info(tier_1_id, locale_service_id, interface_id, opts)
      data
    end

    # Get DAD status by interface
    # Get tier-1 interface DAD state information. 
    # @param tier_1_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(InterfaceDADState, Fixnum, Hash)>] InterfaceDADState data, response status code and response headers
    def global_infra_get_tier1_interface_dad_state_with_http_info(tier_1_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_get_tier1_interface_dad_state ...'
      end
      # verify the required parameter 'tier_1_id' is set
      if @api_client.config.client_side_validation && tier_1_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_1_id' when calling Tier0GatewaysApi.global_infra_get_tier1_interface_dad_state"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_get_tier1_interface_dad_state"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_get_tier1_interface_dad_state"
      end
      # resource path
      local_var_path = '/global-infra/tier-1s/{tier-1-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/dad-state'.sub('{' + 'tier-1-id' + '}', tier_1_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceDADState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_get_tier1_interface_dad_state\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List route maps
    # Paginated list of all route maps under a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0RouteMapListResult]
    def global_infra_list_all_route_maps(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_list_all_route_maps_with_http_info(tier_0_id, opts)
      data
    end

    # List route maps
    # Paginated list of all route maps under a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0RouteMapListResult, Fixnum, Hash)>] Tier0RouteMapListResult data, response status code and response headers
    def global_infra_list_all_route_maps_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_all_route_maps ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_all_route_maps"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_all_route_maps, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_all_route_maps, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/route-maps'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0RouteMapListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_all_route_maps\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List BGP neighbor configurations
    # Paginated list of all BGP neighbor configurations 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborConfigListResult]
    def global_infra_list_bgp_neighbor_configs(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = global_infra_list_bgp_neighbor_configs_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List BGP neighbor configurations
    # Paginated list of all BGP neighbor configurations 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborConfigListResult, Fixnum, Hash)>] BgpNeighborConfigListResult data, response status code and response headers
    def global_infra_list_bgp_neighbor_configs_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_bgp_neighbor_configs ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_bgp_neighbor_configs"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_list_bgp_neighbor_configs"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_bgp_neighbor_configs, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_bgp_neighbor_configs, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfigListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_bgp_neighbor_configs\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List BGP community lists
    # Paginated list of all community lists under a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [CommunityListListResult]
    def global_infra_list_community_list(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_list_community_list_with_http_info(tier_0_id, opts)
      data
    end

    # List BGP community lists
    # Paginated list of all community lists under a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(CommunityListListResult, Fixnum, Hash)>] CommunityListListResult data, response status code and response headers
    def global_infra_list_community_list_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_community_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_community_list"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_community_list, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_community_list, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/community-lists'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CommunityListListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_community_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Policy NAT types.
    # List all NAT sections under the given Tier-0 ID. For more details related to NAT section please refer to PolicyNAT schema. 
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyNatListResult]
    def global_infra_list_policy_nat_on_tier0(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_list_policy_nat_on_tier0_with_http_info(tier_0_id, opts)
      data
    end

    # List Policy NAT types.
    # List all NAT sections under the given Tier-0 ID. For more details related to NAT section please refer to PolicyNAT schema. 
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyNatListResult, Fixnum, Hash)>] PolicyNatListResult data, response status code and response headers
    def global_infra_list_policy_nat_on_tier0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_policy_nat_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_policy_nat_on_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_policy_nat_on_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_policy_nat_on_tier0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/nat'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyNatListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_policy_nat_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List NAT Rules
    # List NAT Rules from Tier-0 denoted by Tier-0 ID, under NAT section denoted by &lt;nat-id&gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PATCH/PUT API, the path returned in the GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyNatRuleListResult]
    def global_infra_list_policy_nat_rules_from_tier0(tier_0_id, nat_id, opts = {})
      data, _status_code, _headers = global_infra_list_policy_nat_rules_from_tier0_with_http_info(tier_0_id, nat_id, opts)
      data
    end

    # List NAT Rules
    # List NAT Rules from Tier-0 denoted by Tier-0 ID, under NAT section denoted by &amp;lt;nat-id&amp;gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PATCH/PUT API, the path returned in the GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyNatRuleListResult, Fixnum, Hash)>] PolicyNatRuleListResult data, response status code and response headers
    def global_infra_list_policy_nat_rules_from_tier0_with_http_info(tier_0_id, nat_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_policy_nat_rules_from_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_policy_nat_rules_from_tier0"
      end
      # verify the required parameter 'nat_id' is set
      if @api_client.config.client_side_validation && nat_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_id' when calling Tier0GatewaysApi.global_infra_list_policy_nat_rules_from_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_policy_nat_rules_from_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_policy_nat_rules_from_tier0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/nat/{nat-id}/nat-rules'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'nat-id' + '}', nat_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyNatRuleListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_policy_nat_rules_from_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List prefix lists
    # Paginated list of all prefix lists 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PrefixListResult]
    def global_infra_list_prefix_lists(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_list_prefix_lists_with_http_info(tier_0_id, opts)
      data
    end

    # List prefix lists
    # Paginated list of all prefix lists 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PrefixListResult, Fixnum, Hash)>] PrefixListResult data, response status code and response headers
    def global_infra_list_prefix_lists_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_prefix_lists ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_prefix_lists"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_prefix_lists, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_prefix_lists, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/prefix-lists'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PrefixListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_prefix_lists\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Service Interfaces
    # Paginated list of all Service Interfaces 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceInterfaceListResult]
    def global_infra_list_service_interfaces(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = global_infra_list_service_interfaces_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List Service Interfaces
    # Paginated list of all Service Interfaces 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceInterfaceListResult, Fixnum, Hash)>] ServiceInterfaceListResult data, response status code and response headers
    def global_infra_list_service_interfaces_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_service_interfaces ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_service_interfaces"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_list_service_interfaces"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_service_interfaces, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_service_interfaces, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-interfaces'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInterfaceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_service_interfaces\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List StaticRouteBfdPeers
    # Paginated list of all StaticRouteBfdPeers. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [StaticRouteBfdPeerListResult]
    def global_infra_list_static_route_bfd_peer(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_list_static_route_bfd_peer_with_http_info(tier_0_id, opts)
      data
    end

    # List StaticRouteBfdPeers
    # Paginated list of all StaticRouteBfdPeers. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(StaticRouteBfdPeerListResult, Fixnum, Hash)>] StaticRouteBfdPeerListResult data, response status code and response headers
    def global_infra_list_static_route_bfd_peer_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_static_route_bfd_peer ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_static_route_bfd_peer"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_static_route_bfd_peer, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_static_route_bfd_peer, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/static-routes/bfd-peers'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRouteBfdPeerListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_static_route_bfd_peer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0 Deployment maps
    # Paginated list of all Tier-0 Deployment Entries. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0DeploymentMapListResult]
    def global_infra_list_tier0_deployment_maps(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = global_infra_list_tier0_deployment_maps_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List Tier-0 Deployment maps
    # Paginated list of all Tier-0 Deployment Entries. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0DeploymentMapListResult, Fixnum, Hash)>] Tier0DeploymentMapListResult data, response status code and response headers
    def global_infra_list_tier0_deployment_maps_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_tier0_deployment_maps ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_tier0_deployment_maps"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_list_tier0_deployment_maps"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0_deployment_maps, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0_deployment_maps, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/tier-0-deployment-maps'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0DeploymentMapListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_tier0_deployment_maps\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0 Interfaces
    # Paginated list of all Tier-0 Interfaces 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0InterfaceListResult]
    def global_infra_list_tier0_interfaces(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = global_infra_list_tier0_interfaces_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List Tier-0 Interfaces
    # Paginated list of all Tier-0 Interfaces 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0InterfaceListResult, Fixnum, Hash)>] Tier0InterfaceListResult data, response status code and response headers
    def global_infra_list_tier0_interfaces_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_tier0_interfaces ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_tier0_interfaces"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_list_tier0_interfaces"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0_interfaces, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0_interfaces, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0InterfaceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_tier0_interfaces\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0 locale-services
    # Paginated list of all Tier-0 locale-services 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [LocaleServicesListResult]
    def global_infra_list_tier0_locale_services(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_list_tier0_locale_services_with_http_info(tier_0_id, opts)
      data
    end

    # List Tier-0 locale-services
    # Paginated list of all Tier-0 locale-services 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(LocaleServicesListResult, Fixnum, Hash)>] LocaleServicesListResult data, response status code and response headers
    def global_infra_list_tier0_locale_services_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_tier0_locale_services ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_tier0_locale_services"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0_locale_services, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0_locale_services, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'LocaleServicesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_tier0_locale_services\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0 Static Routes
    # Paginated list of all Tier-0 Static Routes 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [StaticRoutesListResult]
    def global_infra_list_tier0_static_routes(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_list_tier0_static_routes_with_http_info(tier_0_id, opts)
      data
    end

    # List Tier-0 Static Routes
    # Paginated list of all Tier-0 Static Routes 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(StaticRoutesListResult, Fixnum, Hash)>] StaticRoutesListResult data, response status code and response headers
    def global_infra_list_tier0_static_routes_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_tier0_static_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_list_tier0_static_routes"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0_static_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0_static_routes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/static-routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_tier0_static_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0s
    # Paginated list of all Tier-0s 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0ListResult]
    def global_infra_list_tier0s(opts = {})
      data, _status_code, _headers = global_infra_list_tier0s_with_http_info(opts)
      data
    end

    # List Tier-0s
    # Paginated list of all Tier-0s 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0ListResult, Fixnum, Hash)>] Tier0ListResult data, response status code and response headers
    def global_infra_list_tier0s_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_tier0s ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0s, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0s, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0ListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_tier0s\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0s
    # Paginated list of all Tier-0s 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0ListResult]
    def global_infra_list_tier0s_0(opts = {})
      data, _status_code, _headers = global_infra_list_tier0s_0_with_http_info(opts)
      data
    end

    # List Tier-0s
    # Paginated list of all Tier-0s 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0ListResult, Fixnum, Hash)>] Tier0ListResult data, response status code and response headers
    def global_infra_list_tier0s_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_list_tier0s_0 ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0s_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.global_infra_list_tier0s_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0ListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_list_tier0s_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Resolve a given address via the dns forwarder at Tier0
    # Query the nameserver for an ip-address or a FQDN of the given an address optionally using an specified DNS server. If the address is a fqdn, nslookup will resolve ip-address with it. If the address is an ip-address, do a reverse lookup and answer fqdn(s). If enforcement point is specified, then DNS forwarder nslookup answer will get fetched from specified enforcement point. Otherwise from all enforcement points. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :address IP address or FQDN for nslookup
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [AggregatePolicyDnsAnswer]
    def global_infra_lookup_address_via_tier0_dns_forwarder(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_lookup_address_via_tier0_dns_forwarder_with_http_info(tier_0_id, opts)
      data
    end

    # Resolve a given address via the dns forwarder at Tier0
    # Query the nameserver for an ip-address or a FQDN of the given an address optionally using an specified DNS server. If the address is a fqdn, nslookup will resolve ip-address with it. If the address is an ip-address, do a reverse lookup and answer fqdn(s). If enforcement point is specified, then DNS forwarder nslookup answer will get fetched from specified enforcement point. Otherwise from all enforcement points. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :address IP address or FQDN for nslookup
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(AggregatePolicyDnsAnswer, Fixnum, Hash)>] AggregatePolicyDnsAnswer data, response status code and response headers
    def global_infra_lookup_address_via_tier0_dns_forwarder_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_lookup_address_via_tier0_dns_forwarder ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_lookup_address_via_tier0_dns_forwarder"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/dns-forwarder/nslookup'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'address'] = opts[:'address'] if !opts[:'address'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AggregatePolicyDnsAnswer')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_lookup_address_via_tier0_dns_forwarder\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def global_infra_patch_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      global_infra_patch_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts)
      nil
    end

    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_patch_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_patch_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_patch_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_patch_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.global_infra_patch_bgp_neighbor_config"
      end
      # verify the required parameter 'bgp_neighbor_config' is set
      if @api_client.config.client_side_validation && bgp_neighbor_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_neighbor_config' when calling Tier0GatewaysApi.global_infra_patch_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_neighbor_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_patch_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update BGP routing config
    # If an BGP routing config not present, create BGP routing config. If it already exists, update the routing config. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def global_infra_patch_bgp_routing_config(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      global_infra_patch_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts)
      nil
    end

    # Create or update BGP routing config
    # If an BGP routing config not present, create BGP routing config. If it already exists, update the routing config. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_patch_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_patch_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_patch_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_patch_bgp_routing_config"
      end
      # verify the required parameter 'bgp_routing_config' is set
      if @api_client.config.client_side_validation && bgp_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_routing_config' when calling Tier0GatewaysApi.global_infra_patch_bgp_routing_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_patch_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP troubleshoot config
    # If BGP troubleshoot config is not present in BGP configuration, create a new BGP troubleshoot config with default value. If it already exists, update the BGP troubleshoot config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def global_infra_patch_bgp_troubleshoot_config(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts = {})
      global_infra_patch_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts)
      nil
    end

    # Create or update a BGP troubleshoot config
    # If BGP troubleshoot config is not present in BGP configuration, create a new BGP troubleshoot config with default value. If it already exists, update the BGP troubleshoot config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_patch_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_patch_bgp_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_patch_bgp_troubleshoot_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_patch_bgp_troubleshoot_config"
      end
      # verify the required parameter 'bgp_troubleshoot_config' is set
      if @api_client.config.client_side_validation && bgp_troubleshoot_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_troubleshoot_config' when calling Tier0GatewaysApi.global_infra_patch_bgp_troubleshoot_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_troubleshoot_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_patch_bgp_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a StaticRouteBfdTroubleshootConfig
    # If a StaticRouteBfdTroubleshootConfig is not already present, create a new StaticRouteBfdTroubleshootConfig. If it already exists, update the StaticRouteBfdTroubleshootConfig. This is a full replace. 
    # @param tier_0_id Tier-0 ID
    # @param static_route_bfd_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def global_infra_patch_static_route_bfd_troubleshoot_config(tier_0_id, static_route_bfd_troubleshoot_config, opts = {})
      global_infra_patch_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, static_route_bfd_troubleshoot_config, opts)
      nil
    end

    # Create or update a StaticRouteBfdTroubleshootConfig
    # If a StaticRouteBfdTroubleshootConfig is not already present, create a new StaticRouteBfdTroubleshootConfig. If it already exists, update the StaticRouteBfdTroubleshootConfig. This is a full replace. 
    # @param tier_0_id Tier-0 ID
    # @param static_route_bfd_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_patch_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, static_route_bfd_troubleshoot_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_patch_static_route_bfd_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_patch_static_route_bfd_troubleshoot_config"
      end
      # verify the required parameter 'static_route_bfd_troubleshoot_config' is set
      if @api_client.config.client_side_validation && static_route_bfd_troubleshoot_config.nil?
        fail ArgumentError, "Missing the required parameter 'static_route_bfd_troubleshoot_config' when calling Tier0GatewaysApi.global_infra_patch_static_route_bfd_troubleshoot_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_route_bfd_troubleshoot_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_patch_static_route_bfd_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0 interface
    # If an interface with the interface-id is not already present, create a new interface. If it already exists, update the interface for specified attributes. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param tier0_interface 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def global_infra_patch_tier0_interface(tier_0_id, locale_service_id, interface_id, tier0_interface, opts = {})
      global_infra_patch_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, tier0_interface, opts)
      nil
    end

    # Create or update a Tier-0 interface
    # If an interface with the interface-id is not already present, create a new interface. If it already exists, update the interface for specified attributes. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param tier0_interface 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_patch_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, tier0_interface, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_patch_tier0_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_patch_tier0_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_patch_tier0_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_patch_tier0_interface"
      end
      # verify the required parameter 'tier0_interface' is set
      if @api_client.config.client_side_validation && tier0_interface.nil?
        fail ArgumentError, "Missing the required parameter 'tier0_interface' when calling Tier0GatewaysApi.global_infra_patch_tier0_interface"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0_interface)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_patch_tier0_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Perform the specified DNS forwarder action
    # Perform the specified action for Tier0 DNS forwarder on specified enforcement point. 
    # @param tier_0_id 
    # @param action An action to be performed for DNS forwarder on EP
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed (default to /infra/sites/default/enforcement-points/default)
    # @return [nil]
    def global_infra_perform_ep_action_for_dns_forwarder_at_tier0(tier_0_id, action, opts = {})
      global_infra_perform_ep_action_for_dns_forwarder_at_tier0_with_http_info(tier_0_id, action, opts)
      nil
    end

    # Perform the specified DNS forwarder action
    # Perform the specified action for Tier0 DNS forwarder on specified enforcement point. 
    # @param tier_0_id 
    # @param action An action to be performed for DNS forwarder on EP
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def global_infra_perform_ep_action_for_dns_forwarder_at_tier0_with_http_info(tier_0_id, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_perform_ep_action_for_dns_forwarder_at_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_perform_ep_action_for_dns_forwarder_at_tier0"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling Tier0GatewaysApi.global_infra_perform_ep_action_for_dns_forwarder_at_tier0"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['clear_cache'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of clear_cache"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/dns-forwarder'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_perform_ep_action_for_dns_forwarder_at_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BGP neighbor config
    # Read BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @return [BgpNeighborConfig]
    def global_infra_read_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = global_infra_read_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Read BGP neighbor config
    # Read BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BgpNeighborConfig, Fixnum, Hash)>] BgpNeighborConfig data, response status code and response headers
    def global_infra_read_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_read_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.global_infra_read_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BGP routing config
    # Read BGP routing config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [BgpRoutingConfig]
    def global_infra_read_bgp_routing_config(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = global_infra_read_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read BGP routing config
    # Read BGP routing config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BgpRoutingConfig, Fixnum, Hash)>] BgpRoutingConfig data, response status code and response headers
    def global_infra_read_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_read_bgp_routing_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BGP troubleshoot config
    # Read BGP troubleshoot config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [BgpTroubleshootConfig]
    def global_infra_read_bgp_troubleshoot_config(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = global_infra_read_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read BGP troubleshoot config
    # Read BGP troubleshoot config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BgpTroubleshootConfig, Fixnum, Hash)>] BgpTroubleshootConfig data, response status code and response headers
    def global_infra_read_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_bgp_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_bgp_troubleshoot_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_read_bgp_troubleshoot_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpTroubleshootConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_bgp_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a BGP community list
    # Read a BGP community list
    # @param tier_0_id 
    # @param community_list_id 
    # @param [Hash] opts the optional parameters
    # @return [CommunityList]
    def global_infra_read_community_list(tier_0_id, community_list_id, opts = {})
      data, _status_code, _headers = global_infra_read_community_list_with_http_info(tier_0_id, community_list_id, opts)
      data
    end

    # Read a BGP community list
    # Read a BGP community list
    # @param tier_0_id 
    # @param community_list_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CommunityList, Fixnum, Hash)>] CommunityList data, response status code and response headers
    def global_infra_read_community_list_with_http_info(tier_0_id, community_list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_community_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_community_list"
      end
      # verify the required parameter 'community_list_id' is set
      if @api_client.config.client_side_validation && community_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'community_list_id' when calling Tier0GatewaysApi.global_infra_read_community_list"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/community-lists/{community-list-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'community-list-id' + '}', community_list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CommunityList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_community_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get the recent failed DNS queries
    # Return the given count of recent failed DNS queries from DNS forwarder. Since the DNS forwarder is running in Active/Standby HA mode on transport nodes, the given count of queries will be returned from each nodes. Hence the total queries returned could be doubled. If no count is specified, 100 recent failed queries are returned. If the recent failures is less than the given count, all the failures will be returned. The maximum count is 1,000. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count The count of the failed DNS queries (default to 100)
    # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed (default to /infra/sites/default/enforcement-points/default)
    # @return [PolicyDnsFailedQueries]
    def global_infra_read_failed_dns_queries_on_tier0(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_read_failed_dns_queries_on_tier0_with_http_info(tier_0_id, opts)
      data
    end

    # Get the recent failed DNS queries
    # Return the given count of recent failed DNS queries from DNS forwarder. Since the DNS forwarder is running in Active/Standby HA mode on transport nodes, the given count of queries will be returned from each nodes. Hence the total queries returned could be doubled. If no count is specified, 100 recent failed queries are returned. If the recent failures is less than the given count, all the failures will be returned. The maximum count is 1,000. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count The count of the failed DNS queries
    # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed
    # @return [Array<(PolicyDnsFailedQueries, Fixnum, Hash)>] PolicyDnsFailedQueries data, response status code and response headers
    def global_infra_read_failed_dns_queries_on_tier0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_failed_dns_queries_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_failed_dns_queries_on_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.global_infra_read_failed_dns_queries_on_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.global_infra_read_failed_dns_queries_on_tier0, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/dns-forwarder/failed-queries'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyDnsFailedQueries')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_failed_dns_queries_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read the DNS Forwarder for the given tier-0 instance
    # Read the DNS Forwarder for the given tier-0 instance
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @return [PolicyDnsForwarder]
    def global_infra_read_policy_dns_forwarder_on_tier0(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_read_policy_dns_forwarder_on_tier0_with_http_info(tier_0_id, opts)
      data
    end

    # Read the DNS Forwarder for the given tier-0 instance
    # Read the DNS Forwarder for the given tier-0 instance
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyDnsForwarder, Fixnum, Hash)>] PolicyDnsForwarder data, response status code and response headers
    def global_infra_read_policy_dns_forwarder_on_tier0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_policy_dns_forwarder_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_policy_dns_forwarder_on_tier0"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/dns-forwarder'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyDnsForwarder')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_policy_dns_forwarder_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a prefix list
    # Read a prefix list
    # @param tier_0_id 
    # @param prefix_list_id 
    # @param [Hash] opts the optional parameters
    # @return [PrefixList]
    def global_infra_read_prefix_list(tier_0_id, prefix_list_id, opts = {})
      data, _status_code, _headers = global_infra_read_prefix_list_with_http_info(tier_0_id, prefix_list_id, opts)
      data
    end

    # Read a prefix list
    # Read a prefix list
    # @param tier_0_id 
    # @param prefix_list_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PrefixList, Fixnum, Hash)>] PrefixList data, response status code and response headers
    def global_infra_read_prefix_list_with_http_info(tier_0_id, prefix_list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_prefix_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_prefix_list"
      end
      # verify the required parameter 'prefix_list_id' is set
      if @api_client.config.client_side_validation && prefix_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'prefix_list_id' when calling Tier0GatewaysApi.global_infra_read_prefix_list"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/prefix-lists/{prefix-list-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'prefix-list-id' + '}', prefix_list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PrefixList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_prefix_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read service interface
    # Read service interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @return [ServiceInterface]
    def global_infra_read_service_interface(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = global_infra_read_service_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Read service interface
    # Read service interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceInterface, Fixnum, Hash)>] ServiceInterface data, response status code and response headers
    def global_infra_read_service_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_service_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_service_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_read_service_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_read_service_interface"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInterface')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_service_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a StaticRouteBfdPeer
    # Read a StaticRouteBfdPeer with the bfd-peer-id. 
    # @param tier_0_id Tier-0 ID
    # @param bfd_peer_id BFD peer ID
    # @param [Hash] opts the optional parameters
    # @return [StaticRouteBfdPeer]
    def global_infra_read_static_route_bfd_peer(tier_0_id, bfd_peer_id, opts = {})
      data, _status_code, _headers = global_infra_read_static_route_bfd_peer_with_http_info(tier_0_id, bfd_peer_id, opts)
      data
    end

    # Read a StaticRouteBfdPeer
    # Read a StaticRouteBfdPeer with the bfd-peer-id. 
    # @param tier_0_id Tier-0 ID
    # @param bfd_peer_id BFD peer ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticRouteBfdPeer, Fixnum, Hash)>] StaticRouteBfdPeer data, response status code and response headers
    def global_infra_read_static_route_bfd_peer_with_http_info(tier_0_id, bfd_peer_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_static_route_bfd_peer ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_static_route_bfd_peer"
      end
      # verify the required parameter 'bfd_peer_id' is set
      if @api_client.config.client_side_validation && bfd_peer_id.nil?
        fail ArgumentError, "Missing the required parameter 'bfd_peer_id' when calling Tier0GatewaysApi.global_infra_read_static_route_bfd_peer"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/{bfd-peer-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'bfd-peer-id' + '}', bfd_peer_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRouteBfdPeer')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_static_route_bfd_peer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a StaticRouteBfdTroubleshootConfig
    # Read a StaticRouteBfdTroubleshootConfig 
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @return [StaticRouteBfdTroubleshootConfig]
    def global_infra_read_static_route_bfd_troubleshoot_config(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_read_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, opts)
      data
    end

    # Read a StaticRouteBfdTroubleshootConfig
    # Read a StaticRouteBfdTroubleshootConfig 
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticRouteBfdTroubleshootConfig, Fixnum, Hash)>] StaticRouteBfdTroubleshootConfig data, response status code and response headers
    def global_infra_read_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_static_route_bfd_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_static_route_bfd_troubleshoot_config"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRouteBfdTroubleshootConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_static_route_bfd_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0
    # Read Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0]
    def global_infra_read_tier0(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_read_tier0_with_http_info(tier_0_id, opts)
      data
    end

    # Read Tier-0
    # Read Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0, Fixnum, Hash)>] Tier0 data, response status code and response headers
    def global_infra_read_tier0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_tier0"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0
    # Read Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0]
    def global_infra_read_tier0_0(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_read_tier0_0_with_http_info(tier_0_id, opts)
      data
    end

    # Read Tier-0
    # Read Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0, Fixnum, Hash)>] Tier0 data, response status code and response headers
    def global_infra_read_tier0_0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_tier0_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_tier0_0"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_tier0_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a Tier-0 Deployment Map
    # Read a Tier-0 Deployment Map 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param tier_0_deployment_map_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0DeploymentMap]
    def global_infra_read_tier0_deployment_map(tier_0_id, locale_service_id, tier_0_deployment_map_id, opts = {})
      data, _status_code, _headers = global_infra_read_tier0_deployment_map_with_http_info(tier_0_id, locale_service_id, tier_0_deployment_map_id, opts)
      data
    end

    # Read a Tier-0 Deployment Map
    # Read a Tier-0 Deployment Map 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param tier_0_deployment_map_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0DeploymentMap, Fixnum, Hash)>] Tier0DeploymentMap data, response status code and response headers
    def global_infra_read_tier0_deployment_map_with_http_info(tier_0_id, locale_service_id, tier_0_deployment_map_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_tier0_deployment_map ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_tier0_deployment_map"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_read_tier0_deployment_map"
      end
      # verify the required parameter 'tier_0_deployment_map_id' is set
      if @api_client.config.client_side_validation && tier_0_deployment_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_deployment_map_id' when calling Tier0GatewaysApi.global_infra_read_tier0_deployment_map"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/tier-0-deployment-maps/{tier-0-deployment-map-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'tier-0-deployment-map-id' + '}', tier_0_deployment_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0DeploymentMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_tier0_deployment_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0 interface
    # Read Tier-0 interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0Interface]
    def global_infra_read_tier0_interface(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = global_infra_read_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Read Tier-0 interface
    # Read Tier-0 interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0Interface, Fixnum, Hash)>] Tier0Interface data, response status code and response headers
    def global_infra_read_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_tier0_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_tier0_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.global_infra_read_tier0_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.global_infra_read_tier0_interface"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0Interface')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_tier0_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0 locale-services
    # Read Tier-0 locale-services
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @return [LocaleServices]
    def global_infra_read_tier0_locale_services(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = global_infra_read_tier0_locale_services_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Read Tier-0 locale-services
    # Read Tier-0 locale-services
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(LocaleServices, Fixnum, Hash)>] LocaleServices data, response status code and response headers
    def global_infra_read_tier0_locale_services_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_tier0_locale_services ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_tier0_locale_services"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.global_infra_read_tier0_locale_services"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'LocaleServices')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_tier0_locale_services\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0 static routes
    # Read Tier-0 static routes
    # @param tier_0_id 
    # @param route_id 
    # @param [Hash] opts the optional parameters
    # @return [StaticRoutes]
    def global_infra_read_tier0_static_routes(tier_0_id, route_id, opts = {})
      data, _status_code, _headers = global_infra_read_tier0_static_routes_with_http_info(tier_0_id, route_id, opts)
      data
    end

    # Read Tier-0 static routes
    # Read Tier-0 static routes
    # @param tier_0_id 
    # @param route_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticRoutes, Fixnum, Hash)>] StaticRoutes data, response status code and response headers
    def global_infra_read_tier0_static_routes_with_http_info(tier_0_id, route_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_read_tier0_static_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_read_tier0_static_routes"
      end
      # verify the required parameter 'route_id' is set
      if @api_client.config.client_side_validation && route_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_id' when calling Tier0GatewaysApi.global_infra_read_tier0_static_routes"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/static-routes/{route-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-id' + '}', route_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRoutes')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_read_tier0_static_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get list of gateway policies with rules that belong to the specific Tier-0 logical router. 
    # Get filtered view of gateway rules associated with the Tier-0. The gateay policies are returned in the order of category and precedence. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [GatewayPolicyListResult]
    def global_infra_view_tier0_gateway_firewall(tier_0_id, opts = {})
      data, _status_code, _headers = global_infra_view_tier0_gateway_firewall_with_http_info(tier_0_id, opts)
      data
    end

    # Get list of gateway policies with rules that belong to the specific Tier-0 logical router. 
    # Get filtered view of gateway rules associated with the Tier-0. The gateay policies are returned in the order of category and precedence. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GatewayPolicyListResult, Fixnum, Hash)>] GatewayPolicyListResult data, response status code and response headers
    def global_infra_view_tier0_gateway_firewall_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_view_tier0_gateway_firewall ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_view_tier0_gateway_firewall"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/gateway-firewall'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GatewayPolicyListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_view_tier0_gateway_firewall\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get list of gateway policies with rules that belong to the specific Tier-0 LocalServices. 
    # Get filtered view of Gateway Firewall rules associated with the Tier-0 Locale Services. The gateway policies are returned in the order of category and sequence number. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @return [GatewayPolicyListResult]
    def global_infra_view_tier0_locale_services_gateway_firewall(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = global_infra_view_tier0_locale_services_gateway_firewall_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Get list of gateway policies with rules that belong to the specific Tier-0 LocalServices. 
    # Get filtered view of Gateway Firewall rules associated with the Tier-0 Locale Services. The gateway policies are returned in the order of category and sequence number. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GatewayPolicyListResult, Fixnum, Hash)>] GatewayPolicyListResult data, response status code and response headers
    def global_infra_view_tier0_locale_services_gateway_firewall_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.global_infra_view_tier0_locale_services_gateway_firewall ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.global_infra_view_tier0_locale_services_gateway_firewall"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.global_infra_view_tier0_locale_services_gateway_firewall"
      end
      # resource path
      local_var_path = '/global-infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/gateway-firewall'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GatewayPolicyListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#global_infra_view_tier0_locale_services_gateway_firewall\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List route maps
    # Paginated list of all route maps under a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0RouteMapListResult]
    def list_all_route_maps(tier_0_id, opts = {})
      data, _status_code, _headers = list_all_route_maps_with_http_info(tier_0_id, opts)
      data
    end

    # List route maps
    # Paginated list of all route maps under a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0RouteMapListResult, Fixnum, Hash)>] Tier0RouteMapListResult data, response status code and response headers
    def list_all_route_maps_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_all_route_maps ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_all_route_maps"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_all_route_maps, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_all_route_maps, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/route-maps'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0RouteMapListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_all_route_maps\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List BGP neighbor configurations
    # Paginated list of all BGP neighbor configurations 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [BgpNeighborConfigListResult]
    def list_bgp_neighbor_configs(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_bgp_neighbor_configs_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List BGP neighbor configurations
    # Paginated list of all BGP neighbor configurations 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(BgpNeighborConfigListResult, Fixnum, Hash)>] BgpNeighborConfigListResult data, response status code and response headers
    def list_bgp_neighbor_configs_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_bgp_neighbor_configs ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_bgp_neighbor_configs"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.list_bgp_neighbor_configs"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_bgp_neighbor_configs, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_bgp_neighbor_configs, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfigListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_bgp_neighbor_configs\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read all BYOD service instance objects under a tier-0
    # Read all BYOD service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ByodPolicyServiceInstanceListResult]
    def list_byod_policy_service_instances_for_tier0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_byod_policy_service_instances_for_tier0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read all BYOD service instance objects under a tier-0
    # Read all BYOD service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ByodPolicyServiceInstanceListResult, Fixnum, Hash)>] ByodPolicyServiceInstanceListResult data, response status code and response headers
    def list_byod_policy_service_instances_for_tier0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_byod_policy_service_instances_for_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_byod_policy_service_instances_for_tier0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.list_byod_policy_service_instances_for_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_byod_policy_service_instances_for_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_byod_policy_service_instances_for_tier0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ByodPolicyServiceInstanceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_byod_policy_service_instances_for_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List BGP community lists
    # Paginated list of all community lists under a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [CommunityListListResult]
    def list_community_list(tier_0_id, opts = {})
      data, _status_code, _headers = list_community_list_with_http_info(tier_0_id, opts)
      data
    end

    # List BGP community lists
    # Paginated list of all community lists under a tier-0 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(CommunityListListResult, Fixnum, Hash)>] CommunityListListResult data, response status code and response headers
    def list_community_list_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_community_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_community_list"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_community_list, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_community_list, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/community-lists'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CommunityListListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_community_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List evpn tunnel endpoint configuration
    # List all evpn tunnel endpoint configuration. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [EvpnTunnelEndpointConfigListResult]
    def list_evpn_tunnel_endpoint_config(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = list_evpn_tunnel_endpoint_config_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # List evpn tunnel endpoint configuration
    # List all evpn tunnel endpoint configuration. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(EvpnTunnelEndpointConfigListResult, Fixnum, Hash)>] EvpnTunnelEndpointConfigListResult data, response status code and response headers
    def list_evpn_tunnel_endpoint_config_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_evpn_tunnel_endpoint_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.list_evpn_tunnel_endpoint_config"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_evpn_tunnel_endpoint_config, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_evpn_tunnel_endpoint_config, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/evpn-tunnel-endpoints'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EvpnTunnelEndpointConfigListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_evpn_tunnel_endpoint_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List L3Vpns
    # Paginated list of L3Vpns. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions to list all IPSecVpnSessions. - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints to list all IPSecVpnLocalEndpoints. - GET /infra/ipsec-vpn-tunnel-profiles to list all IPSecVpnTunnelProfiles. - GET /infra/ipsec-vpn-ike-profiles to list all IPSecVpnIkeProfiles. - GET /infra/ipsec-vpn-dpd-profiles to list all IPSecVpnDpdProfiles. If used, this deprecated API will only return L3Vpns that were created through the deprecated PATCH and PUT /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/l3vpns/&lt;l3vpn-id&gt; APIs. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :l3vpn_session Resource type of L3Vpn Session
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [L3VpnListResult]
    def list_l3_vpns(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_l3_vpns_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List L3Vpns
    # Paginated list of L3Vpns. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/   default/sessions to list all IPSecVpnSessions. - GET /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/   default/local-endpoints to list all IPSecVpnLocalEndpoints. - GET /infra/ipsec-vpn-tunnel-profiles to list all IPSecVpnTunnelProfiles. - GET /infra/ipsec-vpn-ike-profiles to list all IPSecVpnIkeProfiles. - GET /infra/ipsec-vpn-dpd-profiles to list all IPSecVpnDpdProfiles. If used, this deprecated API will only return L3Vpns that were created through the deprecated PATCH and PUT /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/l3vpns/&amp;lt;l3vpn-id&amp;gt; APIs. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [String] :l3vpn_session Resource type of L3Vpn Session
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(L3VpnListResult, Fixnum, Hash)>] L3VpnListResult data, response status code and response headers
    def list_l3_vpns_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_l3_vpns ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_l3_vpns"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.list_l3_vpns"
      end
      if @api_client.config.client_side_validation && opts[:'l3vpn_session'] && !['PolicyBasedL3VpnSession', 'RouteBasedL3VpnSession'].include?(opts[:'l3vpn_session'])
        fail ArgumentError, 'invalid value for "l3vpn_session", must be one of PolicyBasedL3VpnSession, RouteBasedL3VpnSession'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_l3_vpns, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_l3_vpns, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'l3vpn_session'] = opts[:'l3vpn_session'] if !opts[:'l3vpn_session'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3VpnListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_l3_vpns\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List inter-vrf routing configurations
    # List all inter-vrf routing configurations.
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyInterVrfRoutingConfigListResult]
    def list_policy_inter_vrf_routing_config(tier_0_id, opts = {})
      data, _status_code, _headers = list_policy_inter_vrf_routing_config_with_http_info(tier_0_id, opts)
      data
    end

    # List inter-vrf routing configurations
    # List all inter-vrf routing configurations.
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyInterVrfRoutingConfigListResult, Fixnum, Hash)>] PolicyInterVrfRoutingConfigListResult data, response status code and response headers
    def list_policy_inter_vrf_routing_config_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_policy_inter_vrf_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_policy_inter_vrf_routing_config"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_policy_inter_vrf_routing_config, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_policy_inter_vrf_routing_config, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/inter-vrf-routing'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterVrfRoutingConfigListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_policy_inter_vrf_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Policy NAT types.
    # List all NAT sections under the given Tier-0 ID. For more details related to NAT section please refer to PolicyNAT schema. 
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyNatListResult]
    def list_policy_nat_on_tier0(tier_0_id, opts = {})
      data, _status_code, _headers = list_policy_nat_on_tier0_with_http_info(tier_0_id, opts)
      data
    end

    # List Policy NAT types.
    # List all NAT sections under the given Tier-0 ID. For more details related to NAT section please refer to PolicyNAT schema. 
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyNatListResult, Fixnum, Hash)>] PolicyNatListResult data, response status code and response headers
    def list_policy_nat_on_tier0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_policy_nat_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_policy_nat_on_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_policy_nat_on_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_policy_nat_on_tier0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/nat'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyNatListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_policy_nat_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List NAT Rules
    # List NAT Rules from Tier-0 denoted by Tier-0 ID, under NAT section denoted by &lt;nat-id&gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PATCH/PUT API, the path returned in the GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyNatRuleListResult]
    def list_policy_nat_rules_from_tier0(tier_0_id, nat_id, opts = {})
      data, _status_code, _headers = list_policy_nat_rules_from_tier0_with_http_info(tier_0_id, nat_id, opts)
      data
    end

    # List NAT Rules
    # List NAT Rules from Tier-0 denoted by Tier-0 ID, under NAT section denoted by &amp;lt;nat-id&amp;gt;. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PATCH/PUT API, the path returned in the GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyNatRuleListResult, Fixnum, Hash)>] PolicyNatRuleListResult data, response status code and response headers
    def list_policy_nat_rules_from_tier0_with_http_info(tier_0_id, nat_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_policy_nat_rules_from_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_policy_nat_rules_from_tier0"
      end
      # verify the required parameter 'nat_id' is set
      if @api_client.config.client_side_validation && nat_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_id' when calling Tier0GatewaysApi.list_policy_nat_rules_from_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_policy_nat_rules_from_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_policy_nat_rules_from_tier0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/nat/{nat-id}/nat-rules'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'nat-id' + '}', nat_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyNatRuleListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_policy_nat_rules_from_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List OSPF area configurations
    # List all OSPF area configurations. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [OspfAreaConfigListResult]
    def list_policy_ospf_area_config(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_policy_ospf_area_config_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List OSPF area configurations
    # List all OSPF area configurations. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(OspfAreaConfigListResult, Fixnum, Hash)>] OspfAreaConfigListResult data, response status code and response headers
    def list_policy_ospf_area_config_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_policy_ospf_area_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_policy_ospf_area_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.list_policy_ospf_area_config"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_policy_ospf_area_config, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_policy_ospf_area_config, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf/areas'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfAreaConfigListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_policy_ospf_area_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all service instance endpoint
    # List all service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceInstanceEndpointListResult]
    def list_policy_service_instance_endpoints(tier_0_id, locale_service_id, service_instance_id, opts = {})
      data, _status_code, _headers = list_policy_service_instance_endpoints_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      data
    end

    # List all service instance endpoint
    # List all service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceInstanceEndpointListResult, Fixnum, Hash)>] ServiceInstanceEndpointListResult data, response status code and response headers
    def list_policy_service_instance_endpoints_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_policy_service_instance_endpoints ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_policy_service_instance_endpoints"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.list_policy_service_instance_endpoints"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.list_policy_service_instance_endpoints"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_policy_service_instance_endpoints, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_policy_service_instance_endpoints, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInstanceEndpointListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_policy_service_instance_endpoints\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List prefix lists
    # Paginated list of all prefix lists 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PrefixListResult]
    def list_prefix_lists(tier_0_id, opts = {})
      data, _status_code, _headers = list_prefix_lists_with_http_info(tier_0_id, opts)
      data
    end

    # List prefix lists
    # Paginated list of all prefix lists 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PrefixListResult, Fixnum, Hash)>] PrefixListResult data, response status code and response headers
    def list_prefix_lists_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_prefix_lists ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_prefix_lists"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_prefix_lists, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_prefix_lists, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/prefix-lists'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PrefixListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_prefix_lists\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Service Interfaces
    # Paginated list of all Service Interfaces 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [ServiceInterfaceListResult]
    def list_service_interfaces(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_service_interfaces_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List Service Interfaces
    # Paginated list of all Service Interfaces 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(ServiceInterfaceListResult, Fixnum, Hash)>] ServiceInterfaceListResult data, response status code and response headers
    def list_service_interfaces_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_service_interfaces ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_service_interfaces"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.list_service_interfaces"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_service_interfaces, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_service_interfaces, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-interfaces'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInterfaceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_service_interfaces\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List StaticRouteBfdPeers
    # Paginated list of all StaticRouteBfdPeers. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [StaticRouteBfdPeerListResult]
    def list_static_route_bfd_peer(tier_0_id, opts = {})
      data, _status_code, _headers = list_static_route_bfd_peer_with_http_info(tier_0_id, opts)
      data
    end

    # List StaticRouteBfdPeers
    # Paginated list of all StaticRouteBfdPeers. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(StaticRouteBfdPeerListResult, Fixnum, Hash)>] StaticRouteBfdPeerListResult data, response status code and response headers
    def list_static_route_bfd_peer_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_static_route_bfd_peer ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_static_route_bfd_peer"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_static_route_bfd_peer, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_static_route_bfd_peer, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/bfd-peers'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRouteBfdPeerListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_static_route_bfd_peer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0 Deployment maps
    # Paginated list of all Tier-0 Deployment Entries. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0DeploymentMapListResult]
    def list_tier0_deployment_maps(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_tier0_deployment_maps_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List Tier-0 Deployment maps
    # Paginated list of all Tier-0 Deployment Entries. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0DeploymentMapListResult, Fixnum, Hash)>] Tier0DeploymentMapListResult data, response status code and response headers
    def list_tier0_deployment_maps_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_tier0_deployment_maps ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_tier0_deployment_maps"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.list_tier0_deployment_maps"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0_deployment_maps, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0_deployment_maps, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/tier-0-deployment-maps'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0DeploymentMapListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_tier0_deployment_maps\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0 Interface groups
    # Paginated list of all Tier-0 Interface groups under locale service. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0InterfaceGroupListResult]
    def list_tier0_interface_group(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_tier0_interface_group_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List Tier-0 Interface groups
    # Paginated list of all Tier-0 Interface groups under locale service. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0InterfaceGroupListResult, Fixnum, Hash)>] Tier0InterfaceGroupListResult data, response status code and response headers
    def list_tier0_interface_group_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_tier0_interface_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_tier0_interface_group"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.list_tier0_interface_group"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0_interface_group, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0_interface_group, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interface-groups'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0InterfaceGroupListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_tier0_interface_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0 Interfaces
    # Paginated list of all Tier-0 Interfaces 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0InterfaceListResult]
    def list_tier0_interfaces(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_tier0_interfaces_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List Tier-0 Interfaces
    # Paginated list of all Tier-0 Interfaces 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0InterfaceListResult, Fixnum, Hash)>] Tier0InterfaceListResult data, response status code and response headers
    def list_tier0_interfaces_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_tier0_interfaces ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_tier0_interfaces"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.list_tier0_interfaces"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0_interfaces, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0_interfaces, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0InterfaceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_tier0_interfaces\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0 locale-services
    # Paginated list of all Tier-0 locale-services 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [LocaleServicesListResult]
    def list_tier0_locale_services(tier_0_id, opts = {})
      data, _status_code, _headers = list_tier0_locale_services_with_http_info(tier_0_id, opts)
      data
    end

    # List Tier-0 locale-services
    # Paginated list of all Tier-0 locale-services 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(LocaleServicesListResult, Fixnum, Hash)>] LocaleServicesListResult data, response status code and response headers
    def list_tier0_locale_services_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_tier0_locale_services ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_tier0_locale_services"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0_locale_services, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0_locale_services, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'LocaleServicesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_tier0_locale_services\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0 Static Routes
    # Paginated list of all Tier-0 Static Routes 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [StaticRoutesListResult]
    def list_tier0_static_routes(tier_0_id, opts = {})
      data, _status_code, _headers = list_tier0_static_routes_with_http_info(tier_0_id, opts)
      data
    end

    # List Tier-0 Static Routes
    # Paginated list of all Tier-0 Static Routes 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(StaticRoutesListResult, Fixnum, Hash)>] StaticRoutesListResult data, response status code and response headers
    def list_tier0_static_routes_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_tier0_static_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_tier0_static_routes"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0_static_routes, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0_static_routes, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRoutesListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_tier0_static_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0s
    # Paginated list of all Tier-0s 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0ListResult]
    def list_tier0s(opts = {})
      data, _status_code, _headers = list_tier0s_with_http_info(opts)
      data
    end

    # List Tier-0s
    # Paginated list of all Tier-0s 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0ListResult, Fixnum, Hash)>] Tier0ListResult data, response status code and response headers
    def list_tier0s_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_tier0s ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0s, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0s, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0ListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_tier0s\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tier-0s
    # Paginated list of all Tier-0s 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Tier0ListResult]
    def list_tier0s_0(opts = {})
      data, _status_code, _headers = list_tier0s_0_with_http_info(opts)
      data
    end

    # List Tier-0s
    # Paginated list of all Tier-0s 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(Tier0ListResult, Fixnum, Hash)>] Tier0ListResult data, response status code and response headers
    def list_tier0s_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_tier0s_0 ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0s_0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tier0s_0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s'

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0ListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_tier0s_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Tunnel
    # List all policy tunnels(GRE as of now)
    # @param tier_0_id tier0 id
    # @param locale_svc_id locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyTunnelListResult]
    def list_tunnel(tier_0_id, locale_svc_id, opts = {})
      data, _status_code, _headers = list_tunnel_with_http_info(tier_0_id, locale_svc_id, opts)
      data
    end

    # List Tunnel
    # List all policy tunnels(GRE as of now)
    # @param tier_0_id tier0 id
    # @param locale_svc_id locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyTunnelListResult, Fixnum, Hash)>] PolicyTunnelListResult data, response status code and response headers
    def list_tunnel_with_http_info(tier_0_id, locale_svc_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_tunnel ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_tunnel"
      end
      # verify the required parameter 'locale_svc_id' is set
      if @api_client.config.client_side_validation && locale_svc_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_svc_id' when calling Tier0GatewaysApi.list_tunnel"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tunnel, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_tunnel, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-svc-id}/tunnels'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-svc-id' + '}', locale_svc_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyTunnelListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_tunnel\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List all virtual endpoints
    # List all virtual endpoints
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [VirtualEndpointListResult]
    def list_virtual_endpoints_for_tier0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = list_virtual_endpoints_for_tier0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # List all virtual endpoints
    # List all virtual endpoints
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(VirtualEndpointListResult, Fixnum, Hash)>] VirtualEndpointListResult data, response status code and response headers
    def list_virtual_endpoints_for_tier0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.list_virtual_endpoints_for_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.list_virtual_endpoints_for_tier0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.list_virtual_endpoints_for_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_virtual_endpoints_for_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.list_virtual_endpoints_for_tier0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/endpoints/virtual-endpoints'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualEndpointListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#list_virtual_endpoints_for_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Resolve a given address via the dns forwarder at Tier0
    # Query the nameserver for an ip-address or a FQDN of the given an address optionally using an specified DNS server. If the address is a fqdn, nslookup will resolve ip-address with it. If the address is an ip-address, do a reverse lookup and answer fqdn(s). If enforcement point is specified, then DNS forwarder nslookup answer will get fetched from specified enforcement point. Otherwise from all enforcement points. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :address IP address or FQDN for nslookup
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [AggregatePolicyDnsAnswer]
    def lookup_address_via_tier0_dns_forwarder(tier_0_id, opts = {})
      data, _status_code, _headers = lookup_address_via_tier0_dns_forwarder_with_http_info(tier_0_id, opts)
      data
    end

    # Resolve a given address via the dns forwarder at Tier0
    # Query the nameserver for an ip-address or a FQDN of the given an address optionally using an specified DNS server. If the address is a fqdn, nslookup will resolve ip-address with it. If the address is an ip-address, do a reverse lookup and answer fqdn(s). If enforcement point is specified, then DNS forwarder nslookup answer will get fetched from specified enforcement point. Otherwise from all enforcement points. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :address IP address or FQDN for nslookup
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(AggregatePolicyDnsAnswer, Fixnum, Hash)>] AggregatePolicyDnsAnswer data, response status code and response headers
    def lookup_address_via_tier0_dns_forwarder_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.lookup_address_via_tier0_dns_forwarder ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.lookup_address_via_tier0_dns_forwarder"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/dns-forwarder/nslookup'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'address'] = opts[:'address'] if !opts[:'address'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AggregatePolicyDnsAnswer')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#lookup_address_via_tier0_dns_forwarder\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table for downlink router port on tier-0 router
    # Get ARP table for downlink router port on tier-0 router. <br> This API is deprecated because it is duplicate. Please use /infra/segments/&lt;segment-id&gt;/arp-table Segment ID is the ID of the  segment that is connected to the the tier-0 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment(org_id, project_id, segment_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_with_http_info(org_id, project_id, segment_id, opts)
      data
    end

    # Get ARP table for downlink router port on tier-0 router
    # Get ARP table for downlink router port on tier-0 router. &lt;br&gt; This API is deprecated because it is duplicate. Please use /infra/segments/&amp;lt;segment-id&amp;gt;/arp-table Segment ID is the ID of the  segment that is connected to the the tier-0 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_with_http_info(org_id, project_id, segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment"
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/segments/{segment-id}/gateway-interface-arp-table'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table for downlink router port on tier-0 router in CSV
    # Get ARP table for downlink router port on tier-0 router in CSV. <br> This API is deprecated because it is duplicate. Please use /infra/segments/&lt;segment-id&gt;/arp-table?format=csv Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_in_csv(org_id, project_id, segment_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_in_csv_with_http_info(org_id, project_id, segment_id, opts)
      data
    end

    # Get ARP table for downlink router port on tier-0 router in CSV
    # Get ARP table for downlink router port on tier-0 router in CSV. &lt;br&gt; This API is deprecated because it is duplicate. Please use /infra/segments/&amp;lt;segment-id&amp;gt;/arp-table?format&#x3D;csv Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_in_csv_with_http_info(org_id, project_id, segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_in_csv ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_in_csv"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_in_csv"
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_in_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_in_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_in_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/segments/{segment-id}/gateway-interface-arp-table?format=csv'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#orgs_org_id_projects_project_id_infra_get_downlink_port_arp_table_for_infra_segment_in_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get DAD state for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [InterfaceDADState]
    def orgs_org_id_projects_project_id_infra_get_downlink_port_dad_state_for_infra_segment(org_id, project_id, segment_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_downlink_port_dad_state_for_infra_segment_with_http_info(org_id, project_id, segment_id, opts)
      data
    end

    # Get DAD state for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [Array<(InterfaceDADState, Fixnum, Hash)>] InterfaceDADState data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_downlink_port_dad_state_for_infra_segment_with_http_info(org_id, project_id, segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_dad_state_for_infra_segment ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_dad_state_for_infra_segment"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_dad_state_for_infra_segment"
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_dad_state_for_infra_segment"
      end
      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/segments/{segment-id}/gateway-interface-dad-state'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceDADState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#orgs_org_id_projects_project_id_infra_get_downlink_port_dad_state_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyInterfaceStatistics]
    def orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_for_infra_segment(org_id, project_id, segment_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_for_infra_segment_with_http_info(org_id, project_id, segment_id, opts)
      data
    end

    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyInterfaceStatistics, Fixnum, Hash)>] PolicyInterfaceStatistics data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_for_infra_segment_with_http_info(org_id, project_id, segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_for_infra_segment ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_for_infra_segment"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_for_infra_segment"
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_for_infra_segment"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_for_infra_segment, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_for_infra_segment, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/segments/{segment-id}/gateway-interface-statistics'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [PolicyInterfaceStatisticsSummary]
    def orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_summary_for_infra_segment(org_id, project_id, segment_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_summary_for_infra_segment_with_http_info(org_id, project_id, segment_id, opts)
      data
    end

    # Get statistics for downlink router port on tier-0 router
    # Segment ID is the ID of the segment that is connected to the the tier-0 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @option opts [String] :source Data source type.
    # @return [Array<(PolicyInterfaceStatisticsSummary, Fixnum, Hash)>] PolicyInterfaceStatisticsSummary data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_summary_for_infra_segment_with_http_info(org_id, project_id, segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_summary_for_infra_segment ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_summary_for_infra_segment"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_summary_for_infra_segment"
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_summary_for_infra_segment"
      end
      if @api_client.config.client_side_validation && opts[:'source'] && !['realtime', 'cached'].include?(opts[:'source'])
        fail ArgumentError, 'invalid value for "source", must be one of realtime, cached'
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/segments/{segment-id}/gateway-interface-statistics/summary'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'source'] = opts[:'source'] if !opts[:'source'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterfaceStatisticsSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#orgs_org_id_projects_project_id_infra_get_downlink_port_statistics_summary_for_infra_segment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from segment interface (downlink)
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTable]
    def orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table(org_id, project_id, segment_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_with_http_info(org_id, project_id, segment_id, opts)
      data
    end

    # Get ARP table from segment interface (downlink)
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTable, Fixnum, Hash)>] InterfaceArpTable data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_with_http_info(org_id, project_id, segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table"
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/segments/{segment-id}/arp-table'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTable')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get ARP table from segment interface (downlink) in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [InterfaceArpTableInCsvFormat]
    def orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_csv(org_id, project_id, segment_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_csv_with_http_info(org_id, project_id, segment_id, opts)
      data
    end

    # Get ARP table from segment interface (downlink) in CSV format
    # Returns ARP table (IPv4) or Neighbor Discovery table (IPv6) in CSV format for the interface (downlink) attaching segment to tier-0/tier-1 gateway, on a edge node specified in edge_path parameter. The edge_path parameter is mandatory. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param segment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :edge_path Policy path of edge node
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :host_transport_node_path Policy path of host transport node
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(InterfaceArpTableInCsvFormat, Fixnum, Hash)>] InterfaceArpTableInCsvFormat data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_csv_with_http_info(org_id, project_id, segment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_csv ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_csv"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_csv"
      end
      # verify the required parameter 'segment_id' is set
      if @api_client.config.client_side_validation && segment_id.nil?
        fail ArgumentError, "Missing the required parameter 'segment_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_csv"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_csv, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_csv, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/segments/{segment-id}/arp-table?format=csv'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'segment-id' + '}', segment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'edge_path'] = opts[:'edge_path'] if !opts[:'edge_path'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'host_transport_node_path'] = opts[:'host_transport_node_path'] if !opts[:'host_transport_node_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceArpTableInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#orgs_org_id_projects_project_id_infra_get_infra_segment_interface_arp_table_csv\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get DAD status by interface
    # Get tier-1 interface DAD state information. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param tier_1_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [InterfaceDADState]
    def orgs_org_id_projects_project_id_infra_get_tier1_interface_dad_state(org_id, project_id, tier_1_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_get_tier1_interface_dad_state_with_http_info(org_id, project_id, tier_1_id, locale_service_id, interface_id, opts)
      data
    end

    # Get DAD status by interface
    # Get tier-1 interface DAD state information. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param tier_1_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(InterfaceDADState, Fixnum, Hash)>] InterfaceDADState data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_get_tier1_interface_dad_state_with_http_info(org_id, project_id, tier_1_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_tier1_interface_dad_state ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_tier1_interface_dad_state"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_tier1_interface_dad_state"
      end
      # verify the required parameter 'tier_1_id' is set
      if @api_client.config.client_side_validation && tier_1_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_1_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_tier1_interface_dad_state"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_tier1_interface_dad_state"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_get_tier1_interface_dad_state"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/tier-1s/{tier-1-id}/locale-services/{locale-service-id}/interfaces/{interface-id}/dad-state'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'tier-1-id' + '}', tier_1_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceDADState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#orgs_org_id_projects_project_id_infra_get_tier1_interface_dad_state\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get the recent failed DNS queries
    # Return the given count of recent failed DNS queries from DNS forwarder. Since the DNS forwarder is running in Active/Standby HA mode on transport nodes, the given count of queries will be returned from each nodes. Hence the total queries returned could be doubled. If no count is specified, 100 recent failed queries are returned. If the recent failures is less than the given count, all the failures will be returned. The maximum count is 1,000. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count The count of the failed DNS queries (default to 100)
    # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed (default to /infra/sites/default/enforcement-points/default)
    # @return [PolicyDnsFailedQueries]
    def orgs_org_id_projects_project_id_infra_read_failed_dns_queries_on_tier0(org_id, project_id, tier_0_id, opts = {})
      data, _status_code, _headers = orgs_org_id_projects_project_id_infra_read_failed_dns_queries_on_tier0_with_http_info(org_id, project_id, tier_0_id, opts)
      data
    end

    # Get the recent failed DNS queries
    # Return the given count of recent failed DNS queries from DNS forwarder. Since the DNS forwarder is running in Active/Standby HA mode on transport nodes, the given count of queries will be returned from each nodes. Hence the total queries returned could be doubled. If no count is specified, 100 recent failed queries are returned. If the recent failures is less than the given count, all the failures will be returned. The maximum count is 1,000. 
    # @param org_id The organization ID
    # @param project_id The project ID
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count The count of the failed DNS queries
    # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed
    # @return [Array<(PolicyDnsFailedQueries, Fixnum, Hash)>] PolicyDnsFailedQueries data, response status code and response headers
    def orgs_org_id_projects_project_id_infra_read_failed_dns_queries_on_tier0_with_http_info(org_id, project_id, tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_read_failed_dns_queries_on_tier0 ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_read_failed_dns_queries_on_tier0"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_read_failed_dns_queries_on_tier0"
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_read_failed_dns_queries_on_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_read_failed_dns_queries_on_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.orgs_org_id_projects_project_id_infra_read_failed_dns_queries_on_tier0, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/infra/tier-0s/{tier-0-id}/dns-forwarder/failed-queries'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyDnsFailedQueries')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#orgs_org_id_projects_project_id_infra_read_failed_dns_queries_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      patch_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts)
      nil
    end

    # Create or update a BGP neighbor config
    # If BGP neighbor config with the neighbor-id is not already present, create a new neighbor config. If it already exists, replace the BGP neighbor config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param bgp_neighbor_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, bgp_neighbor_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.patch_bgp_neighbor_config"
      end
      # verify the required parameter 'bgp_neighbor_config' is set
      if @api_client.config.client_side_validation && bgp_neighbor_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_neighbor_config' when calling Tier0GatewaysApi.patch_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_neighbor_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update BGP routing config
    # If an BGP routing config not present, create BGP routing config. If it already exists, update the routing config. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_bgp_routing_config(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      patch_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts)
      nil
    end

    # Create or update BGP routing config
    # If an BGP routing config not present, create BGP routing config. If it already exists, update the routing config. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_routing_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, bgp_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_bgp_routing_config"
      end
      # verify the required parameter 'bgp_routing_config' is set
      if @api_client.config.client_side_validation && bgp_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_routing_config' when calling Tier0GatewaysApi.patch_bgp_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP troubleshoot config
    # If BGP troubleshoot config is not present in BGP configuration, create a new BGP troubleshoot config with default value. If it already exists, update the BGP troubleshoot config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_bgp_troubleshoot_config(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts = {})
      patch_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts)
      nil
    end

    # Create or update a BGP troubleshoot config
    # If BGP troubleshoot config is not present in BGP configuration, create a new BGP troubleshoot config with default value. If it already exists, update the BGP troubleshoot config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param bgp_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, bgp_troubleshoot_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_bgp_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_bgp_troubleshoot_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_bgp_troubleshoot_config"
      end
      # verify the required parameter 'bgp_troubleshoot_config' is set
      if @api_client.config.client_side_validation && bgp_troubleshoot_config.nil?
        fail ArgumentError, "Missing the required parameter 'bgp_troubleshoot_config' when calling Tier0GatewaysApi.patch_bgp_troubleshoot_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(bgp_troubleshoot_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_bgp_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_byod_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      patch_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts)
      nil
    end

    # Create BYOD service instance
    # Create BYOD Service Instance which represent instance of service definition created on manager. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param byod_policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, byod_policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_byod_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_byod_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_byod_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.patch_byod_policy_service_instance"
      end
      # verify the required parameter 'byod_policy_service_instance' is set
      if @api_client.config.client_side_validation && byod_policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'byod_policy_service_instance' when calling Tier0GatewaysApi.patch_byod_policy_service_instance"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(byod_policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_byod_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a BGP community list
    # If a community list with the community-list-id is not already present, create a new community list. If it already exists, update the community list for specified attributes. 
    # @param tier_0_id 
    # @param community_list_id 
    # @param community_list 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_community_list(tier_0_id, community_list_id, community_list, opts = {})
      patch_community_list_with_http_info(tier_0_id, community_list_id, community_list, opts)
      nil
    end

    # Create or update a BGP community list
    # If a community list with the community-list-id is not already present, create a new community list. If it already exists, update the community list for specified attributes. 
    # @param tier_0_id 
    # @param community_list_id 
    # @param community_list 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_community_list_with_http_info(tier_0_id, community_list_id, community_list, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_community_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_community_list"
      end
      # verify the required parameter 'community_list_id' is set
      if @api_client.config.client_side_validation && community_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'community_list_id' when calling Tier0GatewaysApi.patch_community_list"
      end
      # verify the required parameter 'community_list' is set
      if @api_client.config.client_side_validation && community_list.nil?
        fail ArgumentError, "Missing the required parameter 'community_list' when calling Tier0GatewaysApi.patch_community_list"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/community-lists/{community-list-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'community-list-id' + '}', community_list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(community_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_community_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or Update evpn configuration
    # Create a evpn configuration if it is not already present, otherwise update the evpn configuration. 
    # @param tier_0_id tier0 id
    # @param evpn_config 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_evpn_config(tier_0_id, evpn_config, opts = {})
      patch_evpn_config_with_http_info(tier_0_id, evpn_config, opts)
      nil
    end

    # Create or Update evpn configuration
    # Create a evpn configuration if it is not already present, otherwise update the evpn configuration. 
    # @param tier_0_id tier0 id
    # @param evpn_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_evpn_config_with_http_info(tier_0_id, evpn_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_evpn_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_evpn_config"
      end
      # verify the required parameter 'evpn_config' is set
      if @api_client.config.client_side_validation && evpn_config.nil?
        fail ArgumentError, "Missing the required parameter 'evpn_config' when calling Tier0GatewaysApi.patch_evpn_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/evpn'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(evpn_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_evpn_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or Update evpn tunnel endpoint configuration
    # Create a evpn tunnel endpoint config if the tunnel-endpoint-id is not already present, otherwise update the tunnel endpoint configuration. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param tunnel_endpoint_id tunnel endpoint id
    # @param evpn_tunnel_endpoint_config 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_evpn_tunnel_endpoint_config(tier_0_id, locale_services_id, tunnel_endpoint_id, evpn_tunnel_endpoint_config, opts = {})
      patch_evpn_tunnel_endpoint_config_with_http_info(tier_0_id, locale_services_id, tunnel_endpoint_id, evpn_tunnel_endpoint_config, opts)
      nil
    end

    # Create or Update evpn tunnel endpoint configuration
    # Create a evpn tunnel endpoint config if the tunnel-endpoint-id is not already present, otherwise update the tunnel endpoint configuration. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param tunnel_endpoint_id tunnel endpoint id
    # @param evpn_tunnel_endpoint_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_evpn_tunnel_endpoint_config_with_http_info(tier_0_id, locale_services_id, tunnel_endpoint_id, evpn_tunnel_endpoint_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_evpn_tunnel_endpoint_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.patch_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'tunnel_endpoint_id' is set
      if @api_client.config.client_side_validation && tunnel_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_endpoint_id' when calling Tier0GatewaysApi.patch_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'evpn_tunnel_endpoint_config' is set
      if @api_client.config.client_side_validation && evpn_tunnel_endpoint_config.nil?
        fail ArgumentError, "Missing the required parameter 'evpn_tunnel_endpoint_config' when calling Tier0GatewaysApi.patch_evpn_tunnel_endpoint_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/evpn-tunnel-endpoints/{tunnel-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s).sub('{' + 'tunnel-endpoint-id' + '}', tunnel_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(evpn_tunnel_endpoint_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_evpn_tunnel_endpoint_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a OSPF Area config
    # If OSPF Area config is not already present, create OSPF Area config. If it already exists, replace the OSPF Area config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param area_id 
    # @param ospf_area_config 
    # @param [Hash] opts the optional parameters
    # @return [OspfAreaConfig]
    def patch_ospf_area_config(tier_0_id, locale_service_id, area_id, ospf_area_config, opts = {})
      data, _status_code, _headers = patch_ospf_area_config_with_http_info(tier_0_id, locale_service_id, area_id, ospf_area_config, opts)
      data
    end

    # Create or update a OSPF Area config
    # If OSPF Area config is not already present, create OSPF Area config. If it already exists, replace the OSPF Area config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param area_id 
    # @param ospf_area_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(OspfAreaConfig, Fixnum, Hash)>] OspfAreaConfig data, response status code and response headers
    def patch_ospf_area_config_with_http_info(tier_0_id, locale_service_id, area_id, ospf_area_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_ospf_area_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_ospf_area_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_ospf_area_config"
      end
      # verify the required parameter 'area_id' is set
      if @api_client.config.client_side_validation && area_id.nil?
        fail ArgumentError, "Missing the required parameter 'area_id' when calling Tier0GatewaysApi.patch_ospf_area_config"
      end
      # verify the required parameter 'ospf_area_config' is set
      if @api_client.config.client_side_validation && ospf_area_config.nil?
        fail ArgumentError, "Missing the required parameter 'ospf_area_config' when calling Tier0GatewaysApi.patch_ospf_area_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf/areas/{area-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'area-id' + '}', area_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ospf_area_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfAreaConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_ospf_area_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a OSPF routing config
    # If OSPF routing config is not already present, create OSPF routing config. If it already exists, replace the OSPF routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param ospf_routing_config 
    # @param [Hash] opts the optional parameters
    # @return [OspfRoutingConfig]
    def patch_ospf_routing_config(tier_0_id, locale_service_id, ospf_routing_config, opts = {})
      data, _status_code, _headers = patch_ospf_routing_config_with_http_info(tier_0_id, locale_service_id, ospf_routing_config, opts)
      data
    end

    # Create or update a OSPF routing config
    # If OSPF routing config is not already present, create OSPF routing config. If it already exists, replace the OSPF routing config with this object. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param ospf_routing_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(OspfRoutingConfig, Fixnum, Hash)>] OspfRoutingConfig data, response status code and response headers
    def patch_ospf_routing_config_with_http_info(tier_0_id, locale_service_id, ospf_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_ospf_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_ospf_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_ospf_routing_config"
      end
      # verify the required parameter 'ospf_routing_config' is set
      if @api_client.config.client_side_validation && ospf_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'ospf_routing_config' when calling Tier0GatewaysApi.patch_ospf_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ospf_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_ospf_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update the DNS Forwarder
    # Update the DNS Forwarder
    # @param tier_0_id Tier-0 ID
    # @param policy_dns_forwarder 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_dns_forwarder_on_tier0(tier_0_id, policy_dns_forwarder, opts = {})
      patch_policy_dns_forwarder_on_tier0_with_http_info(tier_0_id, policy_dns_forwarder, opts)
      nil
    end

    # Update the DNS Forwarder
    # Update the DNS Forwarder
    # @param tier_0_id Tier-0 ID
    # @param policy_dns_forwarder 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_dns_forwarder_on_tier0_with_http_info(tier_0_id, policy_dns_forwarder, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_policy_dns_forwarder_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_policy_dns_forwarder_on_tier0"
      end
      # verify the required parameter 'policy_dns_forwarder' is set
      if @api_client.config.client_side_validation && policy_dns_forwarder.nil?
        fail ArgumentError, "Missing the required parameter 'policy_dns_forwarder' when calling Tier0GatewaysApi.patch_policy_dns_forwarder_on_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/dns-forwarder'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_dns_forwarder)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_policy_dns_forwarder_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update inter-vrf routing config
    # Create or update inter-vrf routing config.
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param policy_inter_vrf_routing_config 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_inter_vrf_routing_config(tier_0_id, inter_vrf_routing_id, policy_inter_vrf_routing_config, opts = {})
      patch_policy_inter_vrf_routing_config_with_http_info(tier_0_id, inter_vrf_routing_id, policy_inter_vrf_routing_config, opts)
      nil
    end

    # Create or update inter-vrf routing config
    # Create or update inter-vrf routing config.
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param policy_inter_vrf_routing_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_inter_vrf_routing_config_with_http_info(tier_0_id, inter_vrf_routing_id, policy_inter_vrf_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_policy_inter_vrf_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_policy_inter_vrf_routing_config"
      end
      # verify the required parameter 'inter_vrf_routing_id' is set
      if @api_client.config.client_side_validation && inter_vrf_routing_id.nil?
        fail ArgumentError, "Missing the required parameter 'inter_vrf_routing_id' when calling Tier0GatewaysApi.patch_policy_inter_vrf_routing_config"
      end
      # verify the required parameter 'policy_inter_vrf_routing_config' is set
      if @api_client.config.client_side_validation && policy_inter_vrf_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'policy_inter_vrf_routing_config' when calling Tier0GatewaysApi.patch_policy_inter_vrf_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/inter-vrf-routing/{inter-vrf-routing-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'inter-vrf-routing-id' + '}', inter_vrf_routing_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_inter_vrf_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_policy_inter_vrf_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update multicast configuration
    # Create or update a Tier-0 multicast configuration defining the multicast replication range, the IGMP or a PIM profile. It will update the configuration if there is already one in place. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param policy_multicast_config 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_multicast_config(tier_0_id, locale_services_id, policy_multicast_config, opts = {})
      patch_policy_multicast_config_with_http_info(tier_0_id, locale_services_id, policy_multicast_config, opts)
      nil
    end

    # Create or update multicast configuration
    # Create or update a Tier-0 multicast configuration defining the multicast replication range, the IGMP or a PIM profile. It will update the configuration if there is already one in place. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param policy_multicast_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_multicast_config_with_http_info(tier_0_id, locale_services_id, policy_multicast_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_policy_multicast_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_policy_multicast_config"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.patch_policy_multicast_config"
      end
      # verify the required parameter 'policy_multicast_config' is set
      if @api_client.config.client_side_validation && policy_multicast_config.nil?
        fail ArgumentError, "Missing the required parameter 'policy_multicast_config' when calling Tier0GatewaysApi.patch_policy_multicast_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_multicast_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_policy_multicast_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a NAT Rule on tier-0
    # If a NAT Rule is not already present on Tier-0 denoted by Tier-0 ID, under NAT section denoted by &lt;nat-id&gt;, create a new NAT Rule. If it already exists, update the NAT Rule. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) NAT rule cannot be applied to a loopback interface or a label referencing loopback interfaces. For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PATCH API, the path returned in the GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param nat_rule_id Rule ID
    # @param policy_nat_rule 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_nat_rule_on_tier0(tier_0_id, nat_id, nat_rule_id, policy_nat_rule, opts = {})
      patch_policy_nat_rule_on_tier0_with_http_info(tier_0_id, nat_id, nat_rule_id, policy_nat_rule, opts)
      nil
    end

    # Create or update a NAT Rule on tier-0
    # If a NAT Rule is not already present on Tier-0 denoted by Tier-0 ID, under NAT section denoted by &amp;lt;nat-id&amp;gt;, create a new NAT Rule. If it already exists, update the NAT Rule. Under tier-0 there will be 3 different NATs(sections). (INTERNAL, USER and DEFAULT) NAT rule cannot be applied to a loopback interface or a label referencing loopback interfaces. For more details related to NAT section please refer to PolicyNAT schema. Note:   IPSecVpnSession as Scope: Please note that old IPSecVpnSession policy path deprecated. If user specifiy old IPSecVpnSession path in the   scope property in the PATCH API, the path returned in the GET response payload will be a new path instead of the deprecated IPSecVpnSession path   Both old and new IPSecVpnSession path refer to same resource. there is no functional impact. 
    # @param tier_0_id Tier-0 ID
    # @param nat_id NAT id
    # @param nat_rule_id Rule ID
    # @param policy_nat_rule 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_nat_rule_on_tier0_with_http_info(tier_0_id, nat_id, nat_rule_id, policy_nat_rule, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_policy_nat_rule_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_policy_nat_rule_on_tier0"
      end
      # verify the required parameter 'nat_id' is set
      if @api_client.config.client_side_validation && nat_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_id' when calling Tier0GatewaysApi.patch_policy_nat_rule_on_tier0"
      end
      # verify the required parameter 'nat_rule_id' is set
      if @api_client.config.client_side_validation && nat_rule_id.nil?
        fail ArgumentError, "Missing the required parameter 'nat_rule_id' when calling Tier0GatewaysApi.patch_policy_nat_rule_on_tier0"
      end
      # verify the required parameter 'policy_nat_rule' is set
      if @api_client.config.client_side_validation && policy_nat_rule.nil?
        fail ArgumentError, "Missing the required parameter 'policy_nat_rule' when calling Tier0GatewaysApi.patch_policy_nat_rule_on_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/nat/{nat-id}/nat-rules/{nat-rule-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'nat-id' + '}', nat_id.to_s).sub('{' + 'nat-rule-id' + '}', nat_rule_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_nat_rule)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_policy_nat_rule_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance
    # Create Service Instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      patch_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts)
      nil
    end

    # Create service instance
    # Create Service Instance. Please note that, only display_name, description and deployment_spec_name are allowed to be modified in an exisiting entity. If the deployment spec name is changed, it will trigger the upgrade operation for the SVMs. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param policy_service_instance 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, policy_service_instance, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.patch_policy_service_instance"
      end
      # verify the required parameter 'policy_service_instance' is set
      if @api_client.config.client_side_validation && policy_service_instance.nil?
        fail ArgumentError, "Missing the required parameter 'policy_service_instance' when calling Tier0GatewaysApi.patch_policy_service_instance"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_service_instance)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or patch a prefix list
    # If prefix list for prefix-list-id is not already present, create a prefix list. If it already exists, patch prefix list for prefix-list-id. Note:    Patching existing prefix-list's \"prefixes\" property will overwrite the existing prefixes.    GET and PATCH is the expected set of operations to update or append new entries to the existig prefixes.    Patching existing prefixes require order to be  preserved to avoid traffic impact. During PATCH operation,    reordering of existing prefixes may impact routes and eventually datapath.    Order here is crucial and it all depends upon action. If action for every prefix is PERMIT then order may    not impact but if there is DENY prefix then change in ordering could lead to traffic impact. 
    # @param tier_0_id 
    # @param prefix_list_id 
    # @param prefix_list 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_prefix_list(tier_0_id, prefix_list_id, prefix_list, opts = {})
      patch_prefix_list_with_http_info(tier_0_id, prefix_list_id, prefix_list, opts)
      nil
    end

    # Create or patch a prefix list
    # If prefix list for prefix-list-id is not already present, create a prefix list. If it already exists, patch prefix list for prefix-list-id. Note:    Patching existing prefix-list&#39;s \&quot;prefixes\&quot; property will overwrite the existing prefixes.    GET and PATCH is the expected set of operations to update or append new entries to the existig prefixes.    Patching existing prefixes require order to be  preserved to avoid traffic impact. During PATCH operation,    reordering of existing prefixes may impact routes and eventually datapath.    Order here is crucial and it all depends upon action. If action for every prefix is PERMIT then order may    not impact but if there is DENY prefix then change in ordering could lead to traffic impact. 
    # @param tier_0_id 
    # @param prefix_list_id 
    # @param prefix_list 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_prefix_list_with_http_info(tier_0_id, prefix_list_id, prefix_list, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_prefix_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_prefix_list"
      end
      # verify the required parameter 'prefix_list_id' is set
      if @api_client.config.client_side_validation && prefix_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'prefix_list_id' when calling Tier0GatewaysApi.patch_prefix_list"
      end
      # verify the required parameter 'prefix_list' is set
      if @api_client.config.client_side_validation && prefix_list.nil?
        fail ArgumentError, "Missing the required parameter 'prefix_list' when calling Tier0GatewaysApi.patch_prefix_list"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/prefix-lists/{prefix-list-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'prefix-list-id' + '}', prefix_list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(prefix_list)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_prefix_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a route map
    # If a route map with the route-map-id is not already present, create a new route map. If it already exists, update the route map for specified attributes. 
    # @param tier_0_id 
    # @param route_map_id 
    # @param tier0_route_map 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_route_map(tier_0_id, route_map_id, tier0_route_map, opts = {})
      patch_route_map_with_http_info(tier_0_id, route_map_id, tier0_route_map, opts)
      nil
    end

    # Create or update a route map
    # If a route map with the route-map-id is not already present, create a new route map. If it already exists, update the route map for specified attributes. 
    # @param tier_0_id 
    # @param route_map_id 
    # @param tier0_route_map 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_route_map_with_http_info(tier_0_id, route_map_id, tier0_route_map, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_route_map ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_route_map"
      end
      # verify the required parameter 'route_map_id' is set
      if @api_client.config.client_side_validation && route_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_map_id' when calling Tier0GatewaysApi.patch_route_map"
      end
      # verify the required parameter 'tier0_route_map' is set
      if @api_client.config.client_side_validation && tier0_route_map.nil?
        fail ArgumentError, "Missing the required parameter 'tier0_route_map' when calling Tier0GatewaysApi.patch_route_map"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/route-maps/{route-map-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-map-id' + '}', route_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0_route_map)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_route_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create service instance endpoint
    # Create Service instance endpoint. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_service_instance_endpoint(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      patch_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts)
      nil
    end

    # Create service instance endpoint
    # Create Service instance endpoint. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param service_instance_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, service_instance_endpoint, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_service_instance_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_service_instance_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.patch_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling Tier0GatewaysApi.patch_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint' is set
      if @api_client.config.client_side_validation && service_instance_endpoint.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint' when calling Tier0GatewaysApi.patch_service_instance_endpoint"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_instance_endpoint)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_service_instance_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0 interface
    # If an interface with the interface-id is not already present, create a new interface. If it already exists, update the interface for specified attributes. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param service_interface 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_service_interface(tier_0_id, locale_service_id, interface_id, service_interface, opts = {})
      patch_service_interface_with_http_info(tier_0_id, locale_service_id, interface_id, service_interface, opts)
      nil
    end

    # Create or update a Tier-0 interface
    # If an interface with the interface-id is not already present, create a new interface. If it already exists, update the interface for specified attributes. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param service_interface 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_service_interface_with_http_info(tier_0_id, locale_service_id, interface_id, service_interface, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_service_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_service_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_service_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.patch_service_interface"
      end
      # verify the required parameter 'service_interface' is set
      if @api_client.config.client_side_validation && service_interface.nil?
        fail ArgumentError, "Missing the required parameter 'service_interface' when calling Tier0GatewaysApi.patch_service_interface"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(service_interface)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_service_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a StaticRouteBfdPeer
    # If a StaticRouteBfdPeer with the bfd-peer-id is not already present, create a new StaticRouteBfdPeer. If it already exists, update the StaticRouteBfdPeer. This is a full replace. 
    # @param tier_0_id Tier-0 ID
    # @param bfd_peer_id BFD peer ID
    # @param static_route_bfd_peer 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_static_route_bfd_peer(tier_0_id, bfd_peer_id, static_route_bfd_peer, opts = {})
      patch_static_route_bfd_peer_with_http_info(tier_0_id, bfd_peer_id, static_route_bfd_peer, opts)
      nil
    end

    # Create or update a StaticRouteBfdPeer
    # If a StaticRouteBfdPeer with the bfd-peer-id is not already present, create a new StaticRouteBfdPeer. If it already exists, update the StaticRouteBfdPeer. This is a full replace. 
    # @param tier_0_id Tier-0 ID
    # @param bfd_peer_id BFD peer ID
    # @param static_route_bfd_peer 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_static_route_bfd_peer_with_http_info(tier_0_id, bfd_peer_id, static_route_bfd_peer, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_static_route_bfd_peer ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_static_route_bfd_peer"
      end
      # verify the required parameter 'bfd_peer_id' is set
      if @api_client.config.client_side_validation && bfd_peer_id.nil?
        fail ArgumentError, "Missing the required parameter 'bfd_peer_id' when calling Tier0GatewaysApi.patch_static_route_bfd_peer"
      end
      # verify the required parameter 'static_route_bfd_peer' is set
      if @api_client.config.client_side_validation && static_route_bfd_peer.nil?
        fail ArgumentError, "Missing the required parameter 'static_route_bfd_peer' when calling Tier0GatewaysApi.patch_static_route_bfd_peer"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/{bfd-peer-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'bfd-peer-id' + '}', bfd_peer_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_route_bfd_peer)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_static_route_bfd_peer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a StaticRouteBfdTroubleshootConfig
    # If a StaticRouteBfdTroubleshootConfig is not already present, create a new StaticRouteBfdTroubleshootConfig. If it already exists, update the StaticRouteBfdTroubleshootConfig. This is a full replace. 
    # @param tier_0_id Tier-0 ID
    # @param static_route_bfd_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_static_route_bfd_troubleshoot_config(tier_0_id, static_route_bfd_troubleshoot_config, opts = {})
      patch_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, static_route_bfd_troubleshoot_config, opts)
      nil
    end

    # Create or update a StaticRouteBfdTroubleshootConfig
    # If a StaticRouteBfdTroubleshootConfig is not already present, create a new StaticRouteBfdTroubleshootConfig. If it already exists, update the StaticRouteBfdTroubleshootConfig. This is a full replace. 
    # @param tier_0_id Tier-0 ID
    # @param static_route_bfd_troubleshoot_config 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, static_route_bfd_troubleshoot_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_static_route_bfd_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_static_route_bfd_troubleshoot_config"
      end
      # verify the required parameter 'static_route_bfd_troubleshoot_config' is set
      if @api_client.config.client_side_validation && static_route_bfd_troubleshoot_config.nil?
        fail ArgumentError, "Missing the required parameter 'static_route_bfd_troubleshoot_config' when calling Tier0GatewaysApi.patch_static_route_bfd_troubleshoot_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_route_bfd_troubleshoot_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_static_route_bfd_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0
    # If a Tier-0 with the tier-0-id is not already present, create a new Tier-0. If it already exists, update the Tier-0 for specified attributes. 
    # @param tier_0_id 
    # @param tier0 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_tier0(tier_0_id, tier0, opts = {})
      patch_tier0_with_http_info(tier_0_id, tier0, opts)
      nil
    end

    # Create or update a Tier-0
    # If a Tier-0 with the tier-0-id is not already present, create a new Tier-0. If it already exists, update the Tier-0 for specified attributes. 
    # @param tier_0_id 
    # @param tier0 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_tier0_with_http_info(tier_0_id, tier0, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_tier0"
      end
      # verify the required parameter 'tier0' is set
      if @api_client.config.client_side_validation && tier0.nil?
        fail ArgumentError, "Missing the required parameter 'tier0' when calling Tier0GatewaysApi.patch_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0
    # If a Tier-0 with the tier-0-id is not already present, create a new Tier-0. If it already exists, update the Tier-0 for specified attributes. 
    # @param tier_0_id 
    # @param tier0 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_tier0_0(tier_0_id, tier0, opts = {})
      patch_tier0_0_with_http_info(tier_0_id, tier0, opts)
      nil
    end

    # Create or update a Tier-0
    # If a Tier-0 with the tier-0-id is not already present, create a new Tier-0. If it already exists, update the Tier-0 for specified attributes. 
    # @param tier_0_id 
    # @param tier0 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_tier0_0_with_http_info(tier_0_id, tier0, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_tier0_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_tier0_0"
      end
      # verify the required parameter 'tier0' is set
      if @api_client.config.client_side_validation && tier0.nil?
        fail ArgumentError, "Missing the required parameter 'tier0' when calling Tier0GatewaysApi.patch_tier0_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_tier0_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch a Tier-0 Deployment Map under Tier-0
    # If the passed Tier-0 Deployment Map does not already exist, create a new Tier-0 Deployment Map. If it already exists, patch it. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param tier_0_deployment_map_id 
    # @param tier0_deployment_map 
    # @param [Hash] opts the optional parameters
    # @return [Tier0DeploymentMap]
    def patch_tier0_deployment_map(tier_0_id, locale_service_id, tier_0_deployment_map_id, tier0_deployment_map, opts = {})
      data, _status_code, _headers = patch_tier0_deployment_map_with_http_info(tier_0_id, locale_service_id, tier_0_deployment_map_id, tier0_deployment_map, opts)
      data
    end

    # Patch a Tier-0 Deployment Map under Tier-0
    # If the passed Tier-0 Deployment Map does not already exist, create a new Tier-0 Deployment Map. If it already exists, patch it. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param tier_0_deployment_map_id 
    # @param tier0_deployment_map 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0DeploymentMap, Fixnum, Hash)>] Tier0DeploymentMap data, response status code and response headers
    def patch_tier0_deployment_map_with_http_info(tier_0_id, locale_service_id, tier_0_deployment_map_id, tier0_deployment_map, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_tier0_deployment_map ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_tier0_deployment_map"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_tier0_deployment_map"
      end
      # verify the required parameter 'tier_0_deployment_map_id' is set
      if @api_client.config.client_side_validation && tier_0_deployment_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_deployment_map_id' when calling Tier0GatewaysApi.patch_tier0_deployment_map"
      end
      # verify the required parameter 'tier0_deployment_map' is set
      if @api_client.config.client_side_validation && tier0_deployment_map.nil?
        fail ArgumentError, "Missing the required parameter 'tier0_deployment_map' when calling Tier0GatewaysApi.patch_tier0_deployment_map"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/tier-0-deployment-maps/{tier-0-deployment-map-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'tier-0-deployment-map-id' + '}', tier_0_deployment_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0_deployment_map)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0DeploymentMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_tier0_deployment_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0 interface
    # If an interface with the interface-id is not already present, create a new interface. If it already exists, update the interface for specified attributes. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param tier0_interface 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object (default to false)
    # @return [nil]
    def patch_tier0_interface(tier_0_id, locale_service_id, interface_id, tier0_interface, opts = {})
      patch_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, tier0_interface, opts)
      nil
    end

    # Create or update a Tier-0 interface
    # If an interface with the interface-id is not already present, create a new interface. If it already exists, update the interface for specified attributes. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param tier0_interface 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :override Locally override the global object
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, tier0_interface, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_tier0_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_tier0_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_tier0_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.patch_tier0_interface"
      end
      # verify the required parameter 'tier0_interface' is set
      if @api_client.config.client_side_validation && tier0_interface.nil?
        fail ArgumentError, "Missing the required parameter 'tier0_interface' when calling Tier0GatewaysApi.patch_tier0_interface"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'override'] = opts[:'override'] if !opts[:'override'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0_interface)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_tier0_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0 Interface group.
    # If an Interface group with the label-id is not already present, create a new Interface group. If it already exists, update the Interface group for specified attributes. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param label_id 
    # @param tier0_interface_group 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_tier0_interface_group(tier_0_id, locale_service_id, label_id, tier0_interface_group, opts = {})
      patch_tier0_interface_group_with_http_info(tier_0_id, locale_service_id, label_id, tier0_interface_group, opts)
      nil
    end

    # Create or update a Tier-0 Interface group.
    # If an Interface group with the label-id is not already present, create a new Interface group. If it already exists, update the Interface group for specified attributes. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param label_id 
    # @param tier0_interface_group 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_tier0_interface_group_with_http_info(tier_0_id, locale_service_id, label_id, tier0_interface_group, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_tier0_interface_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_tier0_interface_group"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_tier0_interface_group"
      end
      # verify the required parameter 'label_id' is set
      if @api_client.config.client_side_validation && label_id.nil?
        fail ArgumentError, "Missing the required parameter 'label_id' when calling Tier0GatewaysApi.patch_tier0_interface_group"
      end
      # verify the required parameter 'tier0_interface_group' is set
      if @api_client.config.client_side_validation && tier0_interface_group.nil?
        fail ArgumentError, "Missing the required parameter 'tier0_interface_group' when calling Tier0GatewaysApi.patch_tier0_interface_group"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interface-groups/{label-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'label-id' + '}', label_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0_interface_group)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_tier0_interface_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a tier-0 locale-services
    # If a Tier-0 locale-services with the locale-services-id is not already present, create a new locale-services. If it already exists, update Tier-0 locale-services with specified attributes. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param locale_services 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_tier0_locale_services(tier_0_id, locale_services_id, locale_services, opts = {})
      patch_tier0_locale_services_with_http_info(tier_0_id, locale_services_id, locale_services, opts)
      nil
    end

    # Create or update a tier-0 locale-services
    # If a Tier-0 locale-services with the locale-services-id is not already present, create a new locale-services. If it already exists, update Tier-0 locale-services with specified attributes. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param locale_services 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_tier0_locale_services_with_http_info(tier_0_id, locale_services_id, locale_services, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_tier0_locale_services ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_tier0_locale_services"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.patch_tier0_locale_services"
      end
      # verify the required parameter 'locale_services' is set
      if @api_client.config.client_side_validation && locale_services.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services' when calling Tier0GatewaysApi.patch_tier0_locale_services"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(locale_services)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_tier0_locale_services\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a Tier-0 static routes
    # If static routes for route-id are not already present, create static routes. If it already exists, update static routes for route-id. 
    # @param tier_0_id 
    # @param route_id 
    # @param static_routes 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_tier0_static_routes(tier_0_id, route_id, static_routes, opts = {})
      patch_tier0_static_routes_with_http_info(tier_0_id, route_id, static_routes, opts)
      nil
    end

    # Create or update a Tier-0 static routes
    # If static routes for route-id are not already present, create static routes. If it already exists, update static routes for route-id. 
    # @param tier_0_id 
    # @param route_id 
    # @param static_routes 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_tier0_static_routes_with_http_info(tier_0_id, route_id, static_routes, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_tier0_static_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_tier0_static_routes"
      end
      # verify the required parameter 'route_id' is set
      if @api_client.config.client_side_validation && route_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_id' when calling Tier0GatewaysApi.patch_tier0_static_routes"
      end
      # verify the required parameter 'static_routes' is set
      if @api_client.config.client_side_validation && static_routes.nil?
        fail ArgumentError, "Missing the required parameter 'static_routes' when calling Tier0GatewaysApi.patch_tier0_static_routes"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/{route-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-id' + '}', route_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_routes)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_tier0_static_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch Tunnel(GRE as of now)
    # Patch Tunnel(GRE as of now)
    # @param tier_0_id tier0 id
    # @param locale_svc_id locale service id
    # @param tunnel_id tunnel id
    # @param tunnel 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_tunnel(tier_0_id, locale_svc_id, tunnel_id, tunnel, opts = {})
      patch_tunnel_with_http_info(tier_0_id, locale_svc_id, tunnel_id, tunnel, opts)
      nil
    end

    # Patch Tunnel(GRE as of now)
    # Patch Tunnel(GRE as of now)
    # @param tier_0_id tier0 id
    # @param locale_svc_id locale service id
    # @param tunnel_id tunnel id
    # @param tunnel 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_tunnel_with_http_info(tier_0_id, locale_svc_id, tunnel_id, tunnel, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_tunnel ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_tunnel"
      end
      # verify the required parameter 'locale_svc_id' is set
      if @api_client.config.client_side_validation && locale_svc_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_svc_id' when calling Tier0GatewaysApi.patch_tunnel"
      end
      # verify the required parameter 'tunnel_id' is set
      if @api_client.config.client_side_validation && tunnel_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_id' when calling Tier0GatewaysApi.patch_tunnel"
      end
      # verify the required parameter 'tunnel' is set
      if @api_client.config.client_side_validation && tunnel.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel' when calling Tier0GatewaysApi.patch_tunnel"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-svc-id}/tunnels/{tunnel-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-svc-id' + '}', locale_svc_id.to_s).sub('{' + 'tunnel-id' + '}', tunnel_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tunnel)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_tunnel\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update virtual endpoint
    # Create or update virtual endpoint. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param virtual_endpoint_id Virtual endpoint id
    # @param virtual_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [VirtualEndpoint]
    def patch_virtual_endpoint(tier_0_id, locale_service_id, virtual_endpoint_id, virtual_endpoint, opts = {})
      data, _status_code, _headers = patch_virtual_endpoint_with_http_info(tier_0_id, locale_service_id, virtual_endpoint_id, virtual_endpoint, opts)
      data
    end

    # Create or update virtual endpoint
    # Create or update virtual endpoint. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param virtual_endpoint_id Virtual endpoint id
    # @param virtual_endpoint 
    # @param [Hash] opts the optional parameters
    # @return [Array<(VirtualEndpoint, Fixnum, Hash)>] VirtualEndpoint data, response status code and response headers
    def patch_virtual_endpoint_with_http_info(tier_0_id, locale_service_id, virtual_endpoint_id, virtual_endpoint, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.patch_virtual_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.patch_virtual_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.patch_virtual_endpoint"
      end
      # verify the required parameter 'virtual_endpoint_id' is set
      if @api_client.config.client_side_validation && virtual_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_endpoint_id' when calling Tier0GatewaysApi.patch_virtual_endpoint"
      end
      # verify the required parameter 'virtual_endpoint' is set
      if @api_client.config.client_side_validation && virtual_endpoint.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_endpoint' when calling Tier0GatewaysApi.patch_virtual_endpoint"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/endpoints/virtual-endpoints/{virtual-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'virtual-endpoint-id' + '}', virtual_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(virtual_endpoint)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualEndpoint')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#patch_virtual_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Perform the specified DNS forwarder action
    # Perform the specified action for Tier0 DNS forwarder on specified enforcement point. 
    # @param tier_0_id 
    # @param action An action to be performed for DNS forwarder on EP
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed (default to /infra/sites/default/enforcement-points/default)
    # @return [nil]
    def perform_ep_action_for_dns_forwarder_at_tier0(tier_0_id, action, opts = {})
      perform_ep_action_for_dns_forwarder_at_tier0_with_http_info(tier_0_id, action, opts)
      nil
    end

    # Perform the specified DNS forwarder action
    # Perform the specified action for Tier0 DNS forwarder on specified enforcement point. 
    # @param tier_0_id 
    # @param action An action to be performed for DNS forwarder on EP
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def perform_ep_action_for_dns_forwarder_at_tier0_with_http_info(tier_0_id, action, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.perform_ep_action_for_dns_forwarder_at_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.perform_ep_action_for_dns_forwarder_at_tier0"
      end
      # verify the required parameter 'action' is set
      if @api_client.config.client_side_validation && action.nil?
        fail ArgumentError, "Missing the required parameter 'action' when calling Tier0GatewaysApi.perform_ep_action_for_dns_forwarder_at_tier0"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['clear_cache'].include?(action)
        fail ArgumentError, "invalid value for 'action', must be one of clear_cache"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/dns-forwarder'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'action'] = action
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#perform_ep_action_for_dns_forwarder_at_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read all service instance objects under a tier-0
    # Read all service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyServiceInstanceListResult]
    def read_all_policy_service_instances_for_tier0(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = read_all_policy_service_instances_for_tier0_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read all service instance objects under a tier-0
    # Read all service instance objects under a tier-0
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyServiceInstanceListResult, Fixnum, Hash)>] PolicyServiceInstanceListResult data, response status code and response headers
    def read_all_policy_service_instances_for_tier0_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_all_policy_service_instances_for_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_all_policy_service_instances_for_tier0"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_all_policy_service_instances_for_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.read_all_policy_service_instances_for_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling Tier0GatewaysApi.read_all_policy_service_instances_for_tier0, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyServiceInstanceListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_all_policy_service_instances_for_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BGP neighbor config
    # Read BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @return [BgpNeighborConfig]
    def read_bgp_neighbor_config(tier_0_id, locale_service_id, neighbor_id, opts = {})
      data, _status_code, _headers = read_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts)
      data
    end

    # Read BGP neighbor config
    # Read BGP neighbor config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param neighbor_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BgpNeighborConfig, Fixnum, Hash)>] BgpNeighborConfig data, response status code and response headers
    def read_bgp_neighbor_config_with_http_info(tier_0_id, locale_service_id, neighbor_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_bgp_neighbor_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_bgp_neighbor_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_bgp_neighbor_config"
      end
      # verify the required parameter 'neighbor_id' is set
      if @api_client.config.client_side_validation && neighbor_id.nil?
        fail ArgumentError, "Missing the required parameter 'neighbor_id' when calling Tier0GatewaysApi.read_bgp_neighbor_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/neighbors/{neighbor-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'neighbor-id' + '}', neighbor_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpNeighborConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_bgp_neighbor_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BGP routing config
    # Read BGP routing config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [BgpRoutingConfig]
    def read_bgp_routing_config(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = read_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read BGP routing config
    # Read BGP routing config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BgpRoutingConfig, Fixnum, Hash)>] BgpRoutingConfig data, response status code and response headers
    def read_bgp_routing_config_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_bgp_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_bgp_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_bgp_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_bgp_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BGP troubleshoot config
    # Read BGP troubleshoot config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [BgpTroubleshootConfig]
    def read_bgp_troubleshoot_config(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = read_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read BGP troubleshoot config
    # Read BGP troubleshoot config
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(BgpTroubleshootConfig, Fixnum, Hash)>] BgpTroubleshootConfig data, response status code and response headers
    def read_bgp_troubleshoot_config_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_bgp_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_bgp_troubleshoot_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_bgp_troubleshoot_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/bgp/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BgpTroubleshootConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_bgp_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read BYOD service instance
    # Read BYOD service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param [Hash] opts the optional parameters
    # @return [ByodPolicyServiceInstance]
    def read_byod_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, opts = {})
      data, _status_code, _headers = read_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      data
    end

    # Read BYOD service instance
    # Read BYOD service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id BYOD Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(ByodPolicyServiceInstance, Fixnum, Hash)>] ByodPolicyServiceInstance data, response status code and response headers
    def read_byod_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_byod_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_byod_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_byod_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.read_byod_policy_service_instance"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ByodPolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_byod_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a BGP community list
    # Read a BGP community list
    # @param tier_0_id 
    # @param community_list_id 
    # @param [Hash] opts the optional parameters
    # @return [CommunityList]
    def read_community_list(tier_0_id, community_list_id, opts = {})
      data, _status_code, _headers = read_community_list_with_http_info(tier_0_id, community_list_id, opts)
      data
    end

    # Read a BGP community list
    # Read a BGP community list
    # @param tier_0_id 
    # @param community_list_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CommunityList, Fixnum, Hash)>] CommunityList data, response status code and response headers
    def read_community_list_with_http_info(tier_0_id, community_list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_community_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_community_list"
      end
      # verify the required parameter 'community_list_id' is set
      if @api_client.config.client_side_validation && community_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'community_list_id' when calling Tier0GatewaysApi.read_community_list"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/community-lists/{community-list-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'community-list-id' + '}', community_list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CommunityList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_community_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Evpn Configuration
    # Read Evpn Configuration. 
    # @param tier_0_id tier0 id
    # @param [Hash] opts the optional parameters
    # @return [EvpnConfig]
    def read_evpn_config(tier_0_id, opts = {})
      data, _status_code, _headers = read_evpn_config_with_http_info(tier_0_id, opts)
      data
    end

    # Read Evpn Configuration
    # Read Evpn Configuration. 
    # @param tier_0_id tier0 id
    # @param [Hash] opts the optional parameters
    # @return [Array<(EvpnConfig, Fixnum, Hash)>] EvpnConfig data, response status code and response headers
    def read_evpn_config_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_evpn_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_evpn_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/evpn'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EvpnConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_evpn_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read evpn tunnel endpoint configuration
    # Read evpn tunnel endpoint configuration. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param tunnel_endpoint_id tunnel endpoint id
    # @param [Hash] opts the optional parameters
    # @return [EvpnTunnelEndpointConfig]
    def read_evpn_tunnel_endpoint_config(tier_0_id, locale_services_id, tunnel_endpoint_id, opts = {})
      data, _status_code, _headers = read_evpn_tunnel_endpoint_config_with_http_info(tier_0_id, locale_services_id, tunnel_endpoint_id, opts)
      data
    end

    # Read evpn tunnel endpoint configuration
    # Read evpn tunnel endpoint configuration. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param tunnel_endpoint_id tunnel endpoint id
    # @param [Hash] opts the optional parameters
    # @return [Array<(EvpnTunnelEndpointConfig, Fixnum, Hash)>] EvpnTunnelEndpointConfig data, response status code and response headers
    def read_evpn_tunnel_endpoint_config_with_http_info(tier_0_id, locale_services_id, tunnel_endpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_evpn_tunnel_endpoint_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.read_evpn_tunnel_endpoint_config"
      end
      # verify the required parameter 'tunnel_endpoint_id' is set
      if @api_client.config.client_side_validation && tunnel_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'tunnel_endpoint_id' when calling Tier0GatewaysApi.read_evpn_tunnel_endpoint_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/evpn-tunnel-endpoints/{tunnel-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s).sub('{' + 'tunnel-endpoint-id' + '}', tunnel_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EvpnTunnelEndpointConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_evpn_tunnel_endpoint_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get the recent failed DNS queries
    # Return the given count of recent failed DNS queries from DNS forwarder. Since the DNS forwarder is running in Active/Standby HA mode on transport nodes, the given count of queries will be returned from each nodes. Hence the total queries returned could be doubled. If no count is specified, 100 recent failed queries are returned. If the recent failures is less than the given count, all the failures will be returned. The maximum count is 1,000. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count The count of the failed DNS queries (default to 100)
    # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed (default to /infra/sites/default/enforcement-points/default)
    # @return [PolicyDnsFailedQueries]
    def read_failed_dns_queries_on_tier0(tier_0_id, opts = {})
      data, _status_code, _headers = read_failed_dns_queries_on_tier0_with_http_info(tier_0_id, opts)
      data
    end

    # Get the recent failed DNS queries
    # Return the given count of recent failed DNS queries from DNS forwarder. Since the DNS forwarder is running in Active/Standby HA mode on transport nodes, the given count of queries will be returned from each nodes. Hence the total queries returned could be doubled. If no count is specified, 100 recent failed queries are returned. If the recent failures is less than the given count, all the failures will be returned. The maximum count is 1,000. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :count The count of the failed DNS queries
    # @option opts [String] :enforcement_point_path An enforcement point path, on which the action is to be performed
    # @return [Array<(PolicyDnsFailedQueries, Fixnum, Hash)>] PolicyDnsFailedQueries data, response status code and response headers
    def read_failed_dns_queries_on_tier0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_failed_dns_queries_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_failed_dns_queries_on_tier0"
      end
      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.read_failed_dns_queries_on_tier0, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'count'].nil? && opts[:'count'] < 1
        fail ArgumentError, 'invalid value for "opts[:"count"]" when calling Tier0GatewaysApi.read_failed_dns_queries_on_tier0, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/dns-forwarder/failed-queries'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyDnsFailedQueries')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_failed_dns_queries_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read an L3Vpn
    # Read the L3Vpn with the given id. No sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnSession. - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with &lt;l3vpn-id&gt; id unless the associated IPSecVpnSession with L3VPN_&lt;l3vpn-id&gt; id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/sessions/L3VPN_&lt;l3vpn-id&gt;, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [L3Vpn]
    def read_l3_vpn(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      data, _status_code, _headers = read_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      data
    end

    # Read an L3Vpn
    # Read the L3Vpn with the given id. No sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/   default/sessions/L3VPN_&amp;lt;l3vpn-id&amp;gt; to get the associated IPSecVpnSession. - GET /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/   default/local-endpoints/&amp;lt;local-endpoint-id&amp;gt; to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt; to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt; to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt; to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with &amp;lt;l3vpn-id&amp;gt; id unless the associated IPSecVpnSession with L3VPN_&amp;lt;l3vpn-id&amp;gt; id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/ default/sessions/L3VPN_&amp;lt;l3vpn-id&amp;gt;, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L3Vpn, Fixnum, Hash)>] L3Vpn data, response status code and response headers
    def read_l3_vpn_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_l3_vpn ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_l3_vpn"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_l3_vpn"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling Tier0GatewaysApi.read_l3_vpn"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3Vpn')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_l3_vpn\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read the L3Vpn Context
    # Read the L3Vpn Context under tier-0. This API is deprecated. Please use GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/ &lt;locale-service-id&gt;/ipsec-vpn-services/default instead. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [L3VpnContext]
    def read_l3_vpn_context(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = read_l3_vpn_context_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read the L3Vpn Context
    # Read the L3Vpn Context under tier-0. This API is deprecated. Please use GET /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/ &amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/default instead. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L3VpnContext, Fixnum, Hash)>] L3VpnContext data, response status code and response headers
    def read_l3_vpn_context_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_l3_vpn_context ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_l3_vpn_context"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_l3_vpn_context"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpn-context'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3VpnContext')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_l3_vpn_context\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Download L3Vpn Config for Remote Site
    # Get the L3Vpn Configuration for the peer site. Peer config contains PSK; be careful when sharing or storing it. - no enforcement point path specified: L3Vpn Peer Config will be evaluated on each enforcement point. - {enforcement_point_path}: L3Vpn Peer Config is evaluated only on the given enforcement point. This API is deprecated. Please use GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/ &lt;locale-service-id&gt;/ipsec-vpn-services/default/sessions/L3VPN_&lt;l3vpn-id&gt;/peer-config instead. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [String]
    def read_l3_vpn_peer_config(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      data, _status_code, _headers = read_l3_vpn_peer_config_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      data
    end

    # Download L3Vpn Config for Remote Site
    # Get the L3Vpn Configuration for the peer site. Peer config contains PSK; be careful when sharing or storing it. - no enforcement point path specified: L3Vpn Peer Config will be evaluated on each enforcement point. - {enforcement_point_path}: L3Vpn Peer Config is evaluated only on the given enforcement point. This API is deprecated. Please use GET /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/ &amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/default/sessions/L3VPN_&amp;lt;l3vpn-id&amp;gt;/peer-config instead. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def read_l3_vpn_peer_config_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_l3_vpn_peer_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_l3_vpn_peer_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_l3_vpn_peer_config"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling Tier0GatewaysApi.read_l3_vpn_peer_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}/peer-config'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/plain; charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_l3_vpn_peer_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read an L3Vpn
    # Read the L3Vpn with the given id. Sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/sessions/L3VPN_&lt;l3vpn-id&gt;?action=show_sensitive_data to get the associated   IPSecVpnSession. - GET /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/   default/local-endpoints/&lt;local-endpoint-id&gt; to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_&lt;l3vpn-id&gt; to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with &lt;l3vpn-id&gt; id unless the associated IPSecVpnSession with L3VPN_&lt;l3vpn-id&gt; id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/&lt;tier-0-id&gt;/locale-services/&lt;locale-service-id&gt;/ipsec-vpn-services/ default/sessions/L3VPN_&lt;l3vpn-id&gt;, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [L3Vpn]
    def read_l3_vpn_with_sensitive_data(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      data, _status_code, _headers = read_l3_vpn_with_sensitive_data_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts)
      data
    end

    # Read an L3Vpn
    # Read the L3Vpn with the given id. Sensitive data is returned as part of the response. This API is deprecated. Please use the following APIs instead: - GET /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/   default/sessions/L3VPN_&amp;lt;l3vpn-id&amp;gt;?action&#x3D;show_sensitive_data to get the associated   IPSecVpnSession. - GET /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/   default/local-endpoints/&amp;lt;local-endpoint-id&amp;gt; to get the associated IPSecVpnLocalEndpoint. - GET /infra/ipsec-vpn-tunnel-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt; to get the associated   IPSecVpnTunnelProfile. - GET /infra/ipsec-vpn-ike-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt; to get the associated IPSecVpnIkeProfile. - GET /infra/ipsec-vpn-dpd-profiles/L3VPN_&amp;lt;l3vpn-id&amp;gt; to get the associated IPSecVpnDpdProfile. If used, this deprecated API will not return L3Vpn with &amp;lt;l3vpn-id&amp;gt; id unless the associated IPSecVpnSession with L3VPN_&amp;lt;l3vpn-id&amp;gt; id exists. For example, if the IPSecVpnSession gets deleted using DELETE /infra/tier-0s/&amp;lt;tier-0-id&amp;gt;/locale-services/&amp;lt;locale-service-id&amp;gt;/ipsec-vpn-services/ default/sessions/L3VPN_&amp;lt;l3vpn-id&amp;gt;, the deprecated API will throw an ObjectNotFoundException. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param l3vpn_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(L3Vpn, Fixnum, Hash)>] L3Vpn data, response status code and response headers
    def read_l3_vpn_with_sensitive_data_with_http_info(tier_0_id, locale_service_id, l3vpn_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_l3_vpn_with_sensitive_data ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_l3_vpn_with_sensitive_data"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_l3_vpn_with_sensitive_data"
      end
      # verify the required parameter 'l3vpn_id' is set
      if @api_client.config.client_side_validation && l3vpn_id.nil?
        fail ArgumentError, "Missing the required parameter 'l3vpn_id' when calling Tier0GatewaysApi.read_l3_vpn_with_sensitive_data"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/l3vpns/{l3vpn-id}?action=show_sensitive_data'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'l3vpn-id' + '}', l3vpn_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'L3Vpn')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_l3_vpn_with_sensitive_data\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read OSPF Area config
    # Read OSPF Area config 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param area_id 
    # @param [Hash] opts the optional parameters
    # @return [OspfAreaConfig]
    def read_ospf_area_config(tier_0_id, locale_service_id, area_id, opts = {})
      data, _status_code, _headers = read_ospf_area_config_with_http_info(tier_0_id, locale_service_id, area_id, opts)
      data
    end

    # Read OSPF Area config
    # Read OSPF Area config 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param area_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(OspfAreaConfig, Fixnum, Hash)>] OspfAreaConfig data, response status code and response headers
    def read_ospf_area_config_with_http_info(tier_0_id, locale_service_id, area_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_ospf_area_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_ospf_area_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_ospf_area_config"
      end
      # verify the required parameter 'area_id' is set
      if @api_client.config.client_side_validation && area_id.nil?
        fail ArgumentError, "Missing the required parameter 'area_id' when calling Tier0GatewaysApi.read_ospf_area_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf/areas/{area-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'area-id' + '}', area_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfAreaConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_ospf_area_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read OSPF routing config
    # Read OSPF routing config 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [OspfRoutingConfig]
    def read_ospf_routing_config(tier_0_id, locale_service_id, opts = {})
      data, _status_code, _headers = read_ospf_routing_config_with_http_info(tier_0_id, locale_service_id, opts)
      data
    end

    # Read OSPF routing config
    # Read OSPF routing config 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(OspfRoutingConfig, Fixnum, Hash)>] OspfRoutingConfig data, response status code and response headers
    def read_ospf_routing_config_with_http_info(tier_0_id, locale_service_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_ospf_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_ospf_routing_config"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_ospf_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/ospf'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OspfRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_ospf_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read the DNS Forwarder for the given tier-0 instance
    # Read the DNS Forwarder for the given tier-0 instance
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @return [PolicyDnsForwarder]
    def read_policy_dns_forwarder_on_tier0(tier_0_id, opts = {})
      data, _status_code, _headers = read_policy_dns_forwarder_on_tier0_with_http_info(tier_0_id, opts)
      data
    end

    # Read the DNS Forwarder for the given tier-0 instance
    # Read the DNS Forwarder for the given tier-0 instance
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyDnsForwarder, Fixnum, Hash)>] PolicyDnsForwarder data, response status code and response headers
    def read_policy_dns_forwarder_on_tier0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_policy_dns_forwarder_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_policy_dns_forwarder_on_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/dns-forwarder'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyDnsForwarder')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_policy_dns_forwarder_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read inter-vrf routing config
    # Read inter-vrf routing config.
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param [Hash] opts the optional parameters
    # @return [PolicyInterVrfRoutingConfig]
    def read_policy_inter_vrf_routing_config(tier_0_id, inter_vrf_routing_id, opts = {})
      data, _status_code, _headers = read_policy_inter_vrf_routing_config_with_http_info(tier_0_id, inter_vrf_routing_id, opts)
      data
    end

    # Read inter-vrf routing config
    # Read inter-vrf routing config.
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyInterVrfRoutingConfig, Fixnum, Hash)>] PolicyInterVrfRoutingConfig data, response status code and response headers
    def read_policy_inter_vrf_routing_config_with_http_info(tier_0_id, inter_vrf_routing_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_policy_inter_vrf_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_policy_inter_vrf_routing_config"
      end
      # verify the required parameter 'inter_vrf_routing_id' is set
      if @api_client.config.client_side_validation && inter_vrf_routing_id.nil?
        fail ArgumentError, "Missing the required parameter 'inter_vrf_routing_id' when calling Tier0GatewaysApi.read_policy_inter_vrf_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/inter-vrf-routing/{inter-vrf-routing-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'inter-vrf-routing-id' + '}', inter_vrf_routing_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterVrfRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_policy_inter_vrf_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Multicast Configuration
    # Read Multicast Configuration. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param [Hash] opts the optional parameters
    # @return [PolicyMulticastConfig]
    def read_policy_multicast_config(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = read_policy_multicast_config_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Read Multicast Configuration
    # Read Multicast Configuration. 
    # @param tier_0_id tier0 id
    # @param locale_services_id locale services id
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyMulticastConfig, Fixnum, Hash)>] PolicyMulticastConfig data, response status code and response headers
    def read_policy_multicast_config_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_policy_multicast_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_policy_multicast_config"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.read_policy_multicast_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/multicast'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyMulticastConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_policy_multicast_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read service instance
    # Read service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [PolicyServiceInstance]
    def read_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, opts = {})
      data, _status_code, _headers = read_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      data
    end

    # Read service instance
    # Read service instance
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyServiceInstance, Fixnum, Hash)>] PolicyServiceInstance data, response status code and response headers
    def read_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.read_policy_service_instance"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyServiceInstance')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read service instance endpoint
    # Read service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [ServiceInstanceEndpoint]
    def read_policy_service_instance_endpoint(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      data, _status_code, _headers = read_policy_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts)
      data
    end

    # Read service instance endpoint
    # Read service instance endpoint
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param service_instance_endpoint_id Service instance endpoint id
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceInstanceEndpoint, Fixnum, Hash)>] ServiceInstanceEndpoint data, response status code and response headers
    def read_policy_service_instance_endpoint_with_http_info(tier_0_id, locale_service_id, service_instance_id, service_instance_endpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_policy_service_instance_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_policy_service_instance_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_policy_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.read_policy_service_instance_endpoint"
      end
      # verify the required parameter 'service_instance_endpoint_id' is set
      if @api_client.config.client_side_validation && service_instance_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_endpoint_id' when calling Tier0GatewaysApi.read_policy_service_instance_endpoint"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/byod-service-instances/{service-instance-id}/service-instance-endpoints/{service-instance-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s).sub('{' + 'service-instance-endpoint-id' + '}', service_instance_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInstanceEndpoint')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_policy_service_instance_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a prefix list
    # Read a prefix list
    # @param tier_0_id 
    # @param prefix_list_id 
    # @param [Hash] opts the optional parameters
    # @return [PrefixList]
    def read_prefix_list(tier_0_id, prefix_list_id, opts = {})
      data, _status_code, _headers = read_prefix_list_with_http_info(tier_0_id, prefix_list_id, opts)
      data
    end

    # Read a prefix list
    # Read a prefix list
    # @param tier_0_id 
    # @param prefix_list_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PrefixList, Fixnum, Hash)>] PrefixList data, response status code and response headers
    def read_prefix_list_with_http_info(tier_0_id, prefix_list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_prefix_list ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_prefix_list"
      end
      # verify the required parameter 'prefix_list_id' is set
      if @api_client.config.client_side_validation && prefix_list_id.nil?
        fail ArgumentError, "Missing the required parameter 'prefix_list_id' when calling Tier0GatewaysApi.read_prefix_list"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/prefix-lists/{prefix-list-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'prefix-list-id' + '}', prefix_list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PrefixList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_prefix_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read service interface
    # Read service interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @return [ServiceInterface]
    def read_service_interface(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = read_service_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Read service interface
    # Read service interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceInterface, Fixnum, Hash)>] ServiceInterface data, response status code and response headers
    def read_service_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_service_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_service_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_service_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.read_service_interface"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ServiceInterface')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_service_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a StaticRouteBfdPeer
    # Read a StaticRouteBfdPeer with the bfd-peer-id. 
    # @param tier_0_id Tier-0 ID
    # @param bfd_peer_id BFD peer ID
    # @param [Hash] opts the optional parameters
    # @return [StaticRouteBfdPeer]
    def read_static_route_bfd_peer(tier_0_id, bfd_peer_id, opts = {})
      data, _status_code, _headers = read_static_route_bfd_peer_with_http_info(tier_0_id, bfd_peer_id, opts)
      data
    end

    # Read a StaticRouteBfdPeer
    # Read a StaticRouteBfdPeer with the bfd-peer-id. 
    # @param tier_0_id Tier-0 ID
    # @param bfd_peer_id BFD peer ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticRouteBfdPeer, Fixnum, Hash)>] StaticRouteBfdPeer data, response status code and response headers
    def read_static_route_bfd_peer_with_http_info(tier_0_id, bfd_peer_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_static_route_bfd_peer ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_static_route_bfd_peer"
      end
      # verify the required parameter 'bfd_peer_id' is set
      if @api_client.config.client_side_validation && bfd_peer_id.nil?
        fail ArgumentError, "Missing the required parameter 'bfd_peer_id' when calling Tier0GatewaysApi.read_static_route_bfd_peer"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/{bfd-peer-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'bfd-peer-id' + '}', bfd_peer_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRouteBfdPeer')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_static_route_bfd_peer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a StaticRouteBfdTroubleshootConfig
    # Read a StaticRouteBfdTroubleshootConfig 
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @return [StaticRouteBfdTroubleshootConfig]
    def read_static_route_bfd_troubleshoot_config(tier_0_id, opts = {})
      data, _status_code, _headers = read_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, opts)
      data
    end

    # Read a StaticRouteBfdTroubleshootConfig
    # Read a StaticRouteBfdTroubleshootConfig 
    # @param tier_0_id Tier-0 ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticRouteBfdTroubleshootConfig, Fixnum, Hash)>] StaticRouteBfdTroubleshootConfig data, response status code and response headers
    def read_static_route_bfd_troubleshoot_config_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_static_route_bfd_troubleshoot_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_static_route_bfd_troubleshoot_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/troubleshoot'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRouteBfdTroubleshootConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_static_route_bfd_troubleshoot_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0
    # Read Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0]
    def read_tier0(tier_0_id, opts = {})
      data, _status_code, _headers = read_tier0_with_http_info(tier_0_id, opts)
      data
    end

    # Read Tier-0
    # Read Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0, Fixnum, Hash)>] Tier0 data, response status code and response headers
    def read_tier0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0
    # Read Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0]
    def read_tier0_0(tier_0_id, opts = {})
      data, _status_code, _headers = read_tier0_0_with_http_info(tier_0_id, opts)
      data
    end

    # Read Tier-0
    # Read Tier-0
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0, Fixnum, Hash)>] Tier0 data, response status code and response headers
    def read_tier0_0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_tier0_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_tier0_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_tier0_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read a Tier-0 Deployment Map
    # Read a Tier-0 Deployment Map 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param tier_0_deployment_map_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0DeploymentMap]
    def read_tier0_deployment_map(tier_0_id, locale_service_id, tier_0_deployment_map_id, opts = {})
      data, _status_code, _headers = read_tier0_deployment_map_with_http_info(tier_0_id, locale_service_id, tier_0_deployment_map_id, opts)
      data
    end

    # Read a Tier-0 Deployment Map
    # Read a Tier-0 Deployment Map 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param tier_0_deployment_map_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0DeploymentMap, Fixnum, Hash)>] Tier0DeploymentMap data, response status code and response headers
    def read_tier0_deployment_map_with_http_info(tier_0_id, locale_service_id, tier_0_deployment_map_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_tier0_deployment_map ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_tier0_deployment_map"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_tier0_deployment_map"
      end
      # verify the required parameter 'tier_0_deployment_map_id' is set
      if @api_client.config.client_side_validation && tier_0_deployment_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_deployment_map_id' when calling Tier0GatewaysApi.read_tier0_deployment_map"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/tier-0-deployment-maps/{tier-0-deployment-map-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'tier-0-deployment-map-id' + '}', tier_0_deployment_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0DeploymentMap')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_tier0_deployment_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0 interface
    # Read Tier-0 interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0Interface]
    def read_tier0_interface(tier_0_id, locale_service_id, interface_id, opts = {})
      data, _status_code, _headers = read_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts)
      data
    end

    # Read Tier-0 interface
    # Read Tier-0 interface
    # @param tier_0_id 
    # @param locale_service_id 
    # @param interface_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0Interface, Fixnum, Hash)>] Tier0Interface data, response status code and response headers
    def read_tier0_interface_with_http_info(tier_0_id, locale_service_id, interface_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_tier0_interface ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_tier0_interface"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_tier0_interface"
      end
      # verify the required parameter 'interface_id' is set
      if @api_client.config.client_side_validation && interface_id.nil?
        fail ArgumentError, "Missing the required parameter 'interface_id' when calling Tier0GatewaysApi.read_tier0_interface"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interfaces/{interface-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'interface-id' + '}', interface_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0Interface')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_tier0_interface\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0 Interface group
    # Read Tier-0 Interface group
    # @param tier_0_id 
    # @param locale_service_id 
    # @param label_id 
    # @param [Hash] opts the optional parameters
    # @return [Tier0InterfaceGroup]
    def read_tier0_interface_group(tier_0_id, locale_service_id, label_id, opts = {})
      data, _status_code, _headers = read_tier0_interface_group_with_http_info(tier_0_id, locale_service_id, label_id, opts)
      data
    end

    # Read Tier-0 Interface group
    # Read Tier-0 Interface group
    # @param tier_0_id 
    # @param locale_service_id 
    # @param label_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0InterfaceGroup, Fixnum, Hash)>] Tier0InterfaceGroup data, response status code and response headers
    def read_tier0_interface_group_with_http_info(tier_0_id, locale_service_id, label_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_tier0_interface_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_tier0_interface_group"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_tier0_interface_group"
      end
      # verify the required parameter 'label_id' is set
      if @api_client.config.client_side_validation && label_id.nil?
        fail ArgumentError, "Missing the required parameter 'label_id' when calling Tier0GatewaysApi.read_tier0_interface_group"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interface-groups/{label-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'label-id' + '}', label_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0InterfaceGroup')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_tier0_interface_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0 locale-services
    # Read Tier-0 locale-services
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @return [LocaleServices]
    def read_tier0_locale_services(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = read_tier0_locale_services_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Read Tier-0 locale-services
    # Read Tier-0 locale-services
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(LocaleServices, Fixnum, Hash)>] LocaleServices data, response status code and response headers
    def read_tier0_locale_services_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_tier0_locale_services ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_tier0_locale_services"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.read_tier0_locale_services"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'LocaleServices')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_tier0_locale_services\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read Tier-0 static routes
    # Read Tier-0 static routes
    # @param tier_0_id 
    # @param route_id 
    # @param [Hash] opts the optional parameters
    # @return [StaticRoutes]
    def read_tier0_static_routes(tier_0_id, route_id, opts = {})
      data, _status_code, _headers = read_tier0_static_routes_with_http_info(tier_0_id, route_id, opts)
      data
    end

    # Read Tier-0 static routes
    # Read Tier-0 static routes
    # @param tier_0_id 
    # @param route_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticRoutes, Fixnum, Hash)>] StaticRoutes data, response status code and response headers
    def read_tier0_static_routes_with_http_info(tier_0_id, route_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_tier0_static_routes ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_tier0_static_routes"
      end
      # verify the required parameter 'route_id' is set
      if @api_client.config.client_side_validation && route_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_id' when calling Tier0GatewaysApi.read_tier0_static_routes"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/{route-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-id' + '}', route_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRoutes')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_tier0_static_routes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read virtual endpoint
    # Read virtual endpoint with given id under given Tier0.
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param virtual_endpoint_id Virtual endpoint id
    # @param [Hash] opts the optional parameters
    # @return [VirtualEndpoint]
    def read_virtual_endpoint(tier_0_id, locale_service_id, virtual_endpoint_id, opts = {})
      data, _status_code, _headers = read_virtual_endpoint_with_http_info(tier_0_id, locale_service_id, virtual_endpoint_id, opts)
      data
    end

    # Read virtual endpoint
    # Read virtual endpoint with given id under given Tier0.
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param virtual_endpoint_id Virtual endpoint id
    # @param [Hash] opts the optional parameters
    # @return [Array<(VirtualEndpoint, Fixnum, Hash)>] VirtualEndpoint data, response status code and response headers
    def read_virtual_endpoint_with_http_info(tier_0_id, locale_service_id, virtual_endpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.read_virtual_endpoint ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.read_virtual_endpoint"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.read_virtual_endpoint"
      end
      # verify the required parameter 'virtual_endpoint_id' is set
      if @api_client.config.client_side_validation && virtual_endpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'virtual_endpoint_id' when calling Tier0GatewaysApi.read_virtual_endpoint"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/endpoints/virtual-endpoints/{virtual-endpoint-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'virtual-endpoint-id' + '}', virtual_endpoint_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VirtualEndpoint')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#read_virtual_endpoint\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete a route map
    # Delete a route map
    # @param tier_0_id 
    # @param route_map_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def remove_route_map(tier_0_id, route_map_id, opts = {})
      remove_route_map_with_http_info(tier_0_id, route_map_id, opts)
      nil
    end

    # Delete a route map
    # Delete a route map
    # @param tier_0_id 
    # @param route_map_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def remove_route_map_with_http_info(tier_0_id, route_map_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.remove_route_map ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.remove_route_map"
      end
      # verify the required parameter 'route_map_id' is set
      if @api_client.config.client_side_validation && route_map_id.nil?
        fail ArgumentError, "Missing the required parameter 'route_map_id' when calling Tier0GatewaysApi.remove_route_map"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/route-maps/{route-map-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'route-map-id' + '}', route_map_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#remove_route_map\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Renew the authentication tokens
    # Use this API when an alarm complaining JWT expiry is raised while deploying partner service VM. The OVF for partner service needs to be downloaded from partner services provider. It might be possible that the authentication token for this communication is expired when the service VM deployment starts. That will either require re-login through UI or use of this API. Certain authentication and authorization steps are internally processed in order to enable communication with partner service provider. This API offers the functionality to re-establish communication with partner services provider. This API needs open id and access token to be passed as headers. Those can be obtained from CSP authorize API. Please make sure to pass headers - Authorization:&lt;Bearer ACCESS_TOKEN&gt; and X-NSX-OpenId:&lt;OPEN_ID&gt;. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def renew_authentication_tokens_for_policy_service_instance(tier_0_id, locale_service_id, service_instance_id, opts = {})
      renew_authentication_tokens_for_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts)
      nil
    end

    # Renew the authentication tokens
    # Use this API when an alarm complaining JWT expiry is raised while deploying partner service VM. The OVF for partner service needs to be downloaded from partner services provider. It might be possible that the authentication token for this communication is expired when the service VM deployment starts. That will either require re-login through UI or use of this API. Certain authentication and authorization steps are internally processed in order to enable communication with partner service provider. This API offers the functionality to re-establish communication with partner services provider. This API needs open id and access token to be passed as headers. Those can be obtained from CSP authorize API. Please make sure to pass headers - Authorization:&amp;lt;Bearer ACCESS_TOKEN&amp;gt; and X-NSX-OpenId:&amp;lt;OPEN_ID&amp;gt;. 
    # @param tier_0_id Tier-0 id
    # @param locale_service_id Locale service id
    # @param service_instance_id Service instance id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def renew_authentication_tokens_for_policy_service_instance_with_http_info(tier_0_id, locale_service_id, service_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance"
      end
      # verify the required parameter 'service_instance_id' is set
      if @api_client.config.client_side_validation && service_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'service_instance_id' when calling Tier0GatewaysApi.renew_authentication_tokens_for_policy_service_instance"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/service-instances/{service-instance-id}?action=reauth'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'service-instance-id' + '}', service_instance_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#renew_authentication_tokens_for_policy_service_instance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Reprocess Tier0 gateway configuration and publish updates to NSX controller
    # Reprocess Tier0 gateway configuration and configuration of related entities like Tier0 interfaces and static routes, etc. Any missing Updates are published to NSX controller. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [nil]
    def tier0_gateway_reprocess(tier_0_id, opts = {})
      tier0_gateway_reprocess_with_http_info(tier_0_id, opts)
      nil
    end

    # Reprocess Tier0 gateway configuration and publish updates to NSX controller
    # Reprocess Tier0 gateway configuration and configuration of related entities like Tier0 interfaces and static routes, etc. Any missing Updates are published to NSX controller. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def tier0_gateway_reprocess_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.tier0_gateway_reprocess ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.tier0_gateway_reprocess"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}?action=reprocess'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#tier0_gateway_reprocess\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Reprocess Tier0 gateway configuration and publish updates to NSX controller
    # Reprocess Tier0 gateway configuration and configuration of related entities like Tier0 interfaces and static routes, etc. Any missing Updates are published to NSX controller. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [nil]
    def tier0_gateway_reprocess_0(tier_0_id, opts = {})
      tier0_gateway_reprocess_0_with_http_info(tier_0_id, opts)
      nil
    end

    # Reprocess Tier0 gateway configuration and publish updates to NSX controller
    # Reprocess Tier0 gateway configuration and configuration of related entities like Tier0 interfaces and static routes, etc. Any missing Updates are published to NSX controller. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :enforcement_point_path String Path of the enforcement point
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def tier0_gateway_reprocess_0_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.tier0_gateway_reprocess_0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.tier0_gateway_reprocess_0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}?action=reprocess'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#tier0_gateway_reprocess_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update the DNS Forwarder
    # Update the DNS Forwarder
    # @param tier_0_id Tier-0 ID
    # @param policy_dns_forwarder 
    # @param [Hash] opts the optional parameters
    # @return [PolicyDnsForwarder]
    def update_policy_dns_forwarder_on_tier0(tier_0_id, policy_dns_forwarder, opts = {})
      data, _status_code, _headers = update_policy_dns_forwarder_on_tier0_with_http_info(tier_0_id, policy_dns_forwarder, opts)
      data
    end

    # Update the DNS Forwarder
    # Update the DNS Forwarder
    # @param tier_0_id Tier-0 ID
    # @param policy_dns_forwarder 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyDnsForwarder, Fixnum, Hash)>] PolicyDnsForwarder data, response status code and response headers
    def update_policy_dns_forwarder_on_tier0_with_http_info(tier_0_id, policy_dns_forwarder, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.update_policy_dns_forwarder_on_tier0 ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.update_policy_dns_forwarder_on_tier0"
      end
      # verify the required parameter 'policy_dns_forwarder' is set
      if @api_client.config.client_side_validation && policy_dns_forwarder.nil?
        fail ArgumentError, "Missing the required parameter 'policy_dns_forwarder' when calling Tier0GatewaysApi.update_policy_dns_forwarder_on_tier0"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/dns-forwarder'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_dns_forwarder)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyDnsForwarder')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#update_policy_dns_forwarder_on_tier0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update inter-vrf routing config
    # Create or update inter-vrf routing config.
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param policy_inter_vrf_routing_config 
    # @param [Hash] opts the optional parameters
    # @return [PolicyInterVrfRoutingConfig]
    def update_policy_inter_vrf_routing_config(tier_0_id, inter_vrf_routing_id, policy_inter_vrf_routing_config, opts = {})
      data, _status_code, _headers = update_policy_inter_vrf_routing_config_with_http_info(tier_0_id, inter_vrf_routing_id, policy_inter_vrf_routing_config, opts)
      data
    end

    # Create or update inter-vrf routing config
    # Create or update inter-vrf routing config.
    # @param tier_0_id 
    # @param inter_vrf_routing_id 
    # @param policy_inter_vrf_routing_config 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyInterVrfRoutingConfig, Fixnum, Hash)>] PolicyInterVrfRoutingConfig data, response status code and response headers
    def update_policy_inter_vrf_routing_config_with_http_info(tier_0_id, inter_vrf_routing_id, policy_inter_vrf_routing_config, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.update_policy_inter_vrf_routing_config ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.update_policy_inter_vrf_routing_config"
      end
      # verify the required parameter 'inter_vrf_routing_id' is set
      if @api_client.config.client_side_validation && inter_vrf_routing_id.nil?
        fail ArgumentError, "Missing the required parameter 'inter_vrf_routing_id' when calling Tier0GatewaysApi.update_policy_inter_vrf_routing_config"
      end
      # verify the required parameter 'policy_inter_vrf_routing_config' is set
      if @api_client.config.client_side_validation && policy_inter_vrf_routing_config.nil?
        fail ArgumentError, "Missing the required parameter 'policy_inter_vrf_routing_config' when calling Tier0GatewaysApi.update_policy_inter_vrf_routing_config"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/inter-vrf-routing/{inter-vrf-routing-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'inter-vrf-routing-id' + '}', inter_vrf_routing_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(policy_inter_vrf_routing_config)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyInterVrfRoutingConfig')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#update_policy_inter_vrf_routing_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or update a StaticRouteBfdPeer
    # If a StaticRouteBfdPeer with the bfd-peer-id is not already present, create a new StaticRouteBfdPeer. If it already exists, update the StaticRouteBfdPeer. This operation will fully replace the object. 
    # @param tier_0_id Tier-0 ID
    # @param bfd_peer_id BFD peer ID
    # @param static_route_bfd_peer 
    # @param [Hash] opts the optional parameters
    # @return [StaticRouteBfdPeer]
    def update_static_route_bfd_peer(tier_0_id, bfd_peer_id, static_route_bfd_peer, opts = {})
      data, _status_code, _headers = update_static_route_bfd_peer_with_http_info(tier_0_id, bfd_peer_id, static_route_bfd_peer, opts)
      data
    end

    # Create or update a StaticRouteBfdPeer
    # If a StaticRouteBfdPeer with the bfd-peer-id is not already present, create a new StaticRouteBfdPeer. If it already exists, update the StaticRouteBfdPeer. This operation will fully replace the object. 
    # @param tier_0_id Tier-0 ID
    # @param bfd_peer_id BFD peer ID
    # @param static_route_bfd_peer 
    # @param [Hash] opts the optional parameters
    # @return [Array<(StaticRouteBfdPeer, Fixnum, Hash)>] StaticRouteBfdPeer data, response status code and response headers
    def update_static_route_bfd_peer_with_http_info(tier_0_id, bfd_peer_id, static_route_bfd_peer, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.update_static_route_bfd_peer ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.update_static_route_bfd_peer"
      end
      # verify the required parameter 'bfd_peer_id' is set
      if @api_client.config.client_side_validation && bfd_peer_id.nil?
        fail ArgumentError, "Missing the required parameter 'bfd_peer_id' when calling Tier0GatewaysApi.update_static_route_bfd_peer"
      end
      # verify the required parameter 'static_route_bfd_peer' is set
      if @api_client.config.client_side_validation && static_route_bfd_peer.nil?
        fail ArgumentError, "Missing the required parameter 'static_route_bfd_peer' when calling Tier0GatewaysApi.update_static_route_bfd_peer"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/static-routes/bfd-peers/{bfd-peer-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'bfd-peer-id' + '}', bfd_peer_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(static_route_bfd_peer)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StaticRouteBfdPeer')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#update_static_route_bfd_peer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update a Tier-0 Interface group.
    # Update the Interface group for specified attributes. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param label_id 
    # @param tier0_interface_group 
    # @param [Hash] opts the optional parameters
    # @return [Tier0InterfaceGroup]
    def update_tier0_interface_group(tier_0_id, locale_service_id, label_id, tier0_interface_group, opts = {})
      data, _status_code, _headers = update_tier0_interface_group_with_http_info(tier_0_id, locale_service_id, label_id, tier0_interface_group, opts)
      data
    end

    # Update a Tier-0 Interface group.
    # Update the Interface group for specified attributes. 
    # @param tier_0_id 
    # @param locale_service_id 
    # @param label_id 
    # @param tier0_interface_group 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Tier0InterfaceGroup, Fixnum, Hash)>] Tier0InterfaceGroup data, response status code and response headers
    def update_tier0_interface_group_with_http_info(tier_0_id, locale_service_id, label_id, tier0_interface_group, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.update_tier0_interface_group ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.update_tier0_interface_group"
      end
      # verify the required parameter 'locale_service_id' is set
      if @api_client.config.client_side_validation && locale_service_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_service_id' when calling Tier0GatewaysApi.update_tier0_interface_group"
      end
      # verify the required parameter 'label_id' is set
      if @api_client.config.client_side_validation && label_id.nil?
        fail ArgumentError, "Missing the required parameter 'label_id' when calling Tier0GatewaysApi.update_tier0_interface_group"
      end
      # verify the required parameter 'tier0_interface_group' is set
      if @api_client.config.client_side_validation && tier0_interface_group.nil?
        fail ArgumentError, "Missing the required parameter 'tier0_interface_group' when calling Tier0GatewaysApi.update_tier0_interface_group"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-service-id}/interface-groups/{label-id}'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-service-id' + '}', locale_service_id.to_s).sub('{' + 'label-id' + '}', label_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tier0_interface_group)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Tier0InterfaceGroup')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#update_tier0_interface_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get list of gateway policies with rules that belong to the specific Tier-0 logical router. 
    # Get filtered view of gateway rules associated with the Tier-0. The gateay policies are returned in the order of category and precedence. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [GatewayPolicyListResult]
    def view_tier0_gateway_firewall(tier_0_id, opts = {})
      data, _status_code, _headers = view_tier0_gateway_firewall_with_http_info(tier_0_id, opts)
      data
    end

    # Get list of gateway policies with rules that belong to the specific Tier-0 logical router. 
    # Get filtered view of gateway rules associated with the Tier-0. The gateay policies are returned in the order of category and precedence. 
    # @param tier_0_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GatewayPolicyListResult, Fixnum, Hash)>] GatewayPolicyListResult data, response status code and response headers
    def view_tier0_gateway_firewall_with_http_info(tier_0_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.view_tier0_gateway_firewall ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.view_tier0_gateway_firewall"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/gateway-firewall'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GatewayPolicyListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#view_tier0_gateway_firewall\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get list of gateway policies with rules that belong to the specific Tier-0 LocalServices. 
    # Get filtered view of Gateway Firewall rules associated with the Tier-0 Locale Services. The gateway policies are returned in the order of category and sequence number. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @return [GatewayPolicyListResult]
    def view_tier0_locale_services_gateway_firewall(tier_0_id, locale_services_id, opts = {})
      data, _status_code, _headers = view_tier0_locale_services_gateway_firewall_with_http_info(tier_0_id, locale_services_id, opts)
      data
    end

    # Get list of gateway policies with rules that belong to the specific Tier-0 LocalServices. 
    # Get filtered view of Gateway Firewall rules associated with the Tier-0 Locale Services. The gateway policies are returned in the order of category and sequence number. 
    # @param tier_0_id 
    # @param locale_services_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GatewayPolicyListResult, Fixnum, Hash)>] GatewayPolicyListResult data, response status code and response headers
    def view_tier0_locale_services_gateway_firewall_with_http_info(tier_0_id, locale_services_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: Tier0GatewaysApi.view_tier0_locale_services_gateway_firewall ...'
      end
      # verify the required parameter 'tier_0_id' is set
      if @api_client.config.client_side_validation && tier_0_id.nil?
        fail ArgumentError, "Missing the required parameter 'tier_0_id' when calling Tier0GatewaysApi.view_tier0_locale_services_gateway_firewall"
      end
      # verify the required parameter 'locale_services_id' is set
      if @api_client.config.client_side_validation && locale_services_id.nil?
        fail ArgumentError, "Missing the required parameter 'locale_services_id' when calling Tier0GatewaysApi.view_tier0_locale_services_gateway_firewall"
      end
      # resource path
      local_var_path = '/infra/tier-0s/{tier-0-id}/locale-services/{locale-services-id}/gateway-firewall'.sub('{' + 'tier-0-id' + '}', tier_0_id.to_s).sub('{' + 'locale-services-id' + '}', locale_services_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GatewayPolicyListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: Tier0GatewaysApi#view_tier0_locale_services_gateway_firewall\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
