=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'uri'

module Nsxt9PolicyClient
  class StatesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get a Policy EdgeTransport Node's State info under an Enforcement Point
    # Returns information about the current state of the edge transport node configuration and information about the associated edge tn switches. 
    # @param site_id 
    # @param enforcementpoint_id 
    # @param edge_transport_node_id 
    # @param [Hash] opts the optional parameters
    # @return [PolicyEdgeTransportNodeState]
    def get_policy_edge_transport_node_state(site_id, enforcementpoint_id, edge_transport_node_id, opts = {})
      data, _status_code, _headers = get_policy_edge_transport_node_state_with_http_info(site_id, enforcementpoint_id, edge_transport_node_id, opts)
      data
    end

    # Get a Policy EdgeTransport Node&#39;s State info under an Enforcement Point
    # Returns information about the current state of the edge transport node configuration and information about the associated edge tn switches. 
    # @param site_id 
    # @param enforcementpoint_id 
    # @param edge_transport_node_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PolicyEdgeTransportNodeState, Fixnum, Hash)>] PolicyEdgeTransportNodeState data, response status code and response headers
    def get_policy_edge_transport_node_state_with_http_info(site_id, enforcementpoint_id, edge_transport_node_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatesApi.get_policy_edge_transport_node_state ...'
      end
      # verify the required parameter 'site_id' is set
      if @api_client.config.client_side_validation && site_id.nil?
        fail ArgumentError, "Missing the required parameter 'site_id' when calling StatesApi.get_policy_edge_transport_node_state"
      end
      # verify the required parameter 'enforcementpoint_id' is set
      if @api_client.config.client_side_validation && enforcementpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'enforcementpoint_id' when calling StatesApi.get_policy_edge_transport_node_state"
      end
      # verify the required parameter 'edge_transport_node_id' is set
      if @api_client.config.client_side_validation && edge_transport_node_id.nil?
        fail ArgumentError, "Missing the required parameter 'edge_transport_node_id' when calling StatesApi.get_policy_edge_transport_node_state"
      end
      # resource path
      local_var_path = '/infra/sites/{site-id}/enforcement-points/{enforcementpoint-id}/edge-transport-nodes/{edge-transport-node-id}/state'.sub('{' + 'site-id' + '}', site_id.to_s).sub('{' + 'enforcementpoint-id' + '}', enforcementpoint_id.to_s).sub('{' + 'edge-transport-node-id' + '}', edge_transport_node_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyEdgeTransportNodeState')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatesApi#get_policy_edge_transport_node_state\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get a Policy EdgeTransport Node's State info under an Enforcement Point
    # Returns information about the current state of the edge transport node configuration and information about the associated edge tn switches. 
    # @param site_id 
    # @param enforcementpoint_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :mm_state maintenance mode state
    # @option opts [String] :status Realized state of transport nodes
    # @option opts [String] :vtep_ip Virtual tunnel endpoint ip address of transport node
    # @return [PolicyEdgeTransportNodeStateListResult]
    def list_policy_edge_transport_nodes_state(site_id, enforcementpoint_id, opts = {})
      data, _status_code, _headers = list_policy_edge_transport_nodes_state_with_http_info(site_id, enforcementpoint_id, opts)
      data
    end

    # Get a Policy EdgeTransport Node&#39;s State info under an Enforcement Point
    # Returns information about the current state of the edge transport node configuration and information about the associated edge tn switches. 
    # @param site_id 
    # @param enforcementpoint_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :mm_state maintenance mode state
    # @option opts [String] :status Realized state of transport nodes
    # @option opts [String] :vtep_ip Virtual tunnel endpoint ip address of transport node
    # @return [Array<(PolicyEdgeTransportNodeStateListResult, Fixnum, Hash)>] PolicyEdgeTransportNodeStateListResult data, response status code and response headers
    def list_policy_edge_transport_nodes_state_with_http_info(site_id, enforcementpoint_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatesApi.list_policy_edge_transport_nodes_state ...'
      end
      # verify the required parameter 'site_id' is set
      if @api_client.config.client_side_validation && site_id.nil?
        fail ArgumentError, "Missing the required parameter 'site_id' when calling StatesApi.list_policy_edge_transport_nodes_state"
      end
      # verify the required parameter 'enforcementpoint_id' is set
      if @api_client.config.client_side_validation && enforcementpoint_id.nil?
        fail ArgumentError, "Missing the required parameter 'enforcementpoint_id' when calling StatesApi.list_policy_edge_transport_nodes_state"
      end
      if @api_client.config.client_side_validation && opts[:'mm_state'] && !['ENTERING', 'ENABLED', 'EXITING', 'DISABLED'].include?(opts[:'mm_state'])
        fail ArgumentError, 'invalid value for "mm_state", must be one of ENTERING, ENABLED, EXITING, DISABLED'
      end
      if @api_client.config.client_side_validation && opts[:'status'] && !['PENDING', 'IN_PROGRESS', 'SUCCESS', 'PARTIAL_SUCCESS', 'FAILED', 'ORPHANED'].include?(opts[:'status'])
        fail ArgumentError, 'invalid value for "status", must be one of PENDING, IN_PROGRESS, SUCCESS, PARTIAL_SUCCESS, FAILED, ORPHANED'
      end
      # resource path
      local_var_path = '/infra/sites/{site-id}/enforcement-points/{enforcementpoint-id}/edge-transport-nodes/state'.sub('{' + 'site-id' + '}', site_id.to_s).sub('{' + 'enforcementpoint-id' + '}', enforcementpoint_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'mm_state'] = opts[:'mm_state'] if !opts[:'mm_state'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?
      query_params[:'vtep_ip'] = opts[:'vtep_ip'] if !opts[:'vtep_ip'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyEdgeTransportNodeStateListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatesApi#list_policy_edge_transport_nodes_state\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
