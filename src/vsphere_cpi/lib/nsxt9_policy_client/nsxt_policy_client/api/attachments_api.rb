=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'uri'

module Nsxt9PolicyClient
  class AttachmentsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create or Update transit gateway attachment
    # Create or Update transit gateway attachment 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param attachment_id 
    # @param transit_gateway_attachment 
    # @param [Hash] opts the optional parameters
    # @return [TransitGatewayAttachment]
    def create_or_replace_transit_gateway_attachment(org_id, project_id, transit_gateway_id, attachment_id, transit_gateway_attachment, opts = {})
      data, _status_code, _headers = create_or_replace_transit_gateway_attachment_with_http_info(org_id, project_id, transit_gateway_id, attachment_id, transit_gateway_attachment, opts)
      data
    end

    # Create or Update transit gateway attachment
    # Create or Update transit gateway attachment 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param attachment_id 
    # @param transit_gateway_attachment 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TransitGatewayAttachment, Fixnum, Hash)>] TransitGatewayAttachment data, response status code and response headers
    def create_or_replace_transit_gateway_attachment_with_http_info(org_id, project_id, transit_gateway_id, attachment_id, transit_gateway_attachment, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AttachmentsApi.create_or_replace_transit_gateway_attachment ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling AttachmentsApi.create_or_replace_transit_gateway_attachment"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling AttachmentsApi.create_or_replace_transit_gateway_attachment"
      end
      # verify the required parameter 'transit_gateway_id' is set
      if @api_client.config.client_side_validation && transit_gateway_id.nil?
        fail ArgumentError, "Missing the required parameter 'transit_gateway_id' when calling AttachmentsApi.create_or_replace_transit_gateway_attachment"
      end
      # verify the required parameter 'attachment_id' is set
      if @api_client.config.client_side_validation && attachment_id.nil?
        fail ArgumentError, "Missing the required parameter 'attachment_id' when calling AttachmentsApi.create_or_replace_transit_gateway_attachment"
      end
      # verify the required parameter 'transit_gateway_attachment' is set
      if @api_client.config.client_side_validation && transit_gateway_attachment.nil?
        fail ArgumentError, "Missing the required parameter 'transit_gateway_attachment' when calling AttachmentsApi.create_or_replace_transit_gateway_attachment"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/transit-gateways/{transit-gateway-id}/attachments/{attachment-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'transit-gateway-id' + '}', transit_gateway_id.to_s).sub('{' + 'attachment-id' + '}', attachment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(transit_gateway_attachment)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TransitGatewayAttachment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AttachmentsApi#create_or_replace_transit_gateway_attachment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete transit gateway attachment
    # Delete transit gateway attachment 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param attachment_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_transit_gateway_attachment(org_id, project_id, transit_gateway_id, attachment_id, opts = {})
      delete_transit_gateway_attachment_with_http_info(org_id, project_id, transit_gateway_id, attachment_id, opts)
      nil
    end

    # Delete transit gateway attachment
    # Delete transit gateway attachment 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param attachment_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_transit_gateway_attachment_with_http_info(org_id, project_id, transit_gateway_id, attachment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AttachmentsApi.delete_transit_gateway_attachment ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling AttachmentsApi.delete_transit_gateway_attachment"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling AttachmentsApi.delete_transit_gateway_attachment"
      end
      # verify the required parameter 'transit_gateway_id' is set
      if @api_client.config.client_side_validation && transit_gateway_id.nil?
        fail ArgumentError, "Missing the required parameter 'transit_gateway_id' when calling AttachmentsApi.delete_transit_gateway_attachment"
      end
      # verify the required parameter 'attachment_id' is set
      if @api_client.config.client_side_validation && attachment_id.nil?
        fail ArgumentError, "Missing the required parameter 'attachment_id' when calling AttachmentsApi.delete_transit_gateway_attachment"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/transit-gateways/{transit-gateway-id}/attachments/{attachment-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'transit-gateway-id' + '}', transit_gateway_id.to_s).sub('{' + 'attachment-id' + '}', attachment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AttachmentsApi#delete_transit_gateway_attachment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List networks advertised to the TGW external attachment
    # Returns information about all networks which are advertised to the TGW external attachment. 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param external_attachment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyAdvertisedNetworksListResult]
    def get_transit_gateway_advertised_networks(org_id, project_id, transit_gateway_id, external_attachment_id, opts = {})
      data, _status_code, _headers = get_transit_gateway_advertised_networks_with_http_info(org_id, project_id, transit_gateway_id, external_attachment_id, opts)
      data
    end

    # List networks advertised to the TGW external attachment
    # Returns information about all networks which are advertised to the TGW external attachment. 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param external_attachment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyAdvertisedNetworksListResult, Fixnum, Hash)>] PolicyAdvertisedNetworksListResult data, response status code and response headers
    def get_transit_gateway_advertised_networks_with_http_info(org_id, project_id, transit_gateway_id, external_attachment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AttachmentsApi.get_transit_gateway_advertised_networks ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling AttachmentsApi.get_transit_gateway_advertised_networks"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling AttachmentsApi.get_transit_gateway_advertised_networks"
      end
      # verify the required parameter 'transit_gateway_id' is set
      if @api_client.config.client_side_validation && transit_gateway_id.nil?
        fail ArgumentError, "Missing the required parameter 'transit_gateway_id' when calling AttachmentsApi.get_transit_gateway_advertised_networks"
      end
      # verify the required parameter 'external_attachment_id' is set
      if @api_client.config.client_side_validation && external_attachment_id.nil?
        fail ArgumentError, "Missing the required parameter 'external_attachment_id' when calling AttachmentsApi.get_transit_gateway_advertised_networks"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling AttachmentsApi.get_transit_gateway_advertised_networks, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling AttachmentsApi.get_transit_gateway_advertised_networks, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/transit-gateways/{transit-gateway-id}/attachments/{external-attachment-id}/advertised-networks'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'transit-gateway-id' + '}', transit_gateway_id.to_s).sub('{' + 'external-attachment-id' + '}', external_attachment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyAdvertisedNetworksListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AttachmentsApi#get_transit_gateway_advertised_networks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List networks advertised to the TGW external attachment in CSV format
    # Returns information about all networks which are advertised to the TGW external attachment in CSV format. 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param external_attachment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [PolicyAdvertisedNetworkInCsvFormat]
    def get_transit_gateway_advertised_networks_download(org_id, project_id, transit_gateway_id, external_attachment_id, opts = {})
      data, _status_code, _headers = get_transit_gateway_advertised_networks_download_with_http_info(org_id, project_id, transit_gateway_id, external_attachment_id, opts)
      data
    end

    # List networks advertised to the TGW external attachment in CSV format
    # Returns information about all networks which are advertised to the TGW external attachment in CSV format. 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param external_attachment_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [String] :enforcement_point_path Enforcement point path
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(PolicyAdvertisedNetworkInCsvFormat, Fixnum, Hash)>] PolicyAdvertisedNetworkInCsvFormat data, response status code and response headers
    def get_transit_gateway_advertised_networks_download_with_http_info(org_id, project_id, transit_gateway_id, external_attachment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AttachmentsApi.get_transit_gateway_advertised_networks_download ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling AttachmentsApi.get_transit_gateway_advertised_networks_download"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling AttachmentsApi.get_transit_gateway_advertised_networks_download"
      end
      # verify the required parameter 'transit_gateway_id' is set
      if @api_client.config.client_side_validation && transit_gateway_id.nil?
        fail ArgumentError, "Missing the required parameter 'transit_gateway_id' when calling AttachmentsApi.get_transit_gateway_advertised_networks_download"
      end
      # verify the required parameter 'external_attachment_id' is set
      if @api_client.config.client_side_validation && external_attachment_id.nil?
        fail ArgumentError, "Missing the required parameter 'external_attachment_id' when calling AttachmentsApi.get_transit_gateway_advertised_networks_download"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling AttachmentsApi.get_transit_gateway_advertised_networks_download, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling AttachmentsApi.get_transit_gateway_advertised_networks_download, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/transit-gateways/{transit-gateway-id}/attachments/{external-attachment-id}/advertised-networks/download'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'transit-gateway-id' + '}', transit_gateway_id.to_s).sub('{' + 'external-attachment-id' + '}', external_attachment_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'enforcement_point_path'] = opts[:'enforcement_point_path'] if !opts[:'enforcement_point_path'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/csv'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PolicyAdvertisedNetworkInCsvFormat')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AttachmentsApi#get_transit_gateway_advertised_networks_download\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get transit gateway attachment statistics.
    # Retrieve the total tx, rx dropped, total bytes, total packets of all traffic that flows to the TGW attachment. 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param attachment_id 
    # @param [Hash] opts the optional parameters
    # @return [TransitGatewayAttachmentStatistics]
    def get_transit_gateway_attachment_statistics(org_id, project_id, transit_gateway_id, attachment_id, opts = {})
      data, _status_code, _headers = get_transit_gateway_attachment_statistics_with_http_info(org_id, project_id, transit_gateway_id, attachment_id, opts)
      data
    end

    # Get transit gateway attachment statistics.
    # Retrieve the total tx, rx dropped, total bytes, total packets of all traffic that flows to the TGW attachment. 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param attachment_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TransitGatewayAttachmentStatistics, Fixnum, Hash)>] TransitGatewayAttachmentStatistics data, response status code and response headers
    def get_transit_gateway_attachment_statistics_with_http_info(org_id, project_id, transit_gateway_id, attachment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AttachmentsApi.get_transit_gateway_attachment_statistics ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling AttachmentsApi.get_transit_gateway_attachment_statistics"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling AttachmentsApi.get_transit_gateway_attachment_statistics"
      end
      # verify the required parameter 'transit_gateway_id' is set
      if @api_client.config.client_side_validation && transit_gateway_id.nil?
        fail ArgumentError, "Missing the required parameter 'transit_gateway_id' when calling AttachmentsApi.get_transit_gateway_attachment_statistics"
      end
      # verify the required parameter 'attachment_id' is set
      if @api_client.config.client_side_validation && attachment_id.nil?
        fail ArgumentError, "Missing the required parameter 'attachment_id' when calling AttachmentsApi.get_transit_gateway_attachment_statistics"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/transit-gateways/{transit-gateway-id}/attachments/{attachment-id}/statistics'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'transit-gateway-id' + '}', transit_gateway_id.to_s).sub('{' + 'attachment-id' + '}', attachment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TransitGatewayAttachmentStatistics')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AttachmentsApi#get_transit_gateway_attachment_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List transit gateway attachments
    # List transit gateway attachments 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results (default to false)
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer) (default to 1000)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [TransitGatewayAttachmentListResult]
    def list_transit_gateway_attachment(org_id, project_id, transit_gateway_id, opts = {})
      data, _status_code, _headers = list_transit_gateway_attachment_with_http_info(org_id, project_id, transit_gateway_id, opts)
      data
    end

    # List transit gateway attachments
    # List transit gateway attachments 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Opaque cursor to be used for getting next page of records (supplied by current result page)
    # @option opts [BOOLEAN] :include_mark_for_delete_objects Include objects that are marked for deletion in results
    # @option opts [String] :included_fields Comma separated list of fields that should be included in query result
    # @option opts [Integer] :page_size Maximum number of results to return in this page (server may return fewer)
    # @option opts [BOOLEAN] :sort_ascending 
    # @option opts [String] :sort_by Field by which records are sorted
    # @return [Array<(TransitGatewayAttachmentListResult, Fixnum, Hash)>] TransitGatewayAttachmentListResult data, response status code and response headers
    def list_transit_gateway_attachment_with_http_info(org_id, project_id, transit_gateway_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AttachmentsApi.list_transit_gateway_attachment ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling AttachmentsApi.list_transit_gateway_attachment"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling AttachmentsApi.list_transit_gateway_attachment"
      end
      # verify the required parameter 'transit_gateway_id' is set
      if @api_client.config.client_side_validation && transit_gateway_id.nil?
        fail ArgumentError, "Missing the required parameter 'transit_gateway_id' when calling AttachmentsApi.list_transit_gateway_attachment"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling AttachmentsApi.list_transit_gateway_attachment, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling AttachmentsApi.list_transit_gateway_attachment, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/transit-gateways/{transit-gateway-id}/attachments'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'transit-gateway-id' + '}', transit_gateway_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'include_mark_for_delete_objects'] = opts[:'include_mark_for_delete_objects'] if !opts[:'include_mark_for_delete_objects'].nil?
      query_params[:'included_fields'] = opts[:'included_fields'] if !opts[:'included_fields'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'sort_ascending'] = opts[:'sort_ascending'] if !opts[:'sort_ascending'].nil?
      query_params[:'sort_by'] = opts[:'sort_by'] if !opts[:'sort_by'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TransitGatewayAttachmentListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AttachmentsApi#list_transit_gateway_attachment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create or Update transit gateway attachment
    # Create or Update transit gateway attachment 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param attachment_id 
    # @param transit_gateway_attachment 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def patch_transit_gateway_attachment(org_id, project_id, transit_gateway_id, attachment_id, transit_gateway_attachment, opts = {})
      patch_transit_gateway_attachment_with_http_info(org_id, project_id, transit_gateway_id, attachment_id, transit_gateway_attachment, opts)
      nil
    end

    # Create or Update transit gateway attachment
    # Create or Update transit gateway attachment 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param attachment_id 
    # @param transit_gateway_attachment 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def patch_transit_gateway_attachment_with_http_info(org_id, project_id, transit_gateway_id, attachment_id, transit_gateway_attachment, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AttachmentsApi.patch_transit_gateway_attachment ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling AttachmentsApi.patch_transit_gateway_attachment"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling AttachmentsApi.patch_transit_gateway_attachment"
      end
      # verify the required parameter 'transit_gateway_id' is set
      if @api_client.config.client_side_validation && transit_gateway_id.nil?
        fail ArgumentError, "Missing the required parameter 'transit_gateway_id' when calling AttachmentsApi.patch_transit_gateway_attachment"
      end
      # verify the required parameter 'attachment_id' is set
      if @api_client.config.client_side_validation && attachment_id.nil?
        fail ArgumentError, "Missing the required parameter 'attachment_id' when calling AttachmentsApi.patch_transit_gateway_attachment"
      end
      # verify the required parameter 'transit_gateway_attachment' is set
      if @api_client.config.client_side_validation && transit_gateway_attachment.nil?
        fail ArgumentError, "Missing the required parameter 'transit_gateway_attachment' when calling AttachmentsApi.patch_transit_gateway_attachment"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/transit-gateways/{transit-gateway-id}/attachments/{attachment-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'transit-gateway-id' + '}', transit_gateway_id.to_s).sub('{' + 'attachment-id' + '}', attachment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(transit_gateway_attachment)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AttachmentsApi#patch_transit_gateway_attachment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read transit gateway attachment
    # Read transit gateway attachment 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param attachment_id 
    # @param [Hash] opts the optional parameters
    # @return [TransitGatewayAttachment]
    def read_transit_gateway_attachment(org_id, project_id, transit_gateway_id, attachment_id, opts = {})
      data, _status_code, _headers = read_transit_gateway_attachment_with_http_info(org_id, project_id, transit_gateway_id, attachment_id, opts)
      data
    end

    # Read transit gateway attachment
    # Read transit gateway attachment 
    # @param org_id 
    # @param project_id 
    # @param transit_gateway_id 
    # @param attachment_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(TransitGatewayAttachment, Fixnum, Hash)>] TransitGatewayAttachment data, response status code and response headers
    def read_transit_gateway_attachment_with_http_info(org_id, project_id, transit_gateway_id, attachment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AttachmentsApi.read_transit_gateway_attachment ...'
      end
      # verify the required parameter 'org_id' is set
      if @api_client.config.client_side_validation && org_id.nil?
        fail ArgumentError, "Missing the required parameter 'org_id' when calling AttachmentsApi.read_transit_gateway_attachment"
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling AttachmentsApi.read_transit_gateway_attachment"
      end
      # verify the required parameter 'transit_gateway_id' is set
      if @api_client.config.client_side_validation && transit_gateway_id.nil?
        fail ArgumentError, "Missing the required parameter 'transit_gateway_id' when calling AttachmentsApi.read_transit_gateway_attachment"
      end
      # verify the required parameter 'attachment_id' is set
      if @api_client.config.client_side_validation && attachment_id.nil?
        fail ArgumentError, "Missing the required parameter 'attachment_id' when calling AttachmentsApi.read_transit_gateway_attachment"
      end
      # resource path
      local_var_path = '/orgs/{org-id}/projects/{project-id}/transit-gateways/{transit-gateway-id}/attachments/{attachment-id}'.sub('{' + 'org-id' + '}', org_id.to_s).sub('{' + 'project-id' + '}', project_id.to_s).sub('{' + 'transit-gateway-id' + '}', transit_gateway_id.to_s).sub('{' + 'attachment-id' + '}', attachment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TransitGatewayAttachment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AttachmentsApi#read_transit_gateway_attachment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
