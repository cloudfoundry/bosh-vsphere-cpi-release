=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'uri'

module Nsxt9PolicyClient
  class LLDPApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List LLDP Neighbor Properties of given Node
    # List LLDP Neighbor Properties of given Node
    # @param site_id site ID
    # @param enforcement_point_id enforcement point ID
    # @param node_id ID of transport node
    # @param [Hash] opts the optional parameters
    # @return [InterfaceNeighborPropertyListResult]
    def list_all_lldp_neighbor_interfaces(site_id, enforcement_point_id, node_id, opts = {})
      data, _status_code, _headers = list_all_lldp_neighbor_interfaces_with_http_info(site_id, enforcement_point_id, node_id, opts)
      data
    end

    # List LLDP Neighbor Properties of given Node
    # List LLDP Neighbor Properties of given Node
    # @param site_id site ID
    # @param enforcement_point_id enforcement point ID
    # @param node_id ID of transport node
    # @param [Hash] opts the optional parameters
    # @return [Array<(InterfaceNeighborPropertyListResult, Fixnum, Hash)>] InterfaceNeighborPropertyListResult data, response status code and response headers
    def list_all_lldp_neighbor_interfaces_with_http_info(site_id, enforcement_point_id, node_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LLDPApi.list_all_lldp_neighbor_interfaces ...'
      end
      # verify the required parameter 'site_id' is set
      if @api_client.config.client_side_validation && site_id.nil?
        fail ArgumentError, "Missing the required parameter 'site_id' when calling LLDPApi.list_all_lldp_neighbor_interfaces"
      end
      # verify the required parameter 'enforcement_point_id' is set
      if @api_client.config.client_side_validation && enforcement_point_id.nil?
        fail ArgumentError, "Missing the required parameter 'enforcement_point_id' when calling LLDPApi.list_all_lldp_neighbor_interfaces"
      end
      # verify the required parameter 'node_id' is set
      if @api_client.config.client_side_validation && node_id.nil?
        fail ArgumentError, "Missing the required parameter 'node_id' when calling LLDPApi.list_all_lldp_neighbor_interfaces"
      end
      # resource path
      local_var_path = '/infra/sites/{site-id}/enforcement-points/{enforcement-point-id}/host-transport-nodes/{node-id}/lldp/interfaces'.sub('{' + 'site-id' + '}', site_id.to_s).sub('{' + 'enforcement-point-id' + '}', enforcement_point_id.to_s).sub('{' + 'node-id' + '}', node_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceNeighborPropertyListResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LLDPApi#list_all_lldp_neighbor_interfaces\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Read LLDP Neighbor Properties of transport node by Interface Name 
    # Read LLDP Neighbor Properties of transport node by Interface Name 
    # @param site_id site ID
    # @param enforcement_point_id enforcement point ID
    # @param node_id ID of transport node
    # @param interface_name Interface name to read
    # @param [Hash] opts the optional parameters
    # @return [InterfaceNeighborProperties]
    def show_lldp_neighbor_interfaces(site_id, enforcement_point_id, node_id, interface_name, opts = {})
      data, _status_code, _headers = show_lldp_neighbor_interfaces_with_http_info(site_id, enforcement_point_id, node_id, interface_name, opts)
      data
    end

    # Read LLDP Neighbor Properties of transport node by Interface Name 
    # Read LLDP Neighbor Properties of transport node by Interface Name 
    # @param site_id site ID
    # @param enforcement_point_id enforcement point ID
    # @param node_id ID of transport node
    # @param interface_name Interface name to read
    # @param [Hash] opts the optional parameters
    # @return [Array<(InterfaceNeighborProperties, Fixnum, Hash)>] InterfaceNeighborProperties data, response status code and response headers
    def show_lldp_neighbor_interfaces_with_http_info(site_id, enforcement_point_id, node_id, interface_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: LLDPApi.show_lldp_neighbor_interfaces ...'
      end
      # verify the required parameter 'site_id' is set
      if @api_client.config.client_side_validation && site_id.nil?
        fail ArgumentError, "Missing the required parameter 'site_id' when calling LLDPApi.show_lldp_neighbor_interfaces"
      end
      # verify the required parameter 'enforcement_point_id' is set
      if @api_client.config.client_side_validation && enforcement_point_id.nil?
        fail ArgumentError, "Missing the required parameter 'enforcement_point_id' when calling LLDPApi.show_lldp_neighbor_interfaces"
      end
      # verify the required parameter 'node_id' is set
      if @api_client.config.client_side_validation && node_id.nil?
        fail ArgumentError, "Missing the required parameter 'node_id' when calling LLDPApi.show_lldp_neighbor_interfaces"
      end
      # verify the required parameter 'interface_name' is set
      if @api_client.config.client_side_validation && interface_name.nil?
        fail ArgumentError, "Missing the required parameter 'interface_name' when calling LLDPApi.show_lldp_neighbor_interfaces"
      end
      # resource path
      local_var_path = '/infra/sites/{site-id}/enforcement-points/{enforcement-point-id}/host-transport-nodes/{node-id}/lldp/interfaces/{interface-name}'.sub('{' + 'site-id' + '}', site_id.to_s).sub('{' + 'enforcement-point-id' + '}', enforcement_point_id.to_s).sub('{' + 'node-id' + '}', node_id.to_s).sub('{' + 'interface-name' + '}', interface_name.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InterfaceNeighborProperties')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LLDPApi#show_lldp_neighbor_interfaces\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
