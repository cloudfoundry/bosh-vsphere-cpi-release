=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'uri'

module Nsxt9PolicyClient
  class HostAgentApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get NSX Application Platform Common Agent host configuration
    # Get the current NSX Application Platform Common Agent host configuration. Recommend to keep the value same for flow_data_collection_interval and context_data_collection_interval. 
    # @param [Hash] opts the optional parameters
    # @return [CommonAgentHostConfigurationInfo]
    def get_common_agent_host_configuration(opts = {})
      data, _status_code, _headers = get_common_agent_host_configuration_with_http_info(opts)
      data
    end

    # Get NSX Application Platform Common Agent host configuration
    # Get the current NSX Application Platform Common Agent host configuration. Recommend to keep the value same for flow_data_collection_interval and context_data_collection_interval. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CommonAgentHostConfigurationInfo, Fixnum, Hash)>] CommonAgentHostConfigurationInfo data, response status code and response headers
    def get_common_agent_host_configuration_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: HostAgentApi.get_common_agent_host_configuration ...'
      end
      # resource path
      local_var_path = '/infra/napp/common-agent/host-config'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CommonAgentHostConfigurationInfo')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: HostAgentApi#get_common_agent_host_configuration\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Patch NSX Application Platform Common Agent host configuration
    # Patch the current NSX Application Platform Common Agent host configuration. Return error if NSX Application Platform Common Agent is not registered with NSX. \"private_ip_range\" is the only field allowed to patch. 
    # @param common_agent_host_configuration_info 
    # @param [Hash] opts the optional parameters
    # @return [CommonAgentHostConfigurationInfo]
    def patch_common_agent_host_configuration(common_agent_host_configuration_info, opts = {})
      data, _status_code, _headers = patch_common_agent_host_configuration_with_http_info(common_agent_host_configuration_info, opts)
      data
    end

    # Patch NSX Application Platform Common Agent host configuration
    # Patch the current NSX Application Platform Common Agent host configuration. Return error if NSX Application Platform Common Agent is not registered with NSX. \&quot;private_ip_range\&quot; is the only field allowed to patch. 
    # @param common_agent_host_configuration_info 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CommonAgentHostConfigurationInfo, Fixnum, Hash)>] CommonAgentHostConfigurationInfo data, response status code and response headers
    def patch_common_agent_host_configuration_with_http_info(common_agent_host_configuration_info, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: HostAgentApi.patch_common_agent_host_configuration ...'
      end
      # verify the required parameter 'common_agent_host_configuration_info' is set
      if @api_client.config.client_side_validation && common_agent_host_configuration_info.nil?
        fail ArgumentError, "Missing the required parameter 'common_agent_host_configuration_info' when calling HostAgentApi.patch_common_agent_host_configuration"
      end
      # resource path
      local_var_path = '/infra/napp/common-agent/host-config'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(common_agent_host_configuration_info)
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CommonAgentHostConfigurationInfo')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: HostAgentApi#patch_common_agent_host_configuration\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Reset NSX Application Platform Common Agent host configuration
    # Reset NSX Application Platform Common Agent host configuration to the default setting. Clear NSX Application Platform Common Agent host configuration if NSX Application Platform Common Agent is not registered with NSX. Return the NSX Application Platform Common Agent host configuration after reset operation. 
    # @param [Hash] opts the optional parameters
    # @return [CommonAgentHostConfigurationInfo]
    def reset_common_agent_host_configuration(opts = {})
      data, _status_code, _headers = reset_common_agent_host_configuration_with_http_info(opts)
      data
    end

    # Reset NSX Application Platform Common Agent host configuration
    # Reset NSX Application Platform Common Agent host configuration to the default setting. Clear NSX Application Platform Common Agent host configuration if NSX Application Platform Common Agent is not registered with NSX. Return the NSX Application Platform Common Agent host configuration after reset operation. 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CommonAgentHostConfigurationInfo, Fixnum, Hash)>] CommonAgentHostConfigurationInfo data, response status code and response headers
    def reset_common_agent_host_configuration_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: HostAgentApi.reset_common_agent_host_configuration ...'
      end
      # resource path
      local_var_path = '/infra/napp/common-agent/host-config?action=reset'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CommonAgentHostConfigurationInfo')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: HostAgentApi#reset_common_agent_host_configuration\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
