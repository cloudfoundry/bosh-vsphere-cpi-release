=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'uri'

module Nsxt9PolicyClient
  class KubernetesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get information about Kubernetes tools
    # To show information about Kubernetes tools version. It will list kubectl client version, kube-apiserver version. Also show, whether kubectl client version is compatible with kube-apiserver version.kubectl is supported within one minor version (older or newer) of kube-apiserver. 
    # @param site_id 
    # @param [Hash] opts the optional parameters
    # @return [KubernetesToolsInfo]
    def get_kubernetes_tools_info(site_id, opts = {})
      data, _status_code, _headers = get_kubernetes_tools_info_with_http_info(site_id, opts)
      data
    end

    # Get information about Kubernetes tools
    # To show information about Kubernetes tools version. It will list kubectl client version, kube-apiserver version. Also show, whether kubectl client version is compatible with kube-apiserver version.kubectl is supported within one minor version (older or newer) of kube-apiserver. 
    # @param site_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(KubernetesToolsInfo, Fixnum, Hash)>] KubernetesToolsInfo data, response status code and response headers
    def get_kubernetes_tools_info_with_http_info(site_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: KubernetesApi.get_kubernetes_tools_info ...'
      end
      # verify the required parameter 'site_id' is set
      if @api_client.config.client_side_validation && site_id.nil?
        fail ArgumentError, "Missing the required parameter 'site_id' when calling KubernetesApi.get_kubernetes_tools_info"
      end
      # resource path
      local_var_path = '/infra/sites/{site-id}/napp/deployment/kubernetes-tools'.sub('{' + 'site-id' + '}', site_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BasicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'KubernetesToolsInfo')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: KubernetesApi#get_kubernetes_tools_info\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
