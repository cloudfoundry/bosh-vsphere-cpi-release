=begin
#NSX Policy API

#VMware NSX Policy REST API

OpenAPI spec version: 9.0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.46

=end

require 'date'

module Nsxt9PolicyClient
  # Properties that affect the configuration of the NSX API service. 
  class ApiServiceConfig
    attr_accessor :_self

    # The server will populate this field when returing the resource. Ignored on PUT and POST.
    attr_accessor :_links

    # Schema for this resource
    attr_accessor :_schema

    # The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected.
    attr_accessor :_revision

    # The type of this resource.
    attr_accessor :resource_type

    # ID of the user who created this resource
    attr_accessor :_create_user

    # Timestamp of resource creation
    attr_accessor :_create_time

    # ID of the user who last modified this resource
    attr_accessor :_last_modified_user

    # Timestamp of last modification
    attr_accessor :_last_modified_time

    # Indicates system owned resource
    attr_accessor :_system_owned

    # Protection status is one of the following: PROTECTED - the client who retrieved the entity is not allowed             to modify it. NOT_PROTECTED - the client who retrieved the entity is allowed                 to modify it REQUIRE_OVERRIDE - the client who retrieved the entity is a super                    user and can modify it, but only when providing                    the request header X-Allow-Overwrite=true. UNKNOWN - the _protection field could not be determined for this           entity. 
    attr_accessor :_protection

    # Unique identifier of this resource
    attr_accessor :id

    # Defaults to ID if not set
    attr_accessor :display_name

    # Description of this resource
    attr_accessor :description

    # Opaque identifiers meaningful to the API user
    attr_accessor :tags

    # NSX session inactivity timeout
    attr_accessor :session_timeout

    # NSX connection timeout, in seconds. To disable timeout, set to 0.
    attr_accessor :connection_timeout

    # The TLS protocol versions that the API service will negotiate.
    attr_accessor :protocol_versions

    # The TLS cipher suites that the API service will negotiate.
    attr_accessor :cipher_suites

    # Host name or IP address to use for redirect location headers, or empty string to derive from current request. To disable, set redirect_host to the empty string (\"\").
    attr_accessor :redirect_host

    # The maximum number of API requests that will be serviced per second for a given authenticated client.  If more API requests are received than can be serviced, a 429 Too Many Requests HTTP response will be returned. To disable API rate limiting, set this value to 0.
    attr_accessor :client_api_rate_limit

    # The maximum number of concurrent API requests that will be serviced. If the number of API requests being processed exceeds this limit, new API requests will be refused and a 503 Service Unavailable response will be returned to the client.  To disable API concurrency limiting, set this value to 0.
    attr_accessor :global_api_concurrency_limit

    # A per-client concurrency limit. This is the maximum number of outstanding requests that a client can have. For example, a client can open multiple connections to NSX and submit operations on each connection. When this limit is exceeded, the server returns a 503 Service Unavailable error to the client. To disable API concurrency limiting, set this value to 0.
    attr_accessor :client_api_concurrency_limit

    # The list of IP addresses which are not subjected to a lockout on failed login attempts.
    attr_accessor :lockout_immune_addresses

    # Identifies whether basic authentication is enabled or disabled in API calls.
    attr_accessor :basic_authentication_enabled

    # Identifies whether cookie-based authentication is enabled or disabled in API calls. When cookie-based authentication is disabled, new sessions cannot be created via /api/session/create.
    attr_accessor :cookie_based_authentication_enabled

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'_self' => :'_self',
        :'_links' => :'_links',
        :'_schema' => :'_schema',
        :'_revision' => :'_revision',
        :'resource_type' => :'resource_type',
        :'_create_user' => :'_create_user',
        :'_create_time' => :'_create_time',
        :'_last_modified_user' => :'_last_modified_user',
        :'_last_modified_time' => :'_last_modified_time',
        :'_system_owned' => :'_system_owned',
        :'_protection' => :'_protection',
        :'id' => :'id',
        :'display_name' => :'display_name',
        :'description' => :'description',
        :'tags' => :'tags',
        :'session_timeout' => :'session_timeout',
        :'connection_timeout' => :'connection_timeout',
        :'protocol_versions' => :'protocol_versions',
        :'cipher_suites' => :'cipher_suites',
        :'redirect_host' => :'redirect_host',
        :'client_api_rate_limit' => :'client_api_rate_limit',
        :'global_api_concurrency_limit' => :'global_api_concurrency_limit',
        :'client_api_concurrency_limit' => :'client_api_concurrency_limit',
        :'lockout_immune_addresses' => :'lockout_immune_addresses',
        :'basic_authentication_enabled' => :'basic_authentication_enabled',
        :'cookie_based_authentication_enabled' => :'cookie_based_authentication_enabled'
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        :'_self' => :'SelfResourceLink',
        :'_links' => :'Array<ResourceLink>',
        :'_schema' => :'String',
        :'_revision' => :'Integer',
        :'resource_type' => :'String',
        :'_create_user' => :'String',
        :'_create_time' => :'Integer',
        :'_last_modified_user' => :'String',
        :'_last_modified_time' => :'Integer',
        :'_system_owned' => :'BOOLEAN',
        :'_protection' => :'String',
        :'id' => :'String',
        :'display_name' => :'String',
        :'description' => :'String',
        :'tags' => :'Array<Tag>',
        :'session_timeout' => :'Integer',
        :'connection_timeout' => :'Integer',
        :'protocol_versions' => :'Array<ProtocolVersion>',
        :'cipher_suites' => :'Array<CipherSuite>',
        :'redirect_host' => :'String',
        :'client_api_rate_limit' => :'Integer',
        :'global_api_concurrency_limit' => :'Integer',
        :'client_api_concurrency_limit' => :'Integer',
        :'lockout_immune_addresses' => :'Array<String>',
        :'basic_authentication_enabled' => :'BOOLEAN',
        :'cookie_based_authentication_enabled' => :'BOOLEAN'
      }
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h| h[k.to_sym] = v }

      if attributes.has_key?(:'_self')
        self._self = attributes[:'_self']
      end

      if attributes.has_key?(:'_links')
        if (value = attributes[:'_links']).is_a?(Array)
          self._links = value
        end
      end

      if attributes.has_key?(:'_schema')
        self._schema = attributes[:'_schema']
      end

      if attributes.has_key?(:'_revision')
        self._revision = attributes[:'_revision']
      end

      if attributes.has_key?(:'resource_type')
        self.resource_type = attributes[:'resource_type']
      end

      if attributes.has_key?(:'_create_user')
        self._create_user = attributes[:'_create_user']
      end

      if attributes.has_key?(:'_create_time')
        self._create_time = attributes[:'_create_time']
      end

      if attributes.has_key?(:'_last_modified_user')
        self._last_modified_user = attributes[:'_last_modified_user']
      end

      if attributes.has_key?(:'_last_modified_time')
        self._last_modified_time = attributes[:'_last_modified_time']
      end

      if attributes.has_key?(:'_system_owned')
        self._system_owned = attributes[:'_system_owned']
      end

      if attributes.has_key?(:'_protection')
        self._protection = attributes[:'_protection']
      end

      if attributes.has_key?(:'id')
        self.id = attributes[:'id']
      end

      if attributes.has_key?(:'display_name')
        self.display_name = attributes[:'display_name']
      end

      if attributes.has_key?(:'description')
        self.description = attributes[:'description']
      end

      if attributes.has_key?(:'tags')
        if (value = attributes[:'tags']).is_a?(Array)
          self.tags = value
        end
      end

      if attributes.has_key?(:'session_timeout')
        self.session_timeout = attributes[:'session_timeout']
      else
        self.session_timeout = 1800
      end

      if attributes.has_key?(:'connection_timeout')
        self.connection_timeout = attributes[:'connection_timeout']
      else
        self.connection_timeout = 30
      end

      if attributes.has_key?(:'protocol_versions')
        if (value = attributes[:'protocol_versions']).is_a?(Array)
          self.protocol_versions = value
        end
      end

      if attributes.has_key?(:'cipher_suites')
        if (value = attributes[:'cipher_suites']).is_a?(Array)
          self.cipher_suites = value
        end
      end

      if attributes.has_key?(:'redirect_host')
        self.redirect_host = attributes[:'redirect_host']
      else
        self.redirect_host = ''
      end

      if attributes.has_key?(:'client_api_rate_limit')
        self.client_api_rate_limit = attributes[:'client_api_rate_limit']
      else
        self.client_api_rate_limit = 100
      end

      if attributes.has_key?(:'global_api_concurrency_limit')
        self.global_api_concurrency_limit = attributes[:'global_api_concurrency_limit']
      else
        self.global_api_concurrency_limit = 199
      end

      if attributes.has_key?(:'client_api_concurrency_limit')
        self.client_api_concurrency_limit = attributes[:'client_api_concurrency_limit']
      else
        self.client_api_concurrency_limit = 40
      end

      if attributes.has_key?(:'lockout_immune_addresses')
        if (value = attributes[:'lockout_immune_addresses']).is_a?(Array)
          self.lockout_immune_addresses = value
        end
      end

      if attributes.has_key?(:'basic_authentication_enabled')
        self.basic_authentication_enabled = attributes[:'basic_authentication_enabled']
      else
        self.basic_authentication_enabled = true
      end

      if attributes.has_key?(:'cookie_based_authentication_enabled')
        self.cookie_based_authentication_enabled = attributes[:'cookie_based_authentication_enabled']
      else
        self.cookie_based_authentication_enabled = true
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      if !@display_name.nil? && @display_name.to_s.length > 255
        invalid_properties.push('invalid value for "display_name", the character length must be smaller than or equal to 255.')
      end

      if !@description.nil? && @description.to_s.length > 1024
        invalid_properties.push('invalid value for "description", the character length must be smaller than or equal to 1024.')
      end

      if !@session_timeout.nil? && @session_timeout > 2147483647
        invalid_properties.push('invalid value for "session_timeout", must be smaller than or equal to 2147483647.')
      end

      if !@session_timeout.nil? && @session_timeout < 0
        invalid_properties.push('invalid value for "session_timeout", must be greater than or equal to 0.')
      end

      if !@connection_timeout.nil? && @connection_timeout > 2147483647
        invalid_properties.push('invalid value for "connection_timeout", must be smaller than or equal to 2147483647.')
      end

      if !@connection_timeout.nil? && @connection_timeout < 0
        invalid_properties.push('invalid value for "connection_timeout", must be greater than or equal to 0.')
      end

      if !@redirect_host.nil? && @redirect_host !~ Regexp.new(/^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$|^$/)
        invalid_properties.push('invalid value for "redirect_host", must conform to the pattern /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$|^$/.')
      end

      if !@client_api_rate_limit.nil? && @client_api_rate_limit < 0
        invalid_properties.push('invalid value for "client_api_rate_limit", must be greater than or equal to 0.')
      end

      if !@global_api_concurrency_limit.nil? && @global_api_concurrency_limit < 0
        invalid_properties.push('invalid value for "global_api_concurrency_limit", must be greater than or equal to 0.')
      end

      if !@client_api_concurrency_limit.nil? && @client_api_concurrency_limit < 0
        invalid_properties.push('invalid value for "client_api_concurrency_limit", must be greater than or equal to 0.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false if !@display_name.nil? && @display_name.to_s.length > 255
      return false if !@description.nil? && @description.to_s.length > 1024
      return false if !@session_timeout.nil? && @session_timeout > 2147483647
      return false if !@session_timeout.nil? && @session_timeout < 0
      return false if !@connection_timeout.nil? && @connection_timeout > 2147483647
      return false if !@connection_timeout.nil? && @connection_timeout < 0
      return false if !@redirect_host.nil? && @redirect_host !~ Regexp.new(/^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$|^$/)
      return false if !@client_api_rate_limit.nil? && @client_api_rate_limit < 0
      return false if !@global_api_concurrency_limit.nil? && @global_api_concurrency_limit < 0
      return false if !@client_api_concurrency_limit.nil? && @client_api_concurrency_limit < 0
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] display_name Value to be assigned
    def display_name=(display_name)
      if !display_name.nil? && display_name.to_s.length > 255
        fail ArgumentError, 'invalid value for "display_name", the character length must be smaller than or equal to 255.'
      end

      @display_name = display_name
    end

    # Custom attribute writer method with validation
    # @param [Object] description Value to be assigned
    def description=(description)
      if !description.nil? && description.to_s.length > 1024
        fail ArgumentError, 'invalid value for "description", the character length must be smaller than or equal to 1024.'
      end

      @description = description
    end

    # Custom attribute writer method with validation
    # @param [Object] session_timeout Value to be assigned
    def session_timeout=(session_timeout)
      if !session_timeout.nil? && session_timeout > 2147483647
        fail ArgumentError, 'invalid value for "session_timeout", must be smaller than or equal to 2147483647.'
      end

      if !session_timeout.nil? && session_timeout < 0
        fail ArgumentError, 'invalid value for "session_timeout", must be greater than or equal to 0.'
      end

      @session_timeout = session_timeout
    end

    # Custom attribute writer method with validation
    # @param [Object] connection_timeout Value to be assigned
    def connection_timeout=(connection_timeout)
      if !connection_timeout.nil? && connection_timeout > 2147483647
        fail ArgumentError, 'invalid value for "connection_timeout", must be smaller than or equal to 2147483647.'
      end

      if !connection_timeout.nil? && connection_timeout < 0
        fail ArgumentError, 'invalid value for "connection_timeout", must be greater than or equal to 0.'
      end

      @connection_timeout = connection_timeout
    end

    # Custom attribute writer method with validation
    # @param [Object] redirect_host Value to be assigned
    def redirect_host=(redirect_host)
      if !redirect_host.nil? && redirect_host !~ Regexp.new(/^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$|^$/)
        fail ArgumentError, 'invalid value for "redirect_host", must conform to the pattern /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$|^$/.'
      end

      @redirect_host = redirect_host
    end

    # Custom attribute writer method with validation
    # @param [Object] client_api_rate_limit Value to be assigned
    def client_api_rate_limit=(client_api_rate_limit)
      if !client_api_rate_limit.nil? && client_api_rate_limit < 0
        fail ArgumentError, 'invalid value for "client_api_rate_limit", must be greater than or equal to 0.'
      end

      @client_api_rate_limit = client_api_rate_limit
    end

    # Custom attribute writer method with validation
    # @param [Object] global_api_concurrency_limit Value to be assigned
    def global_api_concurrency_limit=(global_api_concurrency_limit)
      if !global_api_concurrency_limit.nil? && global_api_concurrency_limit < 0
        fail ArgumentError, 'invalid value for "global_api_concurrency_limit", must be greater than or equal to 0.'
      end

      @global_api_concurrency_limit = global_api_concurrency_limit
    end

    # Custom attribute writer method with validation
    # @param [Object] client_api_concurrency_limit Value to be assigned
    def client_api_concurrency_limit=(client_api_concurrency_limit)
      if !client_api_concurrency_limit.nil? && client_api_concurrency_limit < 0
        fail ArgumentError, 'invalid value for "client_api_concurrency_limit", must be greater than or equal to 0.'
      end

      @client_api_concurrency_limit = client_api_concurrency_limit
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          _self == o._self &&
          _links == o._links &&
          _schema == o._schema &&
          _revision == o._revision &&
          resource_type == o.resource_type &&
          _create_user == o._create_user &&
          _create_time == o._create_time &&
          _last_modified_user == o._last_modified_user &&
          _last_modified_time == o._last_modified_time &&
          _system_owned == o._system_owned &&
          _protection == o._protection &&
          id == o.id &&
          display_name == o.display_name &&
          description == o.description &&
          tags == o.tags &&
          session_timeout == o.session_timeout &&
          connection_timeout == o.connection_timeout &&
          protocol_versions == o.protocol_versions &&
          cipher_suites == o.cipher_suites &&
          redirect_host == o.redirect_host &&
          client_api_rate_limit == o.client_api_rate_limit &&
          global_api_concurrency_limit == o.global_api_concurrency_limit &&
          client_api_concurrency_limit == o.client_api_concurrency_limit &&
          lockout_immune_addresses == o.lockout_immune_addresses &&
          basic_authentication_enabled == o.basic_authentication_enabled &&
          cookie_based_authentication_enabled == o.cookie_based_authentication_enabled
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [_self, _links, _schema, _revision, resource_type, _create_user, _create_time, _last_modified_user, _last_modified_time, _system_owned, _protection, id, display_name, description, tags, session_timeout, connection_timeout, protocol_versions, cipher_suites, redirect_host, client_api_rate_limit, global_api_concurrency_limit, client_api_concurrency_limit, lockout_immune_addresses, basic_authentication_enabled, cookie_based_authentication_enabled].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.swagger_types.each_pair do |key, type|
        if type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :DateTime
        DateTime.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :BOOLEAN
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        temp_model = Nsxt9PolicyClient.const_get(type).new
        temp_model.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        next if value.nil?
        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end
end
