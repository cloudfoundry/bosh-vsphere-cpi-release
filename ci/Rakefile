$LOAD_PATH.unshift(File.join(__dir__, 'lib'))

require 'open3'
require 'time'
require 'shellwords'

require 'ci/pipeline'
require 'ci/pool'
require 'ci/target'

file 'pipeline.yml' => FileList['pipeline/*.yml.erb', 'config.rb'] do |t|
  $pipeline = Pipeline.new
  load 'config.rb'
  File.write(t.name, $pipeline.render)
end

desc 'Create or update the pipeline configuration'
task :pipeline, [:name] => 'pipeline.yml' do |t, args|
  # Default to the unexpired target expiring furthest in the future known to
  # `fly`
  concourse_target = ENV.fetch('CONCOURSE') do
    authorized = Target.list.select { |t| t.expiry > Time.now }
    unless (target = authorized.max_by(&:expiry))
      raise 'No Concourse target specified and all targets are expired'
    end

    target.name
  end

  # Get the git remote url
  url = ENV.fetch('REPO') { 'https://github.com/cloudfoundry/bosh-vsphere-cpi-release.git' }

  # Get the git branch name
  branch = ENV.fetch('BRANCH') { `git symbolic-ref -q --short HEAD`.strip }

  # Set the pipeline name to be vsphere-cpi when on the master branch or
  # vcpi-#{branch} when on another branch. If the branch name is
  # indeterminate (because HEAD is detached) then the pipeline name must be
  # provided as the name argument to this task.
  args.with_defaults(name: ENV.fetch('PIPELINE') do
    raise 'Pipeline name must be specified if HEAD is detached' if branch.empty?

    branch == 'master' ? 'vsphere-cpi' : "vcpi-#{branch}"
  end)

  # Default to master if the branch name is indeterminate (because HEAD is
  # detached).
  branch = !branch.empty? ? branch : 'master'

  sh '/bin/bash', '-ec', [
    "fly -t #{concourse_target.shellescape} set-pipeline",
    '--team main',
    "-p #{args.name.shellescape}",
    "-c #{t.prerequisites.first.shellescape}",
    "-v vcpi_url=#{url.shellescape}",
    "-v vcpi_branch=#{branch.shellescape}",
    # Set the trigger for delivery job based on which branch it is.
    # Only master branch should trigger delivery jobs.
    "--yaml-var trigger_delivery_job=#{branch == 'master'}"
  ].join(' ')
end

task default: :pipeline
