# fly -t bosh-ecosystem sp -p vcpi-testbed-cleanup -c ci/pipeline/vcpi-testbed-cleanup.yml
---
resources:
  - name: every-day
    type: time
    tags: [nimbus]
    icon: clock-outline
    source:
      start: "1:00 AM"
      stop:  "4:00 AM"
      location: America/Los_Angeles
      interval: 24h

jobs:
  - name: cleanup
    public: true
    plan:
      - get: every-day
        trigger: true
        tags: [nimbus]
      - task: cleanup
        tags: [nimbus]
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: vmlib-docker-dev-local.packages.vcfd.broadcom.net/nimbus-core/nimbus-worker/nimbus-worker-ruby27 }
          run:
            path: /bin/bash
            args:
              - -exuc
              - |
                TESTBED_FILE=~/testbed.txt
                export USER=svc.bosh-ecosystem

                # gawk is necessary for the gensub function used in the awk block.
                apt-get update
                apt-get install -y gawk

                for DATACENTER in lvn; do
                  set +e # nimbus-ctl is quick to throw an error, but usually it's not fatal for our purposes, e.g. "Command 'list' does not finish within 600 seconds on sc2-04-vc17"
                  NIMBUS_LOCATION=$DATACENTER nimbus-ctl --testbed list > $TESTBED_FILE-$DATACENTER
                  set -e
                  sort -k 2 < $TESTBED_FILE-$DATACENTER | # sort by testbed name
                    grep -v "^ " | # remove the VMs, keep only the testbed info
                    grep -v "svc.tas" | # don't kill the MaaS testbeds
                    grep -v "lease expires at unknown" | # ignore zombie testbeds which have no VMs
                    sed 's=^[^:]*:  *==;s=(ID:.*==' | # get the testbed name
                    awk -v DATACENTER=$DATACENTER '
                      BEGIN { OLD_TESTBED=""; OLD_TESTBED_TIMESTAMP="" }
                      {
                        CURRENT_TESTBED=gensub(/-[0-9]+$/, "", 1)
                        CURRENT_TESTBED_TIMESTAMP = gensub(/.*-([0-9]+)$/, "\\1", 1)
                        if ( OLD_TESTBED != "" ) {
                           if ( OLD_TESTBED != CURRENT_TESTBED ) {
                        print "# skipping " OLD_TESTBED "-" OLD_TESTBED_TIMESTAMP " because it is the most recent"
                           } else {
                        print "nimbus-ctl --nimbusLocation " DATACENTER " --testbed kill " OLD_TESTBED "-" OLD_TESTBED_TIMESTAMP
                        system("nimbus-ctl --nimbusLocation " DATACENTER " --testbed kill " OLD_TESTBED "-" OLD_TESTBED_TIMESTAMP)
                           }
                        }
                        OLD_TESTBED = CURRENT_TESTBED
                        OLD_TESTBED_TIMESTAMP = CURRENT_TESTBED_TIMESTAMP
                      }
                      END { print "# skipping " OLD_TESTBED "-" OLD_TESTBED_TIMESTAMP " because it is the most recent" }
                  '
                done
