groups:
  - name: all
    jobs:
      - unit-test
      - pre-bats-fan-in
      - bats-policy
      - bats
      - bats-70-cvds
      - bats-80-cvds
      - pre-release-fan-in
      - promote-candidate
      - bump-deps
      - bump-bosh-packages
      - release-new-patch
      - release-new-minor
      - release-new-major
      - automatically-release-new-patch
      - build-vcpi-main-image
      <% each_pool do |pool| %>
      - <%= "lifecycle-#{pool}" %>
      <% end %>

  - name: images
    jobs:
      - build-vcpi-main-image

jobs:
  - name: build-vcpi-main-image
    plan:
      - in_parallel:
          - get: source-ci
          - get: source-ci-docker
            trigger: true
          - get: bosh-golang-release-registry-image
            trigger: true
          - get: oci-build-task-registry-image
          - get: bosh-cli
            params:
              globs:
                - "unique-nonexisting-glob"
      - load_var: bosh-cli-version
        file: bosh-cli/version
      - task: generate-docker-config
        image: oci-build-task-registry-image
        config:
          platform: linux
          outputs:
            - name: docker-config
          run:
            path: /bin/sh
            args:
              - -c
              - |-
                cat <<EOF > docker-config/config.json
                {
                  "auths": {
                    "https://registry-1.docker.io/v2/": {
                      "auth": "$(echo -n '((docker.username)):((docker.password))' | base64)"
                    }
                  }
                }
                EOF
      - task: build
        image: oci-build-task-registry-image
        config:
          inputs:
            - name: source-ci
            - name: docker-config
          outputs:
            - name: image
          params:
            BUILD_ARG_BOSH_CLI_VERSION: ((.:bosh-cli-version))
            CONTEXT: source-ci/
            DOCKER_CONFIG: docker-config
            DOCKERFILE: source-ci/ci/docker/Dockerfile
            IMAGE_PLATFORM: linux/amd64
            OUTPUT_OCI: true
          platform: linux
          run:
            path: build
        privileged: true
      - put: vcpi-main-image
        params:
          image: image/image

  - name: unit-test
    plan:
    - in_parallel:
      - get: source-ci
        tags: [nimbus]
      - get: bosh-cpi-src
        tags: [nimbus]
        trigger: true
      - get: vcpi-main-image
      - get: python_2_7_image
    - in_parallel:
      - task: test-pyvmomi_to_ruby
        tags: [nimbus]
        file: source-ci/ci/tasks/test-pyvmomi_to_ruby.yml
        image: python_2_7_image
      - task: unit-test
        tags: [nimbus]
        file: source-ci/ci/tasks/unit-test.yml
        image: vcpi-main-image

<% each_pool do |pool| -%>
<%= render('partition', pool: pool) %>
<% end -%>

  - name: pre-bats-fan-in
    plan:
    - in_parallel:
      - get: bosh-cpi-src
        trigger: true
        passed:
        - lifecycle-7.0-nsxt30
        - lifecycle-7.0-nsxt31
        - lifecycle-7.0-nsxt31-cvds
        - lifecycle-8.0-nsxt40-cvds
        - lifecycle-8.0-nsxt41-cvds
#        - lifecycle-8.pre-release-nsxt41-cvds

  - name: bats-policy
    serial: true
    plan:
      - in_parallel:
          - get: source-ci
            tags: [nimbus]
          - {get: bosh-release,             trigger: false, tags: [nimbus], resource: old-bosh-release}
          - {get: stemcell,                 trigger: false, tags: [nimbus]}
          - {get: certification,            trigger: false, tags: [nimbus]}
          - {get: bosh-deployment,          trigger: false, tags: [nimbus]}
          - {get: bats,                     trigger: false, tags: [nimbus]}
          - get: bosh-cli
            params:
              globs:
              - 'bosh-cli-*-linux-amd64'
            tags: [nimbus]
          - get: vcpi-main-image
          - get: bosh-cpi-src
            tags: [nimbus]
            passed: [pre-bats-fan-in]
            trigger: true
          - put: environment
            tags: [broadcom]
            resource: pool-7.0-nsxt31-policy
            inputs: detect
            params: {acquire: true}
            on_failure:
              put: pool-7.0-nsxt31-policy
              tags: [broadcom]
              params : {release: environment}
      - task: build
        file: source-ci/ci/tasks/build-candidate.yml
        image: vcpi-main-image
      - task: prepare-director-policy
        tags: [nimbus]
        file: source-ci/ci/tasks/prepare-director-policy.yml
        image: vcpi-main-image
        params:
          OPTIONAL_OPS_FILE:  |
            -o certification/shared/assets/ops/remove-hm.yml
            -o bosh-deployment/vsphere/resource-pool.yml
            -o certification/shared/assets/ops/remove-provider-cert.yml
      - do:
          - task: deploy-director
            tags: [nimbus]
            file: source-ci/ci/tasks/deploy-director.yml
            image: vcpi-main-image
          - task: run-bats
            tags: [nimbus]
            file: source-ci/ci/tasks/run-bats-policy.yml
            image: vcpi-main-image
            params:
              BAT_INFRASTRUCTURE: vsphere
              BAT_RSPEC_FLAGS:    "--tag ~dns --tag ~vip_networking --tag ~dynamic_networking --tag ~root_partition --tag ~raw_ephemeral_storage"
              STEMCELL_NAME:      bosh-vsphere-esxi-ubuntu-jammy-go_agent
        on_failure:
          in_parallel:
          - put: pool-7.0-nsxt31-policy
            tags: [broadcom]
            inputs: detect
            params : {remove: environment}
        on_success:
          put: pool-7.0-nsxt31-policy
          tags: [broadcom]
          inputs: detect
          params : {release: environment}
        ensure:
          do:
            - task: teardown
              tags: [nimbus]
              file: source-ci/ci/tasks/teardown.yml
              image: vcpi-main-image

  - name: bats
    serial: true
    plan:
      - in_parallel:
        - get: source-ci
          tags: [nimbus]
        - {get: bosh-release,             trigger: false, tags: [nimbus], resource: old-bosh-release}
        - {get: stemcell,                 trigger: false, tags: [nimbus], resource: stemcell}
        - {get: certification,            trigger: false, tags: [nimbus]}
        - {get: bosh-deployment,          trigger: false, tags: [nimbus]}
        - {get: bats,                     trigger: false, tags: [nimbus]}
        - get: bosh-cli
          params:
            globs:
            - 'bosh-cli-*-linux-amd64'
          tags: [nimbus]
        - get: vcpi-main-image
        - get: bosh-cpi-src
          tags: [nimbus]
          passed: [pre-bats-fan-in]
          trigger: true
        - put: environment
          tags: [broadcom]
          resource: pool-7.0-nsxt31
          inputs: detect
          params: {acquire: true}
          on_failure:
            put: pool-7.0-nsxt31
            tags: [broadcom]
            inputs: detect
            params : {release: environment}
      - task: build
        file: source-ci/ci/tasks/build-candidate.yml
        image: vcpi-main-image
      - task: prepare-director
        tags: [nimbus]
        file: source-ci/ci/tasks/prepare-director.yml
        image: vcpi-main-image
        params:
          OPTIONAL_OPS_FILE:  |
            -o certification/shared/assets/ops/remove-hm.yml
            -o bosh-deployment/vsphere/resource-pool.yml
            -o certification/shared/assets/ops/remove-provider-cert.yml
      - do:
        - task: deploy-director
          tags: [nimbus]
          file: source-ci/ci/tasks/deploy-director.yml
          image: vcpi-main-image
        - task: run-bats
          tags: [nimbus]
          file: source-ci/ci/tasks/run-bats.yml
          image: vcpi-main-image
          params:
            BAT_INFRASTRUCTURE: vsphere
            BAT_RSPEC_FLAGS:    "--tag ~dns --tag ~vip_networking --tag ~dynamic_networking --tag ~root_partition --tag ~raw_ephemeral_storage"
            STEMCELL_NAME:      bosh-vsphere-esxi-ubuntu-jammy-go_agent
        on_failure:
          in_parallel:
          - put: pool-7.0-nsxt31
            tags: [broadcom]
            inputs: detect
            params : {remove: environment}
        on_success:
          put: pool-7.0-nsxt31
          tags: [broadcom]
          inputs: detect
          params : {release: environment}
        ensure:
          do:
            - task: teardown
              tags: [nimbus]
              file: source-ci/ci/tasks/teardown.yml
              image: vcpi-main-image

  - name: bats-70-cvds
    serial: true
    plan:
      - in_parallel:
          - get: source-ci
            tags: [nimbus]
          - {get: bosh-release,             trigger: false, tags: [nimbus], resource: old-bosh-release}
          - {get: stemcell,                 trigger: false, tags: [nimbus]}
          - {get: certification,            trigger: false, tags: [nimbus]}
          - {get: bosh-deployment,          trigger: false, tags: [nimbus]}
          - {get: bats,                     trigger: false, tags: [nimbus]}
          - get: bosh-cli
            params:
              globs:
              - 'bosh-cli-*-linux-amd64'
            tags: [nimbus]
          - get: vcpi-main-image
          - get: bosh-cpi-src
            tags: [nimbus]
            passed: [pre-bats-fan-in]
            trigger: true
          - put: environment
            tags: [broadcom]
            resource: pool-7.0-nsxt31-cvds
            inputs: detect
            params: {acquire: true}
            on_failure:
              put: pool-7.0-nsxt31-cvds
              tags: [broadcom]
              inputs: detect
              params : {release: environment}
      - task: build
        file: source-ci/ci/tasks/build-candidate.yml
        image: vcpi-main-image
      - task: prepare-director
        tags: [nimbus]
        file: source-ci/ci/tasks/prepare-director.yml
        image: vcpi-main-image
        params:
          OPTIONAL_OPS_FILE:  |
            -o certification/shared/assets/ops/remove-hm.yml
            -o bosh-deployment/vsphere/resource-pool.yml
            -o certification/shared/assets/ops/remove-provider-cert.yml
      - do:
          - task: deploy-director
            tags: [nimbus]
            file: source-ci/ci/tasks/deploy-director.yml
            image: vcpi-main-image
          - task: run-bats
            tags: [nimbus]
            file: source-ci/ci/tasks/run-bats-cvds.yml
            image: vcpi-main-image
            params:
              BAT_INFRASTRUCTURE: vsphere
              BAT_RSPEC_FLAGS:    "--tag ~dns --tag ~vip_networking --tag ~dynamic_networking --tag ~root_partition --tag ~raw_ephemeral_storage"
              STEMCELL_NAME:      bosh-vsphere-esxi-ubuntu-jammy-go_agent
        on_failure:
          in_parallel:
            - put: pool-7.0-nsxt31-cvds
              tags: [broadcom]
              inputs: detect
              params : {remove: environment}
        on_success:
          put: pool-7.0-nsxt31-cvds
          tags: [broadcom]
          inputs: detect
          params : {release: environment}
        ensure:
          do:
            - task: teardown
              tags: [nimbus]
              file: source-ci/ci/tasks/teardown.yml
              image: vcpi-main-image

  - name: bats-80-cvds
    serial: true
    plan:
      - in_parallel:
          - get: source-ci
            tags: [nimbus]
          - {get: bosh-release,             trigger: false, tags: [nimbus], resource: old-bosh-release}
          - {get: stemcell,                 trigger: false, tags: [nimbus]}
          - {get: certification,            trigger: false, tags: [nimbus]}
          - {get: bosh-deployment,          trigger: false, tags: [nimbus]}
          - {get: bats,                     trigger: false, tags: [nimbus]}
          - get: bosh-cli
            params:
              globs:
              - 'bosh-cli-*-linux-amd64'
            tags: [nimbus]
          - get: vcpi-main-image
          - get: bosh-cpi-src
            tags: [nimbus]
            passed: [pre-bats-fan-in]
            trigger: true
          - put: environment
            tags: [broadcom]
            resource: pool-8.0-nsxt40-cvds
            inputs: detect
            params: {acquire: true}
            on_failure:
              put: pool-8.0-nsxt40-cvds
              tags: [broadcom]
              inputs: detect
              params : {release: environment}
      - task: build
        file: source-ci/ci/tasks/build-candidate.yml
        image: vcpi-main-image
      - task: prepare-director
        tags: [nimbus]
        file: source-ci/ci/tasks/prepare-director.yml
        image: vcpi-main-image
        params:
          OPTIONAL_OPS_FILE:  |
            -o certification/shared/assets/ops/remove-hm.yml
            -o bosh-deployment/vsphere/resource-pool.yml
            -o certification/shared/assets/ops/remove-provider-cert.yml
      - do:
          - task: deploy-director
            tags: [nimbus]
            file: source-ci/ci/tasks/deploy-director.yml
            image: vcpi-main-image
          - task: run-bats
            tags: [nimbus]
            file: source-ci/ci/tasks/run-bats-cvds.yml
            image: vcpi-main-image
            params:
              BAT_INFRASTRUCTURE: vsphere
              BAT_RSPEC_FLAGS:    "--tag ~dns --tag ~vip_networking --tag ~dynamic_networking --tag ~root_partition --tag ~raw_ephemeral_storage"
              STEMCELL_NAME:      bosh-vsphere-esxi-ubuntu-jammy-go_agent
        on_failure:
          in_parallel:
            - put: pool-8.0-nsxt40-cvds
              tags: [broadcom]
              inputs: detect
              params : {remove: environment}
        on_success:
          put: pool-8.0-nsxt40-cvds
          tags: [broadcom]
          inputs: detect
          params : {release: environment}
        ensure:
          do:
            - task: teardown
              tags: [nimbus]
              file: source-ci/ci/tasks/teardown.yml
              image: vcpi-main-image

  - name: pre-release-fan-in
    serial: true
    plan:
    - in_parallel:
      - get: source-ci
        tags: [nimbus]
      - get: bosh-cpi-src
        trigger: true
        tags: [nimbus]
        passed: [bats, bats-policy, bats-70-cvds, bats-80-cvds]

  - name: promote-candidate
    disable_manual_trigger: true
    serial_groups:
      - version
    plan:
    - in_parallel:
      - get: source-ci
      - get: bosh-cpi-src
        passed: [pre-release-fan-in]
      - get: release-version-semver
        trigger: true
      - get: release-notes
      - get: vcpi-main-image
      - get: bosh-shared-ci
      - get: bosh-cli-registry-image
    - task: promote
      file: bosh-shared-ci/tasks/release/create-final-release.yml
      image: bosh-cli-registry-image
      input_mapping:
        release_repo: bosh-cpi-src
        version: release-version-semver
      params:
        GIT_USER_NAME: CI Bot
        GIT_USER_EMAIL: bots@cloudfoundry.org
        PRIVATE_YML: |
          blobstore:
            provider: gcs
            options:
              credentials_source: static
              json_key: '((cloud-foundry-gcp-credentials))'
    - put: bosh-cpi-src
      inputs: detect
      params:
        repository: release_repo
        tag: release_metadata/tag-name
        rebase: true
    - put: github-release
      inputs: detect
      params:
        name: release_metadata/tag-name
        tag: release_metadata/tag-name
        body: release-notes/release-notes.md
        commitish: bosh-cpi-src/.git/ref
        generate_release_notes: true
    - put: release-notes
      inputs: detect
      params:
        file: release_metadata/empty-file

  - name: bump-deps
    plan:
    - in_parallel:
      - get: source-ci
        tags: [nimbus]
      - get: bosh-cpi-src
        tags: [nimbus]
      - get: golang-release
        tags: [nimbus]
      - get: ruby-release
        tags: [nimbus]
      - get: bosh-golang-release-registry-image
      - get: bosh-ruby-release-registry-image
      - get: weekly
        tags: [nimbus]
        trigger: true
      - get: vcpi-main-image
      - get: python_2_7_image
    - task: bump-golang-deps
      tags: [nimbus]
      image: bosh-golang-release-registry-image
      file: golang-release/ci/tasks/shared/bump-deps.yml
      input_mapping:
        input_repo: bosh-cpi-src
      output_mapping:
        output_repo: bosh-cpi-src
      params:
        GIT_USER_NAME: CI Bot
        GIT_USER_EMAIL: bots@cloudfoundry.org
        SOURCE_PATH: src/iso9660wrap
    - task: bump-gems
      tags: [nimbus]
      image: bosh-ruby-release-registry-image
      file: ruby-release/ci/tasks/shared/bump-gems.yml
      input_mapping:
        input-repo: bosh-cpi-src
      output_mapping:
        output-repo: bosh-cpi-src
      params:
        GEM_DIRS: src/vsphere_cpi
        GIT_USER_NAME: CI Bot
        GIT_USER_EMAIL: bots@cloudfoundry.org
        UPDATE_BUNDLER_VERSION: false
        PACKAGE: ruby-3.3
        VENDOR: true
    - in_parallel:
      - task: test-pyvmomi_to_ruby
        tags: [nimbus]
        file: source-ci/ci/tasks/test-pyvmomi_to_ruby.yml
        image: python_2_7_image
      - task: unit-test
        tags: [nimbus]
        file: source-ci/ci/tasks/unit-test.yml
        image: vcpi-main-image
    - put: bosh-cpi-src
      tags: [nimbus]
      inputs:
      - bosh-cpi-src
      params:
        repository: bosh-cpi-src
        rebase: true

  - name: bump-bosh-packages
    serial: true
    plan:
    - in_parallel:
      - get: bosh-cpi-src
        tags: [nimbus]
      - get: golang-release
        tags: [nimbus]
        trigger: true
      - get: ruby-release
        tags: [nimbus]
        trigger: true
      - get: bosh-golang-release-registry-image
      - get: bosh-ecosystem-concourse-image
    - task: bump-golang-packages
      tags: [nimbus]
      image: bosh-golang-release-registry-image
      file: golang-release/ci/tasks/shared/bump-golang-package.yml
      input_mapping:
        input_repo: bosh-cpi-src
      output_mapping:
        output_repo: bosh-cpi-src
      params:
        PACKAGES: [golang-1-linux, golang-1-darwin]
        PRIVATE_YML: |
          blobstore:
            provider: gcs
            options:
              credentials_source: static
              json_key: '((cloud-foundry-gcp-credentials))'
    - task: bump-ruby-package
      tags: [nimbus]
      image: bosh-ecosystem-concourse-image
      file: ruby-release/ci/tasks/shared/bump-ruby-package.yml
      input_mapping:
        bosh-release: bosh-cpi-src
      output_mapping:
        bosh-release: bosh-cpi-src
      params:
        GIT_USER_NAME: CI Bot
        GIT_USER_EMAIL: cf-bosh-eng@pivotal.io
        PACKAGE: ruby-3.3
        PRIVATE_YML: |
          blobstore:
            provider: gcs
            options:
              credentials_source: static
              json_key: '((cloud-foundry-gcp-credentials))'
        RUBY_VERSION_PATH: .ruby-version
    - put: bosh-cpi-src
      tags: [nimbus]
      params:
        repository: bosh-cpi-src
        rebase: true

  - name: release-new-patch
    serial_groups:
    - version
    plan:
    - put: release-version-semver
      params:
        bump: patch

  - name: release-new-minor
    serial_groups:
    - version
    plan:
    - put: release-version-semver
      params:
        bump: minor

  - name: release-new-major
    serial_groups:
    - version
    plan:
    - put: release-version-semver
      params:
        bump: major

  - name: automatically-release-new-patch
    serial_groups:
    - version
    plan:
    - in_parallel:
      - get: bosh-cpi-src
        trigger: true
        passed:
        - pre-release-fan-in
      - get: current-version
        resource: release-version-semver
      - get: patched-version
        resource: release-version-semver
        params:
          bump: patch
      - get: bosh-shared-ci
      - get: bosh-security-scanner-registry-image
    - try:
        task: check-for-patched-cves
        file: bosh-shared-ci/tasks/release/check-for-patched-cves.yml
        image: bosh-security-scanner-registry-image
        input_mapping:
          input_repo: bosh-cpi-src
          version: current-version
        params:
          SEVERITY: CRITICAL,HIGH
        on_success:
          do:
            - put: release-notes
              inputs: detect
              params:
                file: release-notes/release-notes.md
            - put: release-version-semver
              inputs: detect
              params:
                file: patched-version/version
    - task: ensure-cve-checker-succeeded
      file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        task-output-folder: patched_cves
    - try:
        task: check-for-updated-vendored-packages
        file: bosh-shared-ci/tasks/release/check-for-updated-vendored-packages.yml
        image: bosh-security-scanner-registry-image
        input_mapping:
          input_repo: bosh-cpi-src
          version: current-version
        params:
          PACKAGES: [ golang-1-linux ]
        on_success:
          do:
            - put: release-notes
              inputs: detect
              params:
                file: release-notes/release-notes.md
            - put: release-version-semver
              inputs: detect
              params:
                file: patched-version/version
    - task: ensure-update-package-check-succeeded
      file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        task-output-folder: package-updates

resources:
  - name: bosh-shared-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-shared-ci.git
  - name: pool-7.0-nsxt30
    tags: [broadcom]
    type: pool
    source:
      uri:          git@github.gwd.broadcom.net:TNZ/vcpi-pool.git
      branch:       main
      pool:         v7.0-nsxt30
      private_key:  ((vcpi-pool_deployment_key.private_key))
  - name: pool-7.0-nsxt31
    tags: [broadcom]
    type: pool
    source:
      uri:          git@github.gwd.broadcom.net:TNZ/vcpi-pool.git
      branch:       main
      pool:         v7.0-nsxt31
      private_key:  ((vcpi-pool_deployment_key.private_key))
  - name: pool-7.0-nsxt31-policy
    tags: [broadcom]
    type: pool
    source:
      uri:          git@github.gwd.broadcom.net:TNZ/vcpi-pool.git
      branch:       main
      pool:         v7.0-nsxt31-policy
      private_key:  ((vcpi-pool_deployment_key.private_key))
  - name: pool-7.0-nsxt31-cvds
    tags: [broadcom]
    type: pool
    source:
      uri:          git@github.gwd.broadcom.net:TNZ/vcpi-pool.git
      branch:       main
      pool:         v7.0-nsxt31-cvds
      private_key:  ((vcpi-pool_deployment_key.private_key))
  - name: pool-8.0-nsxt40-cvds
    tags: [broadcom]
    type: pool
    source:
      uri:          git@github.gwd.broadcom.net:TNZ/vcpi-pool.git
      branch:       main
      pool:         v8.0-nsxt40-cvds
      private_key:  ((vcpi-pool_deployment_key.private_key))
  - name: pool-8.0-nsxt41-cvds
    tags: [broadcom]
    type: pool
    source:
      uri:          git@github.gwd.broadcom.net:TNZ/vcpi-pool.git
      branch:       main
      pool:         v8.0-nsxt41-cvds
      private_key:  ((vcpi-pool_deployment_key.private_key))
  - name: pool-8.pre-release-nsxt41-cvds
    tags: [broadcom]
    type: pool
    source:
      uri:          git@github.gwd.broadcom.net:TNZ/vcpi-pool.git
      branch:       main
      pool:         v8.pre-release-nsxt41-cvds
      private_key:  ((vcpi-pool_deployment_key.private_key))
  - name: source-ci
    tags: [nimbus]
    type: git
    source:
      uri:         https://github.com/cloudfoundry/bosh-vsphere-cpi-release.git
      branch:      ((vcpi_branch))
      paths:       [ci]
  - name: source-ci-docker
    source:
      branch: master
      paths:
        - ci/docker
      uri: https://github.com/cloudfoundry/bosh-vsphere-cpi-release.git
      username: bosh-admin-bot
      password: ((github_public_repo_token))
    type: git
    check_every: 1h
  - name: bosh-cpi-src
    tags: [nimbus]
    type: git
    source:
      uri:         https://github.com/cloudfoundry/bosh-vsphere-cpi-release.git
      branch:      ((vcpi_branch))
      username: bosh-admin-bot
      password: ((github_read_write_token))
      ignore_paths:
      - ci
      - README.md
      - .github
      - CONTRIBUTING.md
  - name: release-version-semver
    tags: [nimbus]
    type: semver
    source:
      initial_version: "97.0.16"
      driver: git
      uri:         https://github.com/cloudfoundry/bosh-vsphere-cpi-release.git
      branch: release-semver
      file: VERSION
      username: bosh-admin-bot
      password: ((github_read_write_token))
  - name: stemcell
    tags: [nimbus]
    type: bosh-io-stemcell
    source:
      name: bosh-vsphere-esxi-ubuntu-jammy-go_agent
  - name: bosh-deployment
    tags: [nimbus]
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master
  - name: certification
    tags: [nimbus]
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-cpi-certification
      branch: master
  - name: old-bosh-release
    tags: [nimbus]
    type: bosh-io-release
    source:
      version: "271.7.0"
      repository: cloudfoundry/bosh
  - name: bosh-cli
    tags: [nimbus]
    type: github-release
    source:
      access_token: ((github_public_repo_token))
      owner: cloudfoundry
      repository: bosh-cli
  - name: bats
    tags: [nimbus]
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master
  - name: golang-release
    tags: [nimbus]
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-package-golang-release.git
  - name: ruby-release
    tags: [nimbus]
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-package-ruby-release.git
  - name: weekly
    tags: [nimbus]
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [ Saturday ]
  - name: bosh-cli-registry-image
    type: registry-image
    source:
      repository: bosh/cli
      username: ((docker.username))
      password: ((docker.password))
  - name: bosh-golang-release-registry-image
    type: registry-image
    source:
      repository: bosh/golang-release
      username: ((docker.username))
      password: ((docker.password))
  - name: bosh-security-scanner-registry-image
    type: registry-image
    source:
      repository: bosh/security-scanner
      username: ((docker.username))
      password: ((docker.password))
  - name: bosh-ruby-release-registry-image
    type: registry-image
    source:
      repository: bosh/ruby-release
      username: ((docker.username))
      password: ((docker.password))
  - name: bosh-ecosystem-concourse-image
    type: registry-image
    source:
      repository: bosh/bosh-ecosystem-concourse
      username: ((docker.username))
      password: ((docker.password))
  - name: release-notes
    type: gcs-resource
    source:
      bucket: bosh-ci-release-notes
      json_key: ((broadcom_labs_gcp_credentials_json))
      versioned_file: bosh-vsphere-cpi-release/release-notes.md
      initial_content_text: ""
  - name: github-release
    type: github-release
    source:
      owner: cloudfoundry
      repository: bosh-vsphere-cpi-release
      access_token: ((github_public_repo_token))
  - name: oci-build-task-registry-image
    type: registry-image
    source:
      repository: concourse/oci-build-task
      username: ((docker.username))
      password: ((docker.password))
  - name: vcpi-main-image
    source:
      repository: bosh/vsphere-vcpi
      tag: latest
      username: ((docker.username))
      password: ((docker.password))
    type: registry-image
  - name: python_2_7_image
    type: registry-image
    source:
      repository: python
      tag: '2.7'
      username: ((docker.username))
      password: ((docker.password))


resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource
    username: ((docker.username))
    password: ((docker.password))
