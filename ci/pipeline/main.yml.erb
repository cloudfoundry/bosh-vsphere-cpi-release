jobs:
  - name: bats-policy
    serial: true
    plan:
      - in_parallel:
          - get: source-ci
            tags: [nimbus]
          - {get: bosh-release,             trigger: false, tags: [nimbus], resource: old-bosh-release}
          - {get: stemcell,                 trigger: false, tags: [nimbus]}
          - {get: certification,            trigger: false, tags: [nimbus]}
          - {get: bosh-deployment,          trigger: false, tags: [nimbus]}
          - {get: bats,                     trigger: false, tags: [nimbus]}
          - {get: bosh-cli,                 trigger: false, tags: [nimbus]}
          - get: version-semver
            tags: [nimbus]
            trigger: false
            params: { bump: patch }
          - get: bosh-cpi-src
            tags: [nimbus]
            trigger: true
          - put: environment
            tags: [nimbus]
            resource: pool-7.0-nsxt31-policy
            params: {acquire: true}
            on_failure:
              put: pool-7.0-nsxt31-policy
              tags: [nimbus]
              params : {release: environment}

      - task: build
        tags: [nimbus]
        file: source-ci/ci/tasks/build-candidate.yml
        output_mapping:
          cpi-release: dev-artifacts
      - task: prepare-director-policy
        tags: [nimbus]
        file: source-ci/ci/tasks/prepare-director-policy.yml
        params:
          OPTIONAL_OPS_FILE:  |
            -o certification/shared/assets/ops/remove-hm.yml
            -o bosh-deployment/vsphere/resource-pool.yml
            -o certification/shared/assets/ops/remove-provider-cert.yml
      - do:
          - task: deploy-director
            tags: [nimbus]
            file: source-ci/ci/tasks/deploy-director.yml
          - task: run-bats
            tags: [nimbus]
            file: source-ci/ci/tasks/run-bats-policy.yml
            params:
              BAT_INFRASTRUCTURE: vsphere
              BAT_NETWORKING:     manual
              BAT_RSPEC_FLAGS:    "--tag ~dns --tag ~vip_networking --tag ~dynamic_networking --tag ~root_partition --tag ~raw_ephemeral_storage"
              STEMCELL_NAME:      bosh-vsphere-esxi-ubuntu-jammy-go_agent
        on_failure:
          in_parallel:
          - put: pool-7.0-nsxt31-policy
            tags: [nimbus]
            params : {remove: environment}
        on_success:
          put: pool-7.0-nsxt31-policy
          tags: [nimbus]
          params : {release: environment}
        ensure:
          do:
            - task: teardown
              tags: [nimbus]
              file: source-ci/ci/tasks/teardown.yml

resources:
  - name: pool-7.0-nsxt31-policy
    tags: [nimbus]
    type: pool
    source:
      uri:          git@gitlab.eng.vmware.com:tas-vcf-vmc-anycloud/vcpi-pool.git
      branch:       master
      pool:         v7.0-nsxt31-policy
      private_key:  ((vcpi-pool_deployment_key.private_key))
  - name: source-ci
    tags: [nimbus]
    type: git
    source:
      uri:         git@github.com:cloudfoundry/bosh-vsphere-cpi-release.git
      branch:      {{vcpi_branch}}
      private_key: ((github_deploy_key_bosh-vsphere-cpi-release.private_key))
      paths:       [ci]
  - name: bosh-cpi-src
    tags: [nimbus]
    type: git
    source:
      uri:         git@github.com:cloudfoundry/bosh-vsphere-cpi-release.git
      branch:      {{vcpi_branch}}
      private_key: ((github_deploy_key_bosh-vsphere-cpi-release.private_key))
      ignore_paths:
      - ci
      - README.md
      - .github
      - CONTRIBUTING.md
  - name: version-semver
    tags: [nimbus]
    type: semver
    source:
      key:               current-version
      bucket:            ((s3_vsphere_cpi_bucket))
      access_key_id:     ((s3_vsphere_cpi_blobwriter_assume_aws_access_key.username))
      secret_access_key: ((s3_vsphere_cpi_blobwriter_assume_aws_access_key.password))
      assume_role_arn:   ((s3_vsphere_cpi_blobwriter_assume_aws_access_key.role_arn))
  - name: stemcell
    tags: [nimbus]
    type: bosh-io-stemcell
    source:
      name: bosh-vsphere-esxi-ubuntu-jammy-go_agent
  - name: bosh-deployment
    tags: [nimbus]
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master
  - name: certification
    tags: [nimbus]
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-cpi-certification
      branch: master
  - name: old-bosh-release
    tags: [nimbus]
    type: bosh-io-release
    source:
      version: "271.7.0"
      repository: cloudfoundry/bosh
  - name: bosh-cli
    tags: [nimbus]
    type: s3
    source:
      regexp: bosh-cli-([0-9.]+)-linux-amd64
      bucket: bosh-cli-artifacts
      region_name: us-east-1
  - name: bats
    tags: [nimbus]
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master

resource_types:
- name: semver
  tags: [nimbus]
  type: docker-image
  source:
    repository: concourse/semver-resource
    tag: 1.6
- name: gcs-resource
  tags: [nimbus]
  type: docker-image
  source:
    repository: frodenas/gcs-resource
    username: ((docker.username))
    password: ((docker.password))
